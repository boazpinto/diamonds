{"version":3,"sources":["data/flat_seo3-24-512.png","data/seen-300x225.webp","data/V-512.png","data/38-383271_excel-logo-png-microsoft-excel-logo-transparent-png.png","data/icons8-delete-message-26.png","data/1c7be669e68d05366ad16b7d2b40333b-diamond-gemstone-black-icon-by-vexels.png","data/Shapes.png","data/delete-1507091-1279000.png","data/Save_Excel_Icon.jpg","data/l8cb11pkn10.jpg","components/HomePageBody.js","Classes/Message.js","components/DiamondNavbar.js","pages/home.js","Classes/User.js","components/UserMessages.js","pages/messages.js","Classes/Diamond.js","components/ListOfLinks.js","components/AddNewDiamond.js","components/ShowDiamond.js","components/Slider.js","components/SearchDiamondForm.js","components/SendMessageModal.js","components/SendOfferModal.js","components/DiamondsList.js","pages/search.js","pages/LoginPage.js","pages/Signup.js","components/PaymentForm.js","pages/ShoppingCart.js","pages/About.js","pages/Load.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","HomePageBody","Carousel","Item","className","src","alt","Caption","React","Component","Message","parseMessage","this","id","from","get","to","text","createdAt","read","deleted","recieved","usersMessages","user","allMessages","fromUser","result","new","last","messages","forEach","message","push","DiamondNavbar","props","state","redirectToHome","logout","bind","handleLogout","window","location","hash","setState","itemsInCart","pic","activeUser","cart","signupLink","Nav","Link","href","loginLink","logoutLink","onClick","Image","style","width","roundedCircle","fname","newMessages","myBadge","Badge","pill","variant","length","Navbar","bg","expand","Brand","diamondLogo","Toggle","aria-controls","Collapse","basket","Home","Container","User","parseUser","lname","email","username","isLogin","lastLogout","userDetails","allUsers","i","parseDateTime","dateTime","min","answer","today","Date","getFullYear","getMonth","getDate","getHours","getMinutes","UserMessages","filter","substring","conv","scrollTop","scrollHeight","messageRead","theSender","messageDate","addMessage","deleteMessage","markDeleted","showConversation","index","Row","Col","xl","lg","md","sm","xs","display","color","e","target","height","marginLeft","marginRight","deleteImg","recievedMessage","hidden","readMessage","fontSize","ref","element","InputGroup","FormControl","value","onChange","event","placeholder","aria-label","aria-describedby","Append","Button","Messages","filterUsers","compareFunction","a","b","lastMessageRecieved","redirectTo","listUsers","allUsersSorted","userMessages","sort","toLowerCase","includes","ListGroup","key","border","redirectToUserMessage","Diamond1","diamond","lotID","shape","weight","clarity","cut","polish","symmetry","fluorescence","fluorescenceColor","lab","certificateNumber","depth","table","crownAngle","crownHeight","pocrownHeightlish","pavillionAngle","pavillionAnglecut","pavillionDepth","starLength","lowerHalf","girdle","culet","list","listPrice","priceList","response","body","price","discount","pricePerCarat","links","inclusions","owner","keepDiscount","diamMin","diamMax","deptAvg","pic1","file","name","url","pic2","colorMin","colorMax","clarityValue","clarityMin","clarityMax","weightMin","weightMax","ListOfLinks","parse","margin","alignItems","justifyContent","deleteLink","AddDiamond","toggle","modal","handleClose","detectMouse","cx","clientX","document","clientWidth","modalWidth","getElementById","offsetWidth","ratio","disableSave","getCertNum","certNumInput","getLotId","textInput","getLab","getWCC","Number","weightInput","colorInput","clarityInput","prices","getOther","cutInput","polishInput","symmetryInput","fluorescenceInput","fluorescenceColorInput","depthInput","tableInput","girdleInput","culetInput","crownAngleInput","crownHeightInput","pavillionAngleInput","pavillionDepthInput","lowerHalfInput","getPrices","checkInput","Math","round","discountInput","priceInput","prepareLink","linktoAdd","linkToAddInput","addLink","newState","newArr","splice","imgChange","ev","diamondImg","files","URL","createObjectURL","nextPage","page","previousPage","saveDiamond","edit","myListings","setFilter","diamonds","nextProps","cancelEdit","Modal","Body","Prepend","Text","defaultValue","diamondsShape","rounded","Form","Group","controlId","Label","Control","as","column","Check","type","label","checked","data-id","accept","fluid","position","left","top","excel","size","show","onHide","animation","Header","closeButton","Title","Footer","disabled","ShowDiamond","bgColorClass","pics","description","Accordion","defaultActiveKey","backgroundColor","Card","eventKey","floor","toFixed","ownerName","measurements","children","HorizontalColorSlider","marks","max","classes","makeStyles","root","useStyles","clearColorFilter","clearClarityFilter","Fragment","Typography","gutterBottom","Slider","onChangeCommitted","val","change","orientation","aria-labelledby","getAriaValueText","num2color","num2clarity","SearchDiamondForm","toggleChoice","innerHTML","toggleAll","tglAll","setMinWeight","filter1","setMaxWeight","setColorFilter","setClarityFilter","clearTheFilter","clearFilter","br","ov","ps","mq","hs","pri","rad","em","cu","tri","asher","borderRadius","marginTop","marginBottom","Feedback","SendMessageModal","close","contactSeller","showLotId","showOwnerId","centered","rows","Alert","SendOfferModal","showPrice","DiamondList","toggleOffer","modalOffer","deleteDiamond","editDiamond","showAlert","hideAlert","setInterval","inFilter","ButtonToolbar","addToCart","Search","require","default","atEdit","console","log","diamondArr","myNewObject","Parse","Object","extend","set","current","File","save","then","concat","error","Diamond","Query","object","destroy","isLoading","newDiamond","find","diamondsParse","addEdit","LoginPage","invalidLogin","successLogin","emailInput","createRef","pwdInput","login","logIn","User1","handleLogin","catch","block","SignupPage","signup","image","userInput","lnameInput","fnameInput","signUp","PaymentForm","cvc","expiry","focus","number","handleInputFocus","handleInputChange","Jumbotron","onFocus","ShoppingCart","diamondsInCart","results","lineTotal","total","deleteFromCart","tableLines","caratTotal","priceAVG","deleteFromCartIcon","fontWeight","Table","striped","bordered","hover","About","messagearrived","messageread","cartIcon","LoadExcel","loadExcelFile","excelRows","headers","header","log1","input","readXlsxFile","getValues","parseInt","upload","headerKeys","keys","row","toString","downloadTemplet","zipcelx","filename","sheet","data","opacity","pointerEvents","excelIcon","right","excelTemplet","low_size","high_size","caratprice","App","getMessages","parseActive","parseMessages","query1","equalTo","query2","composedQuery","or","count","skip","message1","userId","fromID","toID","User2","from1","to1","query","diamondId","item","indexOf","users","logOut","ownerD","j","exact","path","Signup","Boolean","hostname","match","serverURL","initialize","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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CvK,MAAM,QACRuK,KAAM,UACL,CACCvK,MAAM,MACRuK,KAAM,UACL,CACCvK,MAAM,QACRuK,KAAM,UACL,CACCvK,MAAM,UACRuK,KAAM,UACL,CACCvK,MAAM,UACRuK,KAAM,UACL,CACCvK,MAAM,UACRuK,KAAM,UACL,CACCvK,MAAM,WACRuK,KAAM,UACL,CACCvK,MAAM,eACRuK,KAAM,UACL,CACCvK,MAAM,oBACRuK,KAAM,UACL,CACCvK,MAAM,SACRuK,KAAM,UACL,CACCvK,MAAM,MACRuK,KAAM,UACL,CACCvK,MAAM,QACRuK,KAAM,UACL,CACCvK,MAAM,YACRuK,KAAM,UACL,CACCvK,MAAM,iBACRuK,KAAM,UACL,CACCvK,MAAM,iBACRuK,KAAM,UACL,CACCvK,MAAM,SACRuK,KAAM,UACL,CACCvK,MAAM,gBACRuK,KAAM,UACL,CACCvK,MAAM,QACRuK,KAAM,UACL,CACCvK,MAAM,aACRuK,KAAM,UACL,CACCvK,MAAM,WACRuK,KAAM,UACL,CACCvK,MAAM,QACRuK,KAAM,UACL,CACCvK,MAAM,SACRuK,KAAM,WACL,CACH,CACIvK,MAAM,GACNuK,KAAM,UACL,CACCvK,MAAM,WACRuK,KAAM,UACL,CACCvK,MAAM,WACRuK,KAAM,UACL,CACCvK,MAAM,GACRuK,KAAM,UACL,CACCvK,MAAM,GACRuK,KAAM,UACL,CACCvK,MAAM,GACRuK,KAAM,UACL,CACCvK,MAAM,GACRuK,KAAM,UACL,CACCvK,MAAM,GACRuK,KAAM,UACL,CACCvK,MAAM,GACRuK,KAAM,UACL,CACCvK,MAAM,GACRuK,KAAM,UACL,CACCvK,MAAM,GACRuK,KAAM,UACL,CACCvK,MAAM,GACRuK,KAAM,UACL,CACCvK,MAAM,GACRuK,KAAM,UACL,CACCvK,MAAM,GACRuK,KAAM,UACL,CACCvK,MAAM,GACRuK,KAAM,UACL,CACCvK,MAAM,GACRuK,KAAM,UACL,CACCvK,MAAM,WACRuK,KAAM,UACL,CACCvK,MAAM,GACRuK,KAAM,UACL,CACCvK,MAAM,GACRuK,KAAM,UACL,CACCv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","file":"static/js/main.3f661cfb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/flat_seo3-24-512.b4bf43fd.png\";","module.exports = __webpack_public_path__ + \"static/media/seen-300x225.7508915c.webp\";","module.exports = __webpack_public_path__ + \"static/media/V-512.4ca5d018.png\";","module.exports = __webpack_public_path__ + \"static/media/38-383271_excel-logo-png-microsoft-excel-logo-transparent-png.bfb7fd20.png\";","module.exports = __webpack_public_path__ + \"static/media/icons8-delete-message-26.6b14a23a.png\";","module.exports = __webpack_public_path__ + \"static/media/1c7be669e68d05366ad16b7d2b40333b-diamond-gemstone-black-icon-by-vexels.53c9d042.png\";","module.exports = __webpack_public_path__ + \"static/media/Shapes.871ee084.png\";","module.exports = __webpack_public_path__ + \"static/media/delete-1507091-1279000.2c167f0b.png\";","module.exports = __webpack_public_path__ + \"static/media/Save_Excel_Icon.32ea14a0.jpg\";","module.exports = __webpack_public_path__ + \"static/media/l8cb11pkn10.705a6523.jpg\";","import React from 'react'\r\n\r\nimport { Container, Carousel } from 'react-bootstrap'\r\n\r\n//pagebody of home page\r\nexport default class HomePageBody extends React.Component {\r\n\r\n  render() {\r\n    return (\r\n      <Carousel>\r\n               <Carousel.Item>\r\n          <img\r\n            className=\"d-block w-100\"\r\n            src=\"https://file4.batdongsan.com.vn/2019/07/11/akCJKkFO/20190711181053-40bf.jpg\"\r\n            alt=\"First slide\"\r\n          />\r\n          <Carousel.Caption>\r\n            <h3>New York</h3>\r\n            <p>Directly from 47th street</p>\r\n          </Carousel.Caption>\r\n        </Carousel.Item>\r\n               <Carousel.Item>\r\n          <img\r\n            className=\"d-block w-100\"\r\n            src=\"https://en.israelidiamond.co.il/wp-content/uploads/2016/09/Israel-Diamond-Industry.jpg\"\r\n            alt=\"Second slide\"\r\n          />\r\n          <Carousel.Caption>\r\n            <h3>Israel</h3>\r\n            <p>Ramat Gan Diamond Exchange complex</p>\r\n          </Carousel.Caption>\r\n        </Carousel.Item>\r\n        <Carousel.Item>\r\n          <img\r\n            className=\"d-block w-100\"\r\n            src=\"http://www.morphogenesis.org/wp-content/uploads/2018/11/Surat-Diamond-Bourse-1.jpg\"\r\n            alt=\"Third slide\"\r\n          />\r\n          <Carousel.Caption>\r\n            <h3>India</h3>\r\n            <p>Mumbai new Diamond Exchange</p>\r\n          </Carousel.Caption>\r\n        </Carousel.Item>\r\n        <Carousel.Item>\r\n          <img\r\n            className=\"d-block w-100\"\r\n            src=\"https://metro.co.uk/wp-content/uploads/2018/02/hong-kong-skyline-getty.jpg?quality=90&strip=all\"\r\n            alt=\"Fourth slide\"\r\n          />\r\n          <Carousel.Caption>\r\n            <h3>Hong Kong</h3>\r\n            <p>The gate to china</p>\r\n          </Carousel.Caption>\r\n        </Carousel.Item>\r\n        <Carousel.Item>\r\n          <img\r\n            className=\"d-block w-100\"\r\n            src=\"https://www.abc.net.au/news/image/11038164-3x2-700x467.jpg\"\r\n            alt=\"Fifth slide\"\r\n          />\r\n          <Carousel.Caption>\r\n            <h3>List your diamonds</h3>\r\n            <p>Live selling platform with proven results</p>\r\n          </Carousel.Caption>\r\n        </Carousel.Item>\r\n        <Carousel.Item>\r\n          <img\r\n            className=\"d-block w-100\"\r\n            src=\"https://image.shutterstock.com/image-photo/brilliant-cut-diamond-held-by-260nw-1068771257.jpg\"\r\n            alt=\"Sixth slide\"\r\n          />\r\n\r\n          <Carousel.Caption>\r\n            <h3>Connect with your other dealers</h3>\r\n            <p>Messaging Platform</p>\r\n          </Carousel.Caption>\r\n        </Carousel.Item>\r\n        <Carousel.Item>\r\n          <img\r\n            className=\"d-block w-100\"\r\n            src=\"https://image.iol.co.za/image/1/process/620x349?source=http://ana-baobab-prod-eu-west-2.s3.amazonaws.com/public/ana/media/media/2017/04/21/1492781484816.jpg\"\r\n            alt=\"Third slide\"\r\n          />\r\n\r\n          <Carousel.Caption>\r\n            <h3>All shapes, all color , all clarity</h3>\r\n            <p>with or without certificates. pictures and full specs</p>\r\n          </Carousel.Caption>\r\n        </Carousel.Item>\r\n      </Carousel>\r\n      // <div className=\"marginTop\">\r\n      //   <div className=\"row  cardHolder\">\r\n      //     {/* <div className=\"col-lg-4\">\r\n      //       <div className=\"content bg-diam\">\r\n      //         <a href=\"#\">\r\n      //           <MyCard key={1} num={1} total={3} img=\"https://image.shutterstock.com/image-photo/brilliant-cut-diamond-held-by-260nw-1068771257.jpg\" label=\"Search Diamonds\" text=\"Search by any parameter, Contact the seller, Shake hands, Mazal ubracha\" />\r\n      //         </a>\r\n      //       </div>\r\n      //     </div>\r\n      //     <div className=\"col-lg-4\">\r\n      //       <div className=\"content  bg-diam\">\r\n      //         <a href=\"#\">\r\n      //           <MyCard key={1} num={2} total={3} img=\"https://image.shutterstock.com/image-photo/message-bottle-floating-ocean-260nw-667435318.jpg\" label=\"Messages\" text=\"Check and send messages to members, send ofers, Stay in touch.\" />\r\n      //         </a>\r\n      //       </div>\r\n      //     </div>\r\n      //     <div className=\"col-lg-4\">\r\n      //       <div className=\"content bg-diam\">\r\n      //         <a href=\"#\">\r\n      //           <MyCard key={1} num={3} total={3} img=\"https://image.shutterstock.com/image-photo/auction-bid-sale-judgment-mallet-260nw-1033130779.jpg\" label=\"Auction\" text=\"Join the fun and bid on any diamond in the auction list. Get lucky.\" />\r\n      //         </a>\r\n      //       </div>\r\n      //     </div> */}\r\n      //   </div>\r\n      // </div>\r\n    );\r\n  }\r\n}","\r\nexport class Message {\r\n    constructor(parseMessage) {\r\n        this.id = parseMessage.id;\r\n        this.from = parseMessage.get(\"from\");\r\n        this.to = parseMessage.get(\"to\");\r\n        this.text = parseMessage.get(\"text\");\r\n        this.createdAt = parseMessage.get(\"createdAt\");\r\n        this.read = parseMessage.get(\"read\");\r\n        this.deleted = parseMessage.get(\"deleted\");\r\n        this.recieved=parseMessage.get(\"recieved\");\r\n    }\r\n}\r\nexport function usersMessages(user, allMessages, fromUser) {\r\n    let result = {\r\n        new: 0,\r\n        last:\"\",\r\n        messages: []\r\n    };\r\n    if (user && allMessages) {\r\n        allMessages.forEach(message => {\r\n            if (message.from.id === user.id || message.to.id === user.id) {\r\n                if (fromUser&&(message.from.id === fromUser.id || message.to.id === fromUser.id)) result.messages.push(message);\r\n                if (!message.read && message.to.id === user.id && (!fromUser|| message.from.id === fromUser.id )) result.new++;\r\n                if (message.createdAt>result.last && message.to.id === user.id && fromUser && message.from.id === fromUser.id ) result.last=message.createdAt;\r\n            }\r\n\r\n\r\n        });\r\n    }\r\n    return result;\r\n}\r\n","import React from 'react'\r\nimport { Navbar, Nav,Badge,Image } from 'react-bootstrap'\r\nimport { Redirect } from 'react-router-dom'\r\nimport diamondLogo from '../data/1c7be669e68d05366ad16b7d2b40333b-diamond-gemstone-black-icon-by-vexels.png'\r\nimport {usersMessages} from '../Classes/Message'\r\nimport basket from '../data/flat_seo3-24-512.png'\r\n\r\nclass DiamondNavbar extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            redirectToHome: false\r\n        }\r\n\r\n        this.logout = this.logout.bind(this);\r\n    }\r\n\r\n    logout() {\r\n        this.props.handleLogout();\r\n\r\n        if (window.location.hash != \"#/\") {\r\n            this.setState({redirectToHome: true})\r\n        }\r\n    }\r\n\r\n    // // this function in onvoked after every render (but not the first)\r\n    // componentDidUpdate() {\r\n    //     if (this.state.redirectToHome) {\r\n    //         this.setState({redirectToHome: false})\r\n    //     }\r\n    // }\r\n\r\n    \r\n\r\n    render() {\r\n        let itemsInCart;\r\n        const { activeUser,allMessages,cart } = this.props;\r\n        const { redirectToHome } = this.state;\r\n\r\n        let pic;\r\n\r\n        if (activeUser&&activeUser.pic) { pic = activeUser.pic[\"_url\"] } else { pic = \"https://aussiegossip.com.au/wp-content/uploads/2015/11/anonymous-logo-transparent-wallpaper-4.png\" }\r\n\r\n        const signupLink = !activeUser ? <Nav.Link href=\"#/signup\">Signup</Nav.Link> : null;\r\n        const loginLink = !activeUser ? <Nav.Link href=\"#/login\">Login</Nav.Link> : null;\r\n        const logoutLink = activeUser ? <Nav.Link onClick={this.logout}><Image style={{width:\"50px\"}} src={pic} roundedCircle />{\" \"+this.props.activeUser.fname+\" Logout\"}</Nav.Link> : null;\r\n        const newMessages=usersMessages( activeUser,allMessages).new;\r\n        let myBadge=\"\";\r\n        if (newMessages){myBadge=(<Badge pill variant=\"success\">{newMessages}</Badge>)}\r\n        if (cart.length) {itemsInCart=cart.length} else {itemsInCart=\"\"};\r\n        return (\r\n            \r\n            <Navbar bg=\"light\" expand=\"lg\">\r\n                <Navbar.Brand href=\"#/\"><img className=\"logo\" src={diamondLogo}></img>Diamonds</Navbar.Brand>\r\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                    <Nav className=\"mr-auto\">\r\n                        <Nav.Link href=\"#/search\">Search</Nav.Link>\r\n                        <Nav.Link href=\"#/messages\">Messages{myBadge}</Nav.Link>\r\n                        <Nav.Link href=\"#/about\">About</Nav.Link>\r\n                    </Nav>\r\n\r\n                    <Nav className=\"ml-auto\">\r\n                    <Navbar.Brand href=\"#/cart\"><img className=\"basket\" style={{width:\"30px\"}} src={basket}></img>{itemsInCart}</Navbar.Brand>\r\n                        {signupLink}\r\n                        {loginLink}\r\n                        {logoutLink}\r\n                    </Nav>\r\n                </Navbar.Collapse>\r\n            </Navbar>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DiamondNavbar;","import React from 'react';\r\nimport {Container} from 'react-bootstrap'\r\nimport HomePageBody from '../components/HomePageBody'\r\nimport DiamondNavbar from '../components/DiamondNavbar';\r\n\r\nexport class Home extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n \r\n}\r\n    render() {\r\n      const { activeUser, handleLogout,allMessages } = this.props;\r\n\r\n      return (\r\n        <Container>\r\n          <DiamondNavbar cart={this.props.cart} allMessages={allMessages} activeUser={activeUser} handleLogout={handleLogout}/>\r\n          <HomePageBody />\r\n        </Container>\r\n      );\r\n    }\r\n  }\r\n\r\n","//user class\r\nexport default class User {\r\n    constructor(parseUser) {\r\n        this.id = parseUser.id;\r\n        this.fname = parseUser.get(\"fname\");\r\n        this.lname = parseUser.get(\"lname\");\r\n        this.email = parseUser.get(\"email\");\r\n        this.username = parseUser.get(\"username\");\r\n        this.isLogin = parseUser.get(\"isLogin\");\r\n        this.lastLogout=parseUser.get(\"lastLogout\");\r\n        this.pic=parseUser.get(\"pic\");\r\n        this.cart=parseUser.get(\"cart\");\r\n    }\r\n}\r\n\r\n\r\nexport function userDetails(id,allUsers){\r\n    for (var i=0;i<allUsers.length;i++){\r\n        if (id===allUsers[i].id) return allUsers[i];\r\n    }\r\n    return null;\r\n}","import React from 'react';\r\nimport { Container, InputGroup, FormControl, ListGroup, Image, Badge, Row, Col,Button } from 'react-bootstrap'\r\nimport HomePageBody from '../components/HomePageBody'\r\nimport DiamondNavbar from '../components/DiamondNavbar';\r\nimport { usersMessages } from '../Classes/Message'\r\nimport { userDetails } from '../Classes/User'\r\nimport deleteImg from '../data/icons8-delete-message-26.png'\r\nimport readMessage from '../data/seen-300x225.webp'\r\nimport recievedMessage from '../data/V-512.png'\r\n\r\nexport function fullMinutes(min){\r\n    if (min>9) return min;\r\n    return \"0\"+min;\r\n}\r\nexport function parseDateTime(dateTime){\r\n    let answer=\"\"\r\n const today=new Date();\r\n if (dateTime.getFullYear()!=today.getFullYear()||dateTime.getMonth()!=today.getMonth()||dateTime.getDate()!=today.getDate()) \r\n                    answer=answer+dateTime.getDate()+\"/\"+dateTime.getMonth()+\"/\"+dateTime.getFullYear()+\" \"\r\nanswer=answer+dateTime.getHours()+\":\"+fullMinutes(dateTime.getMinutes());\r\nreturn answer;\r\n}\r\n\r\n\r\n\r\nexport default class UserMessages extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            message:\"\",\r\n            filter: \"\",\r\n             id:window.location.hash.substring(11)\r\n            // id: \"Q1AKkgMzMS\"\r\n            // id:this.props.match.params.id\r\n        }\r\n    \r\n    }\r\n\r\n    componentDidMount(){\r\n        this.conv.scrollTop = this.conv.scrollHeight;\r\n        const { activeUser, allMessages,messageRead,allUsers } = this.props;\r\n        let theSender = userDetails(this.state.id, allUsers);\r\n        let conversation = usersMessages(activeUser, allMessages, theSender);\r\n        conversation.messages.forEach(message => {\r\n \r\n            if (message.from.id===theSender.id && !message.read){\r\n                messageRead(message);\r\n            }\r\n        })\r\n    }\r\n    \r\n    render() {\r\n        let messageDate;\r\n        let pic;\r\n        let index=-1;\r\n        const { activeUser, handleLogout, allUsers, allMessages, addMessage,deleteMessage,markDeleted } = this.props;\r\n        let theSender = userDetails(this.state.id, allUsers);\r\n        \r\n        if (theSender.pic) { pic = theSender.pic[\"_url\"] } else { pic = \"https://aussiegossip.com.au/wp-content/uploads/2015/11/anonymous-logo-transparent-wallpaper-4.png\" }\r\n        let showConversation = [];\r\n        let conversation = usersMessages(activeUser, allMessages, theSender);\r\n        conversation.messages.forEach(message => {\r\n            index++;\r\n            messageDate=parseDateTime(message.createdAt);\r\n            if (message.from.id === activeUser.id) {\r\n                showConversation.push(<Row>\r\n                    <Col xl=\"4\" lg=\"4\" md=\"4\" sm=\"4\" xs=\"4\" ></Col>\r\n                    <Col style={{display:\"flex\"}} xl=\"8\" lg=\"8\" md=\"8\" sm=\"8\" xs=\"8\" >\r\n                        <spam className=\"from\">\r\n                            <div style={{display:\"flex\"}}>\r\n                            <p  style={{color:\"red\"}}>You:</p>\r\n                            <img onClick={(e)=>{deleteMessage(e.target.id)}} className=\"deleteMessage\" id={message.id} style={{width:\"15px\",height:\"15px\",marginLeft:\"auto\",marginRight:\"5px\"}} src={deleteImg}></img>\r\n                            </div>\r\n                            <p>{message.text}</p>\r\n                            <div style={{display:\"flex\"}}>\r\n                            <img style={{width:\"15px\",height:\"15px\",marginRight:\"auto\",marginLeft:\"5px\"}} src={recievedMessage} hidden=\r\n                            {(message.read||!message.recieved)}\r\n                            ></img>\r\n                            <img style={{width:\"15px\",height:\"15px\",marginRight:\"auto\",marginLeft:\"5px\"}} src={readMessage} hidden={!message.read}></img>\r\n                            <p style={{fontSize:\"10px\",color:\"black\",marginLeft:\"auto\"}}>{messageDate}</p>\r\n                            </div>\r\n                        </spam>\r\n                    </Col>\r\n                </Row>)\r\n            }\r\n            else if(!message.deleted) {\r\n                showConversation.push(<Row>\r\n\r\n                    <Col xl=\"8\" lg=\"8\" md=\"8\" sm=\"8\" xs=\"8\" >\r\n                        <spam className=\"to\">\r\n                        <div style={{display:\"flex\"}}>\r\n                            <p>{theSender.fname}:</p>\r\n                            <img onClick={(e)=>{markDeleted(e.target.id)}}  className=\"deleteMessage\"  id={message.id} style={{width:\"15px\",height:\"15px\",marginLeft:\"auto\",marginRight:\"5px\"}} src={deleteImg}></img>\r\n                            </div>\r\n                            <p>{message.text}</p>\r\n                            <p style={{fontSize:\"10px\",color:\"black\",marginLeft:\"auto\"}}>{messageDate}</p>\r\n                        </spam>\r\n                    </Col>\r\n                    <Col xl=\"4\" lg=\"4\" md=\"4\" sm=\"4\" xs=\"4\" ></Col>\r\n                </Row>)\r\n            }\r\n        })\r\n        return (\r\n            <Container id=\"page-container\">\r\n                <DiamondNavbar cart={this.props.cart} allMessages={allMessages} activeUser={activeUser} handleLogout={handleLogout} />\r\n\r\n                <div className=\"userHeader\"><Image style={{ width: \"40px\" }} src={pic}></Image>{`  ${theSender.fname} ${theSender.lname}`}\r\n                </div>\r\n                <Container ref={(element)=>{this.conv=element}} className=\"body\">\r\n                    {showConversation}\r\n                </Container>\r\n                <div id=\"footer\">\r\n                    <InputGroup className=\"mb-0\">\r\n                        <FormControl\r\n                            value={this.state.message}\r\n                            onChange={(event)=>{\r\n                                let {message}=this.state;\r\n                                message=event.target.value;\r\n                                this.setState({message});\r\n                            }}\r\n                            placeholder=\"Write Something\"\r\n                            aria-label=\"User\"\r\n                            aria-describedby=\"basic-addon1\"\r\n                        />\r\n                         <InputGroup.Append>\r\n                             <Button onClick={()=>{\r\n                                     let {message}=this.state;\r\n                                    addMessage(message,activeUser.id,theSender.id);\r\n                                    message=\"\";\r\n                                    this.setState({message});\r\n                             }} \r\n                             variant=\"primary\">Send</Button>\r\n                         </InputGroup.Append>\r\n                    </InputGroup>\r\n                </div>\r\n\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\n","import React from 'react';\r\nimport { Container, InputGroup, FormControl, ListGroup,Image,Badge } from 'react-bootstrap'\r\nimport HomePageBody from '../components/HomePageBody'\r\nimport DiamondNavbar from '../components/DiamondNavbar';\r\nimport {usersMessages} from '../Classes/Message'\r\nimport { Redirect } from 'react-router-dom'\r\nimport {fullMinutes, parseDateTime} from '../components/UserMessages'\r\n\r\nexport class Messages extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            filter:\"\",\r\n            redirectTo:\"\"\r\n        }\r\n    }\r\n    filterUsers=(e)=>{\r\n        let {filter}=this.state;\r\n        filter=e.target.value;\r\n        this.setState({filter})\r\n    }\r\n    compareFunction=(a,b)=>{\r\n        if (a.new&&!b.new) {return -1}\r\n        else if (!a.new&&b.new)  {return 1}\r\n        else if (a.lastMessageRecieved>b.lastMessageRecieved) {return -1}\r\n        else return 1;\r\n    }\r\n  redirectToUserMessage(id){\r\n      let redirectTo=id;\r\n      this.setState({redirectTo});\r\n  }\r\n    render() {\r\n        if (this.state.redirectTo) {return <Redirect to={\"/messages/\"+this.state.redirectTo}/>}\r\n        const { activeUser, handleLogout, allUsers,allMessages } = this.props;\r\n        const {filter}=this.state;\r\n        let listUsers = [];\r\n        let pic;\r\n        let newMessages=\"\";\r\n        let allUsersSorted=[];\r\n        \r\n        if (!activeUser) {\r\n            return <Redirect to=\"/\" />\r\n        }\r\n\r\n        allUsers.forEach(user=>{\r\n            let userMessages=usersMessages(activeUser,allMessages,user)\r\n            allUsersSorted.push({user:user,new:userMessages.new,lastMessageRecieved:userMessages.last})\r\n        })\r\n        allUsersSorted.sort(this.compareFunction)\r\n        allUsersSorted.forEach(user => {\r\n            let lastMessageRecieved=\"\";\r\n            if (activeUser && activeUser.id!==user.user.id && ( user.user.username.toLowerCase().includes(filter.toLowerCase())||user.user.lname.toLowerCase().includes(filter.toLowerCase())||user.user.fname.toLowerCase().includes(filter.toLowerCase()))){\r\n                if (user.user.pic)  {pic=user.user.pic[\"_url\"]} else {pic=\"https://aussiegossip.com.au/wp-content/uploads/2015/11/anonymous-logo-transparent-wallpaper-4.png\"}\r\n                if (user.new) {newMessages=  <Badge pill variant=\"success\">{user.new} </Badge>} else {newMessages=\"\"}\r\n                if (user.lastMessageRecieved) lastMessageRecieved=(`${parseDateTime(user.lastMessageRecieved)}`)\r\n                listUsers.push(<ListGroup.Item key={user.user.id}\r\n                                        // style={{width:\"450px\"}}\r\n                                        >\r\n                                <div className=\"pointer\" style={{border:\"1px solid\"}} onClick={()=>{ this.redirectToUserMessage(user.user.id)}}>\r\n                                    <Image style={{height:\"50px\"}} src={pic}>\r\n                                    </Image>\r\n                                    {`  ${user.user.username}: ${user.user.fname} ${user.user.lname} `}{newMessages}{\" \"+lastMessageRecieved}\r\n                                </div>\r\n                                </ListGroup.Item>)\r\n            }\r\n        });\r\n        return (\r\n            <Container >\r\n                <DiamondNavbar cart={this.props.cart}  allMessages={allMessages}  activeUser={activeUser} handleLogout={handleLogout} />\r\n                <h3>Messages:</h3>\r\n                <InputGroup  \r\n                // style={{width:\"450px\"}} \r\n                onChange={this.filterUsers} className=\"mb-0\">\r\n                    <FormControl\r\n                   \r\n                        placeholder=\"Search user\"\r\n                        aria-label=\"User\"\r\n                        aria-describedby=\"basic-addon1\"\r\n                    />\r\n                </InputGroup>\r\n                <ListGroup>\r\n                    {listUsers}\r\n                </ListGroup>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\n","import { listPrice } from '../App'\r\nimport priceList from '../data/prices.json';\r\n\r\n//DIAMOND CLASS\r\nexport class Diamond1 {\r\n  constructor(diamond) {\r\n    this.id = diamond.id;\r\n    this.lotID = diamond.get(\"lotID\");\r\n    this.shape = diamond.get(\"shape\");\r\n    this.weight = diamond.get(\"weight\");\r\n    this.color = diamond.get(\"color\");\r\n    this.clarity = diamond.get(\"clarity\");\r\n    this.cut = diamond.get(\"cut\");\r\n    if (!this.cut) this.cut=\"\";\r\n    this.polish = diamond.get(\"polish\");\r\n    if (!this.polish) this.polish=\"\";\r\n    this.symmetry = diamond.get(\"symmetry\");\r\n    if (!this.symmetry) this.symmetry=\"\";\r\n    this.fluorescence = diamond.get(\"fluorescence\");\r\n    if (!this.fluorescence) this.fluorescence=\"\";\r\n    this.fluorescenceColor = diamond.get(\"fluorescenceColor\");\r\n    if (!this.fluorescenceColor) this.fluorescenceColor=\"\";\r\n    this.lab = diamond.get(\"lab\");\r\n    if (!this.lab) this.lab=\"\";\r\n    this.certificateNumber = diamond.get(\"certificateNumber\");\r\n    if (!this.certificateNumber) this.certificateNumber=\"\";\r\n    this.depth = diamond.get(\"depth\");\r\n    if (!this.depth) this.depth=\"\";\r\n    this.table = diamond.get(\"table\");\r\n    if (!this.table) this.table=\"\";\r\n    this.crownAngle = diamond.get(\"crownAngle\");\r\n    if (!this.crownAngle) this.crownAngle=\"\";\r\n    this.crownHeight = diamond.get(\"crownHeight\");\r\n    if (!this.crownHeight) this.pocrownHeightlish=\"\";\r\n    this.pavillionAngle = diamond.get(\"pavillionAnglecut\");\r\n    if (!this.pavillionAnglecut) this.pavillionAnglecut=\"\";\r\n    this.pavillionDepth = diamond.get(\"pavillionDepth\");\r\n    if (!this.pavillionDepth) this.pavillionDepth=\"\";\r\n    this.starLength = diamond.get(\"starLength\");\r\n    if (!this.starLength) this.starLength=\"\";\r\n    this.lowerHalf = diamond.get(\"lowerHalf\");\r\n    if (!this.lowerHalf) this.lowerHalf=\"\";\r\n    this.girdle = diamond.get(\"girdle\");\r\n    if (!this.girdle) this.girdle=\"\";\r\n    this.culet = diamond.get(\"culet\");\r\n    if (!this.culet) this.culet=\"\";\r\n    this.list = listPrice(this.shape, this.color, this.clarity, this.weight, priceList.response.body.price);\r\n    this.discount = diamond.get(\"discount\");\r\n    if (!this.discount) this.discount=\"\";\r\n    this.pricePerCarat = diamond.get(\"pricePerCarat\");\r\n    if (!this.pricePerCarat) this.pricePerCarat=\"\";\r\n    this.links = diamond.get(\"links\");\r\n    if (!this.links) this.links=[];\r\n    this.inclusions = diamond.get(\"inclusions\");\r\n    if (!this.inclusions) this.inclusions=\"\";\r\n    this.owner = diamond.get(\"owner\");\r\n    if (!this.owner) this.owner=\"\";\r\n    this.keepDiscount = diamond.get(\"keepDiscount\");\r\n    if (!this.keepDiscount) this.keepDiscount=\"\";\r\n    this.diamMin = diamond.get(\"diamMin\");\r\n    if (!this.diamMin) this.diamMin=\"\";\r\n    this.diamMax = diamond.get(\"diamMax\");\r\n    if (!this.diamMax) this.diamMax=\"\";\r\n    this.deptAvg = diamond.get(\"deptAvg\");\r\n    if (!this.deptAvg) this.deptAvg=\"\";\r\n    let pic1 = diamond.get(\"pic1\");\r\n    if (pic1) { this.pic1 = { file:pic1,name: pic1[\"_name\"], url: pic1[\"_url\"] } } else this.pic1 = {};\r\n     let pic2 = diamond.get(\"pic2\");\r\n    if (!pic2) { this.pic2 = {} } else { this.pic2 = {file:pic2, name: pic2[\"_name\"], url: pic2[\"_url\"] } }\r\n    if (this.list) {\r\n      if (!this.keepDiscount)\r\n        this.discount = 100 - 100 * (this.pricePerCarat / (this.list))\r\n      else this.pricePerCarat = this.list * (100 - this.discount) / 100\r\n    }\r\n\r\n  }\r\n  measurements() { return this.diamMin + \"-\" + this.diamMax + \"*\" + this.deptAvg }\r\n  inFilter(filter) {\r\n\r\n    if ((filter.shape.includes(this.shape)|| !filter.shape.length)\r\n      && this.color >= filter.colorMin\r\n      && this.color <= filter.colorMax\r\n      && clarityValue(this.clarity) >= clarityValue(filter.clarityMin)\r\n      && clarityValue(this.clarity) <= clarityValue(filter.clarityMax)\r\n      && (this.weight >= filter.weightMin || filter.weightMin===\"\")\r\n      && (this.weight <= filter.weightMax || filter.weightMax===\"\")) return true;\r\n\r\n    return false;\r\n  }\r\n}\r\n\r\nexport function clarityValue(clarity) {\r\n  switch (clarity) {\r\n    case \"FL\":\r\n      return 0\r\n      break;\r\n    case \"IF\":\r\n      return 1\r\n      break;\r\n    case \"VVS1\":\r\n      return 2\r\n      break;\r\n    case \"VVS2\":\r\n      return 3\r\n      break;\r\n    case \"VS1\":\r\n      return 4\r\n      break;\r\n    case \"VS2\":\r\n      return 5\r\n      break;\r\n    case \"SI1\":\r\n      return 6\r\n      break;\r\n    case \"SI2\":\r\n      return 7\r\n      break;\r\n    case \"SI3\":\r\n      return 8\r\n      break;\r\n    case \"I1\":\r\n      return 9\r\n      break;\r\n    case \"I2\":\r\n      return 10\r\n      break;\r\n    case \"I3\":\r\n      return 11\r\n      break;\r\n    default:\r\n      return false;\r\n  }\r\n}\r\nexport function colorValue(color) {\r\n  switch (color) {\r\n    case \"D\":\r\n      return 0\r\n      break;\r\n    case \"E\":\r\n      return 1\r\n      break;\r\n    case \"F\":\r\n      return 2\r\n      break;\r\n    case \"G\":\r\n      return 3\r\n      break;\r\n    case \"H\":\r\n      return 4\r\n      break;\r\n    case \"I\":\r\n      return 5\r\n      break;\r\n    case \"J\":\r\n      return 6\r\n      break;\r\n    case \"K\":\r\n      return 7\r\n      break;\r\n    case \"L\":\r\n      return 8\r\n      break;\r\n    case \"M\":\r\n      return 9\r\n      break;\r\n    case \"N\":\r\n      return 10\r\n      break;\r\n    case \"OP\":\r\n      return 11\r\n      break;\r\n    case \"QR\":\r\n      return 12\r\n      break;\r\n      case \"ST\":\r\n        return 13\r\n        break;\r\n        case \"UV\":\r\n          return 14\r\n          break;\r\n          case \"WX\":\r\n            return 15\r\n            break;\r\n            case \"YZ\":\r\n              return 16\r\n              break;\r\n    default:\r\n      return false;\r\n  }\r\n}","import React from 'react';\r\nimport { Button, Image, Row, Col } from 'react-bootstrap';\r\n\r\n\r\nclass ListOfLinks extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        let parse = [];\r\n        for (var i = 0; i < this.props.links.length; i++) {\r\n            parse.push(\r\n                <Row style={{ margin: \"10px\", border: \"1px solid green\"}}>\r\n                    <Col style={{display:\"flex\",alignItems:\"center\",justifyContent:\"center\"}} md=\"6\" sm=\"6\">\r\n                        {this.props.links[i].substring(0, 30)+\"......\"}\r\n                    </Col>\r\n                    <Col style={{display:\"flex\",alignItems:\"center\",justifyContent:\"center\"}} md=\"3\" sm=\"2\">\r\n                        <Image src={this.props.links[i]} style={{ width: \"50px\" }} />\r\n                    </Col>\r\n                    <Col style={{display:\"flex\",alignItems:\"center\",justifyContent:\"center\"}} md=\"3\" sm=\"4\">\r\n                        <Button onClick={() => { this.props.deleteLink(i) }}>\r\n                            Delete Me\r\n                                </Button>\r\n                    </Col>\r\n                </Row>);\r\n\r\n\r\n\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                {parse}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default ListOfLinks;","import React from 'react'\r\nimport { Button, Modal, InputGroup, Image, Form, Row, Col, FormControl, Container, Nav } from 'react-bootstrap'\r\nimport { listPrice } from '../App'\r\nimport { Diamond1 } from '../Classes/Diamond'\r\nimport diamondsShape from '../data/Shapes.png'\r\nimport ListOfLinks from './ListOfLinks'\r\nimport { Redirect } from 'react-router-dom'\r\nimport excel from '../data/38-383271_excel-logo-png-microsoft-excel-logo-transparent-png.png'\r\n\r\n\r\n//this class renders \r\n//1. edit/new diamond modal\r\n//2. new diamond button\r\n//3. upload from excell icon link\r\n//4. filter button to show only activeUser listings\r\n// will render only if activeUser is not null\r\n\r\nexport default class AddDiamond extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        //if modal is called for listing a new diamond\r\n        if (this.props.edit === -1 && this.props.activeUser) {\r\n            this.state = {\r\n                linktoAdd: \"\",\r\n                modal: false,\r\n                disableSave: true,\r\n                page: 0,\r\n                diamond: {\r\n                    id: \"\",\r\n                    lotID: \"\",\r\n                    shape: \"\",\r\n                    weight: \"\",\r\n                    color: \"\",\r\n                    clarity: \"\",\r\n                    cut: \"\",\r\n                    polish: \"\",\r\n                    symmetry: \"\",\r\n                    fluorescence: \"\",\r\n                    fluorescenceColor: \"\",\r\n                    lab: \"\",\r\n                    certificateNumber: \"\",\r\n                    depth: \"\",\r\n                    table: \"\",\r\n                    crownAngle: \"\",\r\n                    crownHeight: \"\",\r\n                    pavillionAngle: \"\",\r\n                    pavillionDepth: \"\",\r\n                    starLength: \"\",\r\n                    lowerHalf: \"\",\r\n                    girdle: \"\",\r\n                    culet: \"\",\r\n                    list: 0,\r\n                    discount: \"\",\r\n                    pricePerCarat: \"\",\r\n                    links: [],\r\n                    inclusions: \"\",\r\n                    keepDiscount: true,\r\n                    diamMin: \"\",\r\n                    diamMax: \"\",\r\n                    deptAvg: \"\",\r\n                    pic1: {},\r\n                    pic2: {},\r\n                    owner: this.props.activeUser.id\r\n\r\n                }\r\n            }\r\n        }\r\n        //if modal is called for editing a diamond\r\n        else if (this.props.activeUser) {\r\n            this.state = {\r\n                modal: true,\r\n                page: 0,\r\n                disableSave: true,\r\n                diamond: {\r\n                    id: this.props.diamonds[this.props.edit].id,\r\n                    lotID: this.props.diamonds[this.props.edit].lotID,\r\n                    shape: this.props.diamonds[this.props.edit].shape,\r\n                    weight: this.props.diamonds[this.props.edit].weight,\r\n                    color: this.props.diamonds[this.props.edit].color,\r\n                    clarity: this.props.diamonds[this.props.edit].clarity,\r\n                    cut: this.props.diamonds[this.props.edit].cut,\r\n                    polish: this.props.diamonds[this.props.edit].polish,\r\n                    symmetry: this.props.diamonds[this.props.edit].symmetry,\r\n                    fluorescence: this.props.diamonds[this.props.edit].fluorescence,\r\n                    fluorescenceColor: this.props.diamonds[this.props.edit].fluorescenceColor,\r\n                    lab: this.props.diamonds[this.props.edit].lab,\r\n                    certificateNumber: this.props.diamonds[this.props.edit].certificateNumber,\r\n                    depth: this.props.diamonds[this.props.edit].depth,\r\n                    table: this.props.diamonds[this.props.edit].table,\r\n                    crownAngle: this.props.diamonds[this.props.edit].crownAngle,\r\n                    crownHeight: this.props.diamonds[this.props.edit].crownHeight,\r\n                    pavillionAngle: this.props.diamonds[this.props.edit].pavillionAngle,\r\n                    pavillionDepth: this.props.diamonds[this.props.edit].pavillionDepth,\r\n                    starLength: this.props.diamonds[this.props.edit].starLength,\r\n                    lowerHalf: this.props.diamonds[this.props.edit].lowerHalf,\r\n                    girdle: this.props.diamonds[this.props.edit].girdle,\r\n                    culet: this.props.diamonds[this.props.edit].culet,\r\n                    list: this.props.diamonds[this.props.edit].list,\r\n                    discount: this.props.diamonds[this.props.edit].discount,\r\n                    pricePerCarat: this.props.diamonds[this.props.edit].pricePerCarat,\r\n                    links: this.props.diamonds[this.props.edit].links,\r\n                    inclusions: this.props.diamonds[this.props.edit].inclusions,\r\n                    keepDiscount: (this.props.diamonds[this.props.edit].keepDiscount===true),\r\n                    diamMin: this.props.diamonds[this.props.edit].diamMin,\r\n                    diamMax: this.props.diamonds[this.props.edit].diamMax,\r\n                    deptAvg: this.props.diamonds[this.props.edit].deptAvg,\r\n                    owner: this.props.diamonds[this.props.edit].owner,\r\n                    pic1: this.props.diamonds[this.props.edit].pic1,\r\n                    pic2: this.props.diamonds[this.props.edit].pic2,\r\n\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            //no activeUser\r\n            this.state = {\r\n                modal: true,\r\n                page: 0,\r\n                disableSave: true,\r\n                diamond: null\r\n            }\r\n\r\n        }\r\n    }\r\n    // if modal is called to be open again, need to read new props to decide if to edit or add new\r\n    componentWillReceiveProps(nextProps) {\r\n        let newState;\r\n        if (nextProps.edit === -1 && nextProps.activeUser) {\r\n            newState = {\r\n                modal: false,\r\n                disableSave: true,\r\n                page: 0,\r\n                diamond: {\r\n                    id: \"\",\r\n                    lotID: \"\",\r\n                    shape: \"\",\r\n                    weight: \"\",\r\n                    color: \"\",\r\n                    clarity: \"\",\r\n                    cut: \"\",\r\n                    polish: \"\",\r\n                    symmetry: \"\",\r\n                    fluorescence: \"\",\r\n                    fluorescenceColor: \"\",\r\n                    lab: \"\",\r\n                    certificateNumber: \"\",\r\n                    depth: \"\",\r\n                    table: \"\",\r\n                    crownAngle: \"\",\r\n                    crownHeight: \"\",\r\n                    pavillionAngle: \"\",\r\n                    pavillionDepth: \"\",\r\n                    starLength: \"\",\r\n                    lowerHalf: \"\",\r\n                    girdle: \"\",\r\n                    culet: \"\",\r\n                    list: 0,\r\n                    discount: \"\",\r\n                    pricePerCarat: \"\",\r\n                    links: [],\r\n                    inclusions: \"\",\r\n                    keepDiscount: true,\r\n                    diamMin: \"\",\r\n                    diamMax: \"\",\r\n                    deptAvg: \"\",\r\n                    owner: nextProps.activeUser.id,\r\n                    pic1: {},\r\n                    pic2: {}\r\n\r\n                }\r\n            }\r\n        }\r\n        else if (nextProps.activeUser) {\r\n            newState = {\r\n                modal: true,\r\n                page: 0,\r\n                disableSave: true,\r\n                diamond: nextProps.diamonds[nextProps.edit]\r\n\r\n            }\r\n        }\r\n        else {\r\n            newState = {\r\n                modal: true,\r\n                page: 0,\r\n                disableSave: true,\r\n                diamond: null\r\n            }\r\n\r\n\r\n        }\r\n        this.setState(newState)\r\n    }\r\n\r\n    //toggles modal\r\n    toggle = () => {\r\n        this.setState({\r\n            modal: !this.state.modal\r\n        });\r\n    }\r\n    //closes modal\r\n    handleClose = () => {\r\n        this.setState({\r\n            modal: false\r\n        });\r\n\r\n    }\r\n\r\n    //detects on which diamond shape the user has clicked\r\n    detectMouse = (event) => {\r\n        let { diamond } = this.state;\r\n        var cx = event.clientX;\r\n        var width = document.body.clientWidth;\r\n        // var modalWidth = $(\"#modalAdd\").width();\r\n        var modalWidth = document.getElementById(\"modalAdd\").offsetWidth;\r\n        var ratio = (cx - (width - modalWidth) / 2) / modalWidth;\r\n\r\n        if (ratio <= 0.085 && ratio >= 0.037) {\r\n            diamond.shape = \"BR\"\r\n        }\r\n        else if (ratio <= 0.154 && ratio >= 0.1) {\r\n            diamond.shape = \"PR\"\r\n        }\r\n        else if (ratio <= 0.24 && ratio >= 0.175) {\r\n            diamond.shape = \"OV\"\r\n        }\r\n        else if (ratio <= 0.34 && ratio >= 0.26) {\r\n            diamond.shape = \"MQ\"\r\n        }\r\n        else if (ratio <= 0.41 && ratio >= 0.357) {\r\n            diamond.shape = \"HS\"\r\n        }\r\n        else if (ratio <= 0.492 && ratio >= 0.43) {\r\n            diamond.shape = \"EM\"\r\n        }\r\n        else if (ratio <= 0.58 && ratio >= 0.51) {\r\n            diamond.shape = \"PS\"\r\n        }\r\n        else if (ratio <= 0.664 && ratio >= 0.61) {\r\n            diamond.shape = \"AS\"\r\n        }\r\n        else if (ratio <= 0.75 && ratio >= 0.69) {\r\n            diamond.shape = \"CU\"\r\n        }\r\n        else if (ratio <= 0.824 && ratio >= 0.77) {\r\n            diamond.shape = \"TR\"\r\n        }\r\n        else if (ratio <= 0.89 && ratio >= 0.85) {\r\n            diamond.shape = \"BG\"\r\n        }\r\n        else if (ratio <= 0.97 && ratio >= 0.91) {\r\n            diamond.shape = \"RAD\"\r\n        }\r\n        //    let page=2;\r\n        let disableSave = false;\r\n\r\n        this.setState({\r\n            // page,\r\n            disableSave,\r\n            diamond\r\n        })\r\n    }\r\n\r\n    //a few functions to read the input\r\n\r\n    getCertNum = () => {\r\n        let disableSave = false;\r\n        let { diamond } = this.state;\r\n        diamond.certificateNumber = this.certNumInput.value;\r\n        this.setState({ disableSave, diamond })\r\n    }\r\n    getLotId = () => {\r\n        let disableSave = false;\r\n        let { diamond } = this.state;\r\n        diamond.lotID = this.textInput.value\r\n\r\n        this.setState({\r\n\r\n            disableSave,\r\n            diamond\r\n        })\r\n    }\r\n    getLab = (element) => {\r\n        let disableSave = false;\r\n        let { diamond } = this.state;\r\n        let page;\r\n        diamond.lab = element.target.id;\r\n        if (element.target.id === \"None\") {\r\n            diamond.certificateNumber = \"\"\r\n        }\r\n        this.setState({\r\n            disableSave,\r\n            diamond\r\n        })\r\n    }\r\n    getWCC = () => {\r\n        let disableSave = false;\r\n        let { diamond } = this.state;\r\n\r\n        if (Number(this.weightInput.value) > 0) {\r\n            this.state.diamond.weight = Number(this.weightInput.value)\r\n        }\r\n        diamond.color = this.colorInput.value\r\n        diamond.clarity = this.clarityInput.value\r\n\r\n\r\n        if (this.state.diamond.shape && this.state.diamond.color && this.state.diamond.clarity && this.state.diamond.weight) {\r\n            diamond.list = listPrice(this.state.diamond.shape, this.state.diamond.color, this.state.diamond.clarity, this.state.diamond.weight, this.props.prices)\r\n        }\r\n        else diamond.list = 0;\r\n\r\n        this.setState({ disableSave, diamond })\r\n    }\r\n    getOther = () => {\r\n        let disableSave = false;\r\n        let { diamond } = this.state;\r\n        diamond.cut = this.cutInput.value;\r\n        diamond.polish = this.polishInput.value;\r\n        diamond.symmetry = this.symmetryInput.value;\r\n        diamond.fluorescence = this.fluorescenceInput.value;\r\n        diamond.fluorescenceColor = this.fluorescenceColorInput.value;\r\n        diamond.depth = this.depthInput.value;\r\n        diamond.table = this.tableInput.value;\r\n        diamond.girdle = this.girdleInput.value;\r\n        diamond.culet = this.culetInput.value;\r\n        diamond.crownAngle = this.crownAngleInput.value;\r\n        diamond.crownHeight = this.crownHeightInput.value;\r\n        diamond.pavillionAngle = this.pavillionAngleInput.value;\r\n        diamond.pavillionDepth = this.pavillionDepthInput.value;\r\n        diamond.lowerHalf = this.lowerHalfInput.value;\r\n\r\n        this.setState({ disableSave, diamond })\r\n    }\r\n    getPrices = () => {\r\n        let disableSave = false;\r\n        let { diamond } = this.state;\r\n\r\n        if (diamond.list) {\r\n            if (this.checkInput.value == \"on\") {\r\n                diamond.pricePerCarat = Math.round(diamond.list * (100 - Number(this.discountInput.value)) / 100);\r\n                diamond.discount = Number(this.discountInput.value);\r\n                diamond.keepDiscount = true;\r\n            }\r\n            else {\r\n                diamond.pricePerCarat = Number(this.priceInput.value);\r\n                diamond.discount = 100 - Math.round(Number(this.priceInput.value) / diamond.list * 10000) / 100;\r\n                diamond.keepDiscount = false;\r\n            }\r\n        } else {\r\n            diamond.pricePerCarat = Number(this.priceInput.value);\r\n            diamond.keepDiscount = false;\r\n        }\r\n\r\n\r\n        this.setState({ disableSave, diamond })\r\n    }\r\n    prepareLink = () => {\r\n        let linktoAdd = this.linkToAddInput.value;\r\n        this.setState({ linktoAdd })\r\n    }\r\n    addLink = () => {\r\n        let { linktoAdd, diamond } = this.state;\r\n        if (linktoAdd) {\r\n            diamond.links.push(linktoAdd);\r\n            let newState = {\r\n                linktoAdd: \"\",\r\n                disableSave: false,\r\n                diamond: diamond\r\n            }\r\n\r\n            this.setState(newState)\r\n        }\r\n    }\r\n    deleteLink = (index) => {\r\n\r\n        let { diamond } = this.state;\r\n        var newArr = diamond.links.splice(index, 1);\r\n        diamond.links = newArr\r\n        this.setState({\r\n            disableSave: false,\r\n            diamond: diamond\r\n        });\r\n    }\r\n    imgChange = (ev) => {\r\n        let { diamond, disableSave } = this.state;\r\n        disableSave = false;\r\n        let diamondImg = {};\r\n        diamondImg.file = ev.target.files[0];\r\n        if (diamondImg.file) {\r\n            diamondImg.url = URL.createObjectURL(diamondImg.file);\r\n            diamondImg.name = diamondImg.file.name\r\n        } else {\r\n            diamondImg = {};\r\n        }\r\n        if (ev.target.id === \"formFile1\") { diamond.pic1 = diamondImg } else { diamond.pic2 = diamondImg }\r\n        this.setState({ diamond, disableSave });\r\n    }\r\n    deleteImg = (ev) => {\r\n        let { diamond, disableSave } = this.state;\r\n        disableSave = false;\r\n        if (ev.target.id === \"deleteBtn1\") { diamond.pic1 = {} } else { diamond.pic2 = {} }\r\n\r\n        this.setState({ diamond, disableSave });\r\n    }\r\n\r\n    //flipping pages in the input modal   \r\n    nextPage = () => {\r\n        let { page } = this.state;\r\n        page++;\r\n\r\n        this.setState({ page })\r\n    }\r\n    previousPage = () => {\r\n        let { page } = this.state;\r\n        page--;\r\n\r\n        this.setState({ page })\r\n    }\r\n\r\n    //finish with the edit/adding of diamond\r\n\r\n    saveDiamond = () => {\r\n        const { diamond } = this.state;\r\n        const { edit } = this.props;\r\n        this.props.saveDiamond(diamond, edit)\r\n\r\n    }\r\n    //filtering to the activeuser listings only\r\n    myListings = () => {\r\n        let { filter } = this.props;\r\n        filter.owner = true;\r\n        this.props.setFilter(filter);\r\n    }\r\n\r\n    //rendering the modal input form\r\n    render() {\r\n        let pic1, pic2;\r\n        if (!this.props.activeUser || !this.state.diamond) return false;\r\n        if (this.state.diamond.pic1 !== {}) { pic1 = { name: this.state.diamond.pic1.name, url: this.state.diamond.pic1.url, hidden: false } } else pic1 = { name: null, url: null, hidden: true }\r\n        if (this.state.diamond.pic2 !== {}) { pic2 = { name: this.state.diamond.pic2.name, url: this.state.diamond.pic2.url, hidden: false } } else pic2 = { name: null, url: null, hidden: true }\r\n\r\n        let parse = [];\r\n        //if modal is closed and we are still in edit mode, cancel edit mode\r\n        if (!this.state.modal && this.props.edit !== -1) this.props.cancelEdit();\r\n\r\n        if (this.state.diamond.lotID === \"\" || this.state.diamond.shape === \"\" || this.state.diamond.weight === \"\" || this.state.diamond.color === \"\" || this.state.diamond.clarity === \"\" || this.state.page === 0) {\r\n            parse.push(\r\n                <div key={this.state.diamond.lotID}>\r\n                    <Modal.Body>Lot ID\r\n                                <InputGroup className=\"mb-3\">\r\n                            <InputGroup.Prepend>\r\n                                <InputGroup.Text id=\"basic-addon1\"></InputGroup.Text>\r\n                            </InputGroup.Prepend>\r\n                            <FormControl onChange={this.getLotId} defaultValue={this.state.diamond.lotID} ref={(element) => { this.textInput = element }}\r\n                                placeholder=\"Enter Lot ID\"\r\n                            />\r\n                        </InputGroup>Choose shape\r\n                         <Image onClick={this.detectMouse} style={{ width: \"100%\" }} src={diamondsShape} rounded />\r\n                        <h3>Shape selected: {this.state.diamond.shape}</h3>\r\n                        Weight\r\n                                 <InputGroup className=\"mb-3\">\r\n\r\n                            <FormControl onChange={this.getWCC} defaultValue={this.state.diamond.weight} ref={(element) => { this.weightInput = element }}\r\n                                placeholder=\"Carat Weight\"\r\n                            />\r\n                        </InputGroup>\r\n                        <Form.Group controlId=\"exampleForm.ControlSelect1\">\r\n                            <Form.Label>Color</Form.Label>\r\n                            <Form.Control onChange={this.getWCC} defaultValue={this.state.diamond.color} ref={(element) => { this.colorInput = element }} as=\"select\" >\r\n                                <option value=\"\"></option>\r\n                                <option value=\"D\">D</option>\r\n                                <option value=\"E\">E</option>\r\n                                <option value=\"F\">F</option>\r\n                                <option value=\"G\">G</option>\r\n                                <option value=\"H\">H</option>\r\n                                <option value=\"I\">I</option>\r\n                                <option value=\"J\">J</option>\r\n                                <option value=\"K\">K</option>\r\n                                <option value=\"L\">L</option>\r\n                                <option value=\"M\">M</option>\r\n                                <option value=\"N\">N</option>\r\n                                <option value=\"OP\">OP</option>\r\n                                <option value=\"QR\">QR</option>\r\n                                <option value=\"ST\">ST</option>\r\n                                <option value=\"UV\">UV</option>\r\n                                <option value=\"WX\">WX</option>\r\n                                <option value=\"YZ\">YZ</option>\r\n                                <option value=\"LIGHT FANCY\">F0-LIGHT FANCY</option>\r\n                                <option value=\"FANCY\">F1-FANCY</option>\r\n                                <option value=\"FANCY VIVID\">F2-FANCY VIVID</option>\r\n                                <option value=\"FANCY INTENCE\">F3-FANCY INTENCE</option>\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"exampleForm.ControlSelect1\">\r\n                            <Form.Label>Clarity</Form.Label>\r\n                            <Form.Control onChange={this.getWCC} defaultValue={this.state.diamond.clarity} ref={(element) => { this.clarityInput = element }} as=\"select\" >\r\n                                <option value=\"\"></option>\r\n                                <option value=\"FL\">FL</option>\r\n                                <option value=\"IF\">IF</option>\r\n                                <option value=\"VVS1\">VVS1</option>\r\n                                <option value=\"VVS2\">VVS2</option>\r\n                                <option value=\"VS1\">VS1</option>\r\n                                <option value=\"VS2\">VS2</option>\r\n                                <option value=\"SI1\">SI1</option>\r\n                                <option value=\"SI2\">SI2</option>\r\n                                <option value=\"SI3\">SI3</option>\r\n                                <option value=\"I1\">I1</option>\r\n                                <option value=\"I2\">I2</option>\r\n                                <option value=\"I3\">I3</option>\r\n\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n\r\n                    </Modal.Body>\r\n                </div>\r\n            )\r\n        }\r\n\r\n        else\r\n            if (this.state.diamond.lab === \"\" || this.state.page === 1) {\r\n                parse.push(\r\n\r\n                    <Modal.Body><h2>Lab</h2>\r\n                        <Row>\r\n\r\n                            <Col lg=\"2\" md=\"3\" sm=\"4\" xs=\"4\">\r\n                                <Container className=\"certChoose\">\r\n                                    <a href=\"javascript:;\">\r\n                                        <h5 className=\"h5Cert\">GIA</h5>\r\n                                        <Image id=\"GIA\" onClick={this.getLab} style={{ width: \"70px\", border: \"1px solid blue\" }} src=\"https://miro.medium.com/max/1552/1*QAU1nlE_xhhKtZqxk13qkg.png\" rounded />\r\n                                    </a >\r\n                                </Container>\r\n                            </Col>\r\n\r\n\r\n                            <Col lg=\"2\" md=\"3\" sm=\"4\" xs=\"4\">\r\n                                <Container className=\"certChoose\">\r\n                                    <a href=\"javascript:;\" >\r\n                                        <h5 className=\"h5Cert\">EGL US</h5>\r\n                                        <Image id=\"EGL USA\" onClick={this.getLab} style={{ width: \"70px\", border: \"1px solid blue\" }} src=\"https://pbs.twimg.com/profile_images/2642768167/40f68a476a1518fc8069369fa65772c5_400x400.png\" rounded />\r\n                                    </a>\r\n                                </Container>\r\n                            </Col>\r\n                            <Col lg=\"2\" md=\"3\" sm=\"4\" xs=\"4\">\r\n                                <Container className=\"certChoose\">\r\n                                    <a href=\"javascript:;\" >\r\n\r\n                                        <h5 className=\"h5Cert\">EGL EU</h5>\r\n                                        <Image id=\"EGL EUROPE\" onClick={this.getLab} style={{ width: \"70px\", border: \"1px solid blue\" }} src=\" https://blog.brilliance.com/wp-content/uploads/2009/11/EGL.jpg\" rounded />\r\n                                    </a>\r\n                                </Container>\r\n                            </Col>\r\n\r\n                            <Col lg=\"2\" md=\"3\" sm=\"4\" xs=\"4\">\r\n                                <Container className=\"certChoose\">\r\n                                    <a href=\"javascript:;\" >\r\n                                        <h5 className=\"h5Cert\">HRD</h5>\r\n                                        <Image id=\"HRD\" onClick={this.getLab} style={{ width: \"70px\", border: \"1px solid blue\" }} src=\"https://is2-ssl.mzstatic.com/image/thumb/Purple128/v4/3b/79/e0/3b79e06e-78b0-2e30-61eb-41b074cb9744/source/512x512bb.jpg\" rounded />\r\n                                    </a>\r\n                                </Container>\r\n                            </Col>\r\n\r\n                            <Col lg=\"2\" md=\"3\" sm=\"4\" xs=\"4\">\r\n                                <Container className=\"certChoose\">\r\n                                    <a href=\"javascript:;\" >\r\n                                        <h5 className=\"h5Cert\">IGI</h5>\r\n                                        <Image id=\"IGI\" onClick={this.getLab} style={{ width: \"70px\", border: \"1px solid blue\" }} src=\"  https://qph.fs.quoracdn.net/main-qimg-54bbfbbb192682043358f75f481f63b5\" rounded />\r\n                                    </a>\r\n                                </Container>\r\n                            </Col>\r\n\r\n                            <Col lg=\"2\" md=\"3\" sm=\"4\" xs=\"4\">\r\n                                <Container className=\"certChoose\">\r\n                                    <a href=\"javascript:;\" >\r\n                                        <h5 className=\"h5Cert\">AGS</h5>\r\n                                        <Image id=\"AGS\" onClick={this.getLab} style={{ width: \"70px\", border: \"1px solid blue\" }} src=\"https://www.vividventure.com/upload/544.jpg\" rounded />\r\n                                    </a>\r\n                                </Container>\r\n                            </Col>\r\n\r\n                            <Col lg=\"2\" md=\"3\" sm=\"4\" xs=\"4\">\r\n                                <Container className=\"certChoose\">\r\n                                    <a href=\"javascript:;\" >\r\n                                        <h5 className=\"h5Cert\">NONE</h5>\r\n                                        <Image id=\"None\" onClick={this.getLab} style={{ width: \"70px\", border: \"1px solid blue\" }} src=\"https://www.clipart1001.com/wp-content/uploads/2018/12/Roblox-Clipart-Black-And-Outline.jpg\" rounded />\r\n                                    </a>\r\n                                </Container>\r\n                            </Col>\r\n\r\n                        </Row>\r\n                        <h3>Certificate Lab selected: {this.state.diamond.lab}</h3>\r\n                        <h2>Certificate Number</h2>\r\n                        <InputGroup className=\"mb-3\">\r\n\r\n                            <FormControl onChange={this.getCertNum} defaultValue={this.state.diamond.certificateNumber} ref={(element) => { this.certNumInput = element }}\r\n                                placeholder=\"Certificate number\"\r\n                            />\r\n                        </InputGroup>\r\n\r\n                    </Modal.Body>\r\n\r\n                )\r\n            }\r\n            else\r\n                if (this.state.diamond.pricePerCarat === \"\" || this.state.page === 2) {\r\n\r\n                    parse.push(\r\n                        <Modal.Body>\r\n                            <h3>price list for {this.state.diamond.shape} {this.state.diamond.weight} {this.state.diamond.color}  {this.state.diamond.clarity} : {this.state.diamond.list}</h3>\r\n                            <p> In case of priceChange, calculate prices and discounts by:</p>\r\n                            <Form.Group as={Row}>\r\n                                <Form.Label as=\"legend\" column sm={2}>\r\n                                </Form.Label>\r\n                                <Col sm={10}>\r\n                                    <Form.Check onChange={this.getPrices} ref={(element) => { this.checkInput = element }}\r\n                                        type=\"radio\"\r\n                                        label=\"keeping Discount unchanged\"\r\n                                        name=\"formHorizontalRadios\"\r\n                                        id=\"formHorizontalRadios1\"\r\n                                        checked\r\n                                    />\r\n                                    <Form.Check\r\n                                        type=\"radio\"\r\n                                        label=\"keeping price per carat unchanged\"\r\n                                        name=\"formHorizontalRadios\"\r\n                                        id=\"formHorizontalRadios2\"\r\n                                    />\r\n                                </Col>\r\n                            </Form.Group>\r\n                            <h2>Price Per Carat</h2>\r\n                            <InputGroup className=\"mb-3\">\r\n                                <span> <FormControl\r\n                                    defaultValue={this.state.diamond.pricePerCarat}\r\n                                    ref={(element) => { this.priceInput = element }}\r\n                                    onChange={() => {\r\n                                        if (this.state.diamond.list) { this.discountInput.value = 100 - (Math.round(((Number(this.priceInput.value)) / this.state.diamond.list) * 10000)) / 100 };\r\n                                        this.getPrices();\r\n                                    }\r\n\r\n                                    }\r\n\r\n                                    placeholder=\"price per carat\"\r\n                                />$</span>\r\n                            </InputGroup>\r\n                            <h2>Discount</h2>\r\n                            <InputGroup className=\"mb-3\">\r\n                                <span><FormControl\r\n                                    defaultValue={this.state.diamond.discount}\r\n                                    ref={(element) => { this.discountInput = element }}\r\n                                    onChange={() => {\r\n                                        if (this.state.diamond.list) { this.priceInput.value = Math.round(this.state.diamond.list * (100 - (Number(this.discountInput.value))) / 100) };\r\n                                        this.getPrices();\r\n                                    }\r\n                                    }\r\n\r\n                                    placeholder=\"Discount %\"\r\n                                />%</span>\r\n                            </InputGroup>\r\n                        </Modal.Body>\r\n\r\n                    )\r\n                }\r\n                else\r\n                    if (this.state.page === 3) {\r\n                        parse.push(\r\n                            <Modal.Body className=\"modalAddBody\">\r\n                                <Row>\r\n                                    <Col lg=\"2\" md=\"3\" sm=\"4\" xs=\"6\">\r\n                                        <Form.Group controlId=\"exampleForm.ControlSelect1\">\r\n                                            <Form.Label>Cut</Form.Label>\r\n                                            <Form.Control onChange={this.getOther} defaultValue={this.state.diamond.cut} ref={(element) => { this.cutInput = element }} as=\"select\" >\r\n                                                <option value=\"\"></option>\r\n                                                <option value=\"EX\">Excellent</option>\r\n                                                <option value=\"VG\">Very good</option>\r\n                                                <option value=\"G\">Good</option>\r\n                                                <option value=\"F\">Fair</option>\r\n                                                <option value=\"P\">Poor</option>\r\n                                            </Form.Control>\r\n                                        </Form.Group>\r\n                                    </Col>\r\n                                    <Col lg=\"2\" md=\"3\" sm=\"4\" xs=\"6\">\r\n                                        <Form.Group controlId=\"exampleForm.ControlSelect1\">\r\n                                            <Form.Label>Polish</Form.Label>\r\n                                            <Form.Control onChange={this.getOther} defaultValue={this.state.diamond.polish} ref={(element) => { this.polishInput = element }} as=\"select\" >\r\n                                                <option value=\"\"></option>\r\n                                                <option value=\"EX\">Excellent</option>\r\n                                                <option value=\"VG\">Very good</option>\r\n                                                <option value=\"G\">Good</option>\r\n                                                <option value=\"F\">Fair</option>\r\n                                                <option value=\"P\">Poor</option>\r\n                                            </Form.Control>\r\n                                        </Form.Group>\r\n                                    </Col>\r\n                                    <Col lg=\"2\" md=\"3\" sm=\"4\" xs=\"6\">\r\n                                        <Form.Group controlId=\"exampleForm.ControlSelect1\">\r\n                                            <Form.Label>Symmetry</Form.Label>\r\n                                            <Form.Control onChange={this.getOther} defaultValue={this.state.diamond.symmetry} ref={(element) => { this.symmetryInput = element }} as=\"select\" >\r\n                                                <option value=\"\"></option>\r\n                                                <option value=\"EX\">Excellent</option>\r\n                                                <option value=\"VG\">Very good</option>\r\n                                                <option value=\"G\">Good</option>\r\n                                                <option value=\"F\">Fair</option>\r\n                                                <option value=\"P\">Poor</option>\r\n                                            </Form.Control>\r\n                                        </Form.Group>\r\n                                    </Col>\r\n                                    <Col lg=\"2\" md=\"3\" sm=\"4\" xs=\"6\">\r\n                                        <Form.Group controlId=\"exampleForm.ControlSelect1\">\r\n                                            <Form.Label>fluorescence</Form.Label>\r\n                                            <Form.Control onChange={this.getOther} defaultValue={this.state.diamond.fluorescence} ref={(element) => { this.fluorescenceInput = element }} as=\"select\" >\r\n                                                <option value=\"\"></option>\r\n                                                <option value=\"None\">NONE</option>\r\n                                                <option value=\"Faint\">FAINT</option>\r\n                                                <option value=\"Medium\">MEDIUM</option>\r\n                                                <option value=\"Strong\">STRONG</option>\r\n                                                <option value=\"Very strong\">VERY STRONG</option>\r\n                                            </Form.Control>\r\n                                        </Form.Group>\r\n                                    </Col>\r\n                                    <Col lg=\"2\" md=\"3\" sm=\"4\" xs=\"6\">\r\n                                        <Form.Group controlId=\"exampleForm.ControlSelect1\">\r\n                                            <Form.Label>Fl Color</Form.Label>\r\n                                            <Form.Control onChange={this.getOther} defaultValue={this.state.diamond.fluorescenceColor} ref={(element) => { this.fluorescenceColorInput = element }} as=\"select\" >\r\n                                                <option value=\"\"></option>\r\n                                                <option value=\"Yellow\">YELLOW</option>\r\n                                                <option value=\"White\">WHITE</option>\r\n                                                <option value=\"Green\">GREEN</option>\r\n                                            </Form.Control>\r\n                                        </Form.Group>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col lg=\"2\" md=\"3\" sm=\"4\" xs=\"6\">\r\n                                        <Form.Label>Depth</Form.Label>\r\n                                        <InputGroup className=\"mb-3\">\r\n                                            <FormControl onChange={this.getOther} defaultValue={this.state.diamond.depth} ref={(element) => { this.depthInput = element }}\r\n                                                placeholder=\"Depth\"\r\n                                            />\r\n                                        </InputGroup>\r\n                                    </Col>\r\n                                    <Col lg=\"2\" md=\"3\" sm=\"4\" xs=\"6\">\r\n                                        <Form.Label>Table</Form.Label>\r\n                                        <InputGroup className=\"mb-3\">\r\n\r\n                                            <FormControl onChange={this.getOther} defaultValue={this.state.diamond.table} ref={(element) => { this.tableInput = element }}\r\n                                                placeholder=\"Table\"\r\n                                            />\r\n                                        </InputGroup>\r\n                                    </Col>\r\n\r\n                                    <Col lg=\"2\" md=\"3\" sm=\"4\" xs=\"6\">\r\n                                        <Form.Label>Girdle</Form.Label>\r\n                                        <InputGroup className=\"mb-3\">\r\n\r\n                                            <FormControl onChange={this.getOther} defaultValue={this.state.diamond.girdle} ref={(element) => { this.girdleInput = element }}\r\n                                                placeholder=\"Girdle\"\r\n                                            />\r\n                                        </InputGroup>\r\n                                    </Col>\r\n                                    <Col lg=\"2\" md=\"3\" sm=\"4\" xs=\"6\">\r\n                                        <Form.Group controlId=\"exampleForm.ControlSelect1\">\r\n                                            <Form.Label>Culet</Form.Label>\r\n                                            <Form.Control onChange={this.getOther} defaultValue={this.state.diamond.culet} ref={(element) => { this.culetInput = element }} as=\"select\" >\r\n                                                <option value=\"\"></option>\r\n                                                <option value=\"None\">None</option>\r\n                                                <option value=\"VS\">VERY SMALL</option>\r\n                                                <option value=\"S\">SMALL</option>\r\n                                                <option value=\"M\">MEDIUM</option>\r\n                                                <option value=\"L\">LARGE</option>\r\n                                                <option value=\"VL\">VERY LARGE</option>\r\n                                            </Form.Control>\r\n                                        </Form.Group>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col lg=\"2\" md=\"2\" sm=\"2\" xs=\"2\">\r\n                                        <Form.Label>CA</Form.Label>\r\n                                        <InputGroup className=\"mb-3\">\r\n\r\n                                            <FormControl onChange={this.getOther} defaultValue={this.state.diamond.crownAngle} ref={(element) => { this.crownAngleInput = element }}\r\n                                                placeholder=\"CA\"\r\n                                            />\r\n                                        </InputGroup>\r\n                                    </Col>\r\n\r\n                                    <Col lg=\"2\" md=\"2\" sm=\"2\" xs=\"2\">\r\n                                        <Form.Label>CH</Form.Label>\r\n                                        <InputGroup className=\"mb-3\">\r\n\r\n                                            <FormControl onChange={this.getOther} defaultValue={this.state.diamond.crownHeight} ref={(element) => { this.crownHeightInput = element }}\r\n                                                placeholder=\"CH\"\r\n                                            />\r\n                                        </InputGroup>\r\n                                    </Col>\r\n                                    <Col lg=\"2\" md=\"2\" sm=\"2\" xs=\"2\">\r\n                                        <Form.Label>PA</Form.Label>\r\n                                        <InputGroup className=\"mb-3\">\r\n\r\n                                            <FormControl onChange={this.getOther} defaultValue={this.state.diamond.pavillionAngle} ref={(element) => { this.pavillionAngleInput = element }}\r\n                                                placeholder=\"PA\"\r\n                                            />\r\n                                        </InputGroup>\r\n                                    </Col>\r\n                                    <Col lg=\"2\" md=\"2\" sm=\"2\" xs=\"2\">\r\n                                        <Form.Label>PD</Form.Label>\r\n                                        <InputGroup className=\"mb-3\">\r\n\r\n                                            <FormControl onChange={this.getOther} defaultValue={this.state.diamond.pavillionDepth} ref={(element) => { this.pavillionDepthInput = element }}\r\n                                                placeholder=\"PD\"\r\n                                            />\r\n                                        </InputGroup>\r\n                                    </Col>\r\n                                    <Col lg=\"2\" md=\"2\" sm=\"2\" xs=\"2\">\r\n                                        <Form.Label>LH</Form.Label>\r\n                                        <InputGroup className=\"mb-3\">\r\n\r\n                                            <FormControl onChange={this.getOther} defaultValue={this.state.diamond.lowerHalf} ref={(element) => { this.lowerHalfInput = element }}\r\n                                                placeholder=\"LH\"\r\n                                            />\r\n                                        </InputGroup>\r\n                                    </Col>\r\n                                </Row>\r\n\r\n                            </Modal.Body>\r\n\r\n                        )\r\n                    }\r\n                    else\r\n                        if (this.state.page === 4) {\r\n\r\n                            parse.push(\r\n                                <Modal.Body className=\"modalAddBody\">\r\n                                    <Form.Label>Add Images Links</Form.Label>\r\n                                    <InputGroup className=\"mb-3\">\r\n                                        {/* <InputGroup.Text id=\"basic-addon2\">@example.com</InputGroup.Text> */}\r\n                                        <FormControl onChange={this.prepareLink} defaultValue={this.state.linktoAdd} ref={(element) => { this.linkToAddInput = element }}\r\n                                            placeholder=\"Place link here\" value={this.state.linktoAdd} style={{ width: \"300px\", marginRight: \"10px\" }} />\r\n                                        <Button onClick={this.addLink} variant=\"primary\">Add</Button>\r\n                                    </InputGroup>\r\n                                    <ListOfLinks deleteLink={this.deleteLink} links={this.state.diamond.links} />\r\n\r\n                                </Modal.Body>\r\n\r\n                            )\r\n                        }\r\n                        else\r\n                            if (this.state.page === 5) {\r\n\r\n                                parse.push(\r\n                                    <Modal.Body className=\"modalAddBody\">\r\n                                        <Form>\r\n                                            <Form.Group controlId=\"formFile1\">\r\n                                                <Form.Label >\r\n                                                    Choose an Image file\r\n                                                </Form.Label>\r\n                                                Image # 1\r\n                                                    <Form.Control data-id=\"1\" type=\"file\" placeholder=\"Diamond image URL\" accept=\"image/*\" onChange={this.imgChange} />\r\n\r\n                                                <Image src={pic1.url} style={{ width: \"15%\" }} fluid />\r\n                                                <p>{pic1.name}<Button onClick={this.deleteImg} id=\"deleteBtn1\" hidden={pic1.hidden} variant=\"danger\">Delete</Button></p>\r\n                                            </Form.Group>\r\n                                            <Form.Group controlId=\"formFile2\">\r\n                                                <Form.Label >\r\n                                                    Choose an Image file\r\n                                                </Form.Label>\r\n                                                Image # 2\r\n                                                    <Form.Control data-id=\"2\" type=\"file\" placeholder=\"Diamond image URL\" accept=\"image/*\" onChange={this.imgChange} />\r\n\r\n                                                <Image src={pic2.url} style={{ width: \"15%\" }} fluid />\r\n                                                <p>{pic2.name}<Button onClick={this.deleteImg} id=\"deleteBtn2\" hidden={pic2.hidden} variant=\"danger\">Delete</Button></p>\r\n\r\n                                            </Form.Group>\r\n\r\n                                        </Form>\r\n\r\n                                    </Modal.Body>\r\n\r\n                                )\r\n                            }\r\n\r\n        return (\r\n            <div style={{ position: \"relative\" }}>\r\n                <Button variant=\"success\" onClick={this.toggle} className=\"fullWin\">\r\n                    List New Diamond\r\n            </Button>\r\n                <Nav style={{ position: \"absolute\", left: \"-20px\", top: \"1px\" }}>\r\n                    <Nav.Link href=\"#/load\"><img style={{ width: \"100px\", height: \"40px\" }} src={excel}></img></Nav.Link>\r\n                </Nav>\r\n                <Button variant=\"info\" onClick={this.myListings} className=\"fullWin\">\r\n                    Only My Listings\r\n            </Button>\r\n                <Modal id=\"modalAdd\" size=\"xl\" show={this.state.modal} onHide={this.handleClose} animation={false}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>List New Diamond</Modal.Title>\r\n                    </Modal.Header>\r\n                    {parse}\r\n                    <Modal.Footer>\r\n                        <Button onClick={this.previousPage} variant=\"primary\" disabled={this.state.page === 0}>\r\n                            Back\r\n                    </Button>\r\n                        <Button variant=\"secondary\" onClick={this.handleClose}>\r\n                            Close\r\n                    </Button>\r\n                        <Button onClick={this.nextPage} variant=\"primary\" disabled={this.state.page === 5} >\r\n                            Next\r\n                    </Button>\r\n                        <Button variant=\"primary\" onClick={this.saveDiamond} disabled={this.state.disableSave}>\r\n                            Save My Diamond\r\n                    </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n","import React from 'react'\r\nimport { Row, Col, Accordion, Card } from 'react-bootstrap'\r\n\r\n\r\n\r\n//This Stupid component receives two props : edit & description. edit is the index of the diamond and description is all the data of the diamond\r\n//it uses acordeon to show the details of single diamond\r\nexport default class ShowDiamond extends React.Component {\r\n\r\n  render() {\r\n\r\n    var bgColorClass = \"\";\r\n    if (this.props.edit % 2 === 0) { bgColorClass = \"light-blue\" };\r\n    var pics = [];\r\n    for (var i = 0; i < this.props.description.links.length; i++) {\r\n      pics.push(<div style={{ margin: \"5px\" }} className=\"col-xl-2 col-lg-3 col-md-4 col-sm-6 col-12\">\r\n        <div className=\"content diamondContent\">\r\n          <a href=\"#\"><img className=\"smallPic\" src={this.props.description.links[i]} /></a>\r\n        </div>\r\n      </div>);\r\n    }\r\n    if (this.props.description.pic1 !== {}) {\r\n      pics.push(<div style={{ margin: \"5px\" }} className=\"col-xl-2 col-lg-3 col-md-4 col-sm-6 col-12\">\r\n        <div className=\"content diamondContent\">\r\n          <a href=\"#\"><img className=\"smallPic\" src={this.props.description.pic1.url} /></a>\r\n        </div>\r\n      </div>);\r\n    }\r\n    if (this.props.description.pic2 !== {}) {\r\n      pics.push(<div style={{ margin: \"5px\" }} className=\"col-xl-2 col-lg-3 col-md-4 col-sm-6 col-12\">\r\n        <div className=\"content diamondContent\">\r\n          <a href=\"#\"><img className=\"smallPic\" src={this.props.description.pic2.url} /></a>\r\n        </div>\r\n      </div>);\r\n    }\r\n    return (\r\n      <div>\r\n        {/* below are the details visible in accordeon */}\r\n        <Accordion key={this.props.description.id} defaultActiveKey=\"0\" style={{ backgroundColor: bgColorClass }}>\r\n          <Card>\r\n            <Accordion.Toggle as={Card.Header} eventKey={this.props.edit}>\r\n              <Row>\r\n                <Col lg=\"3\" md=\"12\" sm=\"12\" style={{ height: \"60px\" }}>\r\n                  <Row>\r\n\r\n                    <Col className=\"innerCol\" xl=\"3\">\r\n                      <div className=\"content diamondContent\">\r\n                        <h5 className=\"noMarginBottom\">Shape</h5>\r\n                        <p>{this.props.description.shape}</p>\r\n                      </div>\r\n                    </Col>\r\n                    <Col className=\"innerCol\" xl=\"3\">\r\n                      <div className=\"content diamondContent\">\r\n                        <h5 className=\"noMarginBottom\">Carat</h5>\r\n                        <p>{this.props.description.weight}</p>\r\n                      </div>\r\n                    </Col>\r\n\r\n                    <Col className=\"innerCol\" xl=\"3\">\r\n                      <div className=\"content diamondContent\">\r\n                        <h5 className=\"noMarginBottom\">Col</h5>\r\n                        <p>{this.props.description.color}</p>\r\n                      </div>\r\n                    </Col>\r\n                    <Col className=\"innerCol\" xl=\"3\">\r\n                      <div className=\"content diamondContent\">\r\n                        <h5 className=\"noMarginBottom\">Clar</h5>\r\n                        <p>{this.props.description.clarity}</p>\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n                </Col>\r\n                <Col lg=\"3\" md=\"12\" sm=\"12\" style={{ height: \"60px\" }}>\r\n                  <Row>\r\n                    <Col className=\"innerCol\" xl=\"3\">\r\n                      <div className=\"content diamondContent\">\r\n                        <h5 className=\"noMarginBottom\">Cut</h5>\r\n                        <p>{this.props.description.cut}</p>\r\n                      </div>\r\n                    </Col>\r\n                    <Col className=\"innerCol\" xl=\"3\">\r\n                      <div className=\"content diamondContent\">\r\n                        <h5 className=\"noMarginBottom\">Pol</h5>\r\n                        <p>{this.props.description.polish}</p>\r\n                      </div>\r\n                    </Col>\r\n                    <Col className=\"innerCol\" xl=\"3\">\r\n                      <div className=\"content diamondContent\">\r\n                        <h5 className=\"noMarginBottom\">Sym</h5>\r\n                        <p>{this.props.description.symmetry}</p>\r\n                      </div>\r\n                    </Col>\r\n                    <Col className=\"innerCol\" xl=\"3\">\r\n                      <div className=\"content diamondContent\">\r\n                        <h5 className=\"noMarginBottom\">FL</h5>\r\n                        <p>{this.props.description.fluorescence + \" \" + this.props.description.fluorescenceColor}</p>\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n                </Col>\r\n                <Col lg=\"3\" md=\"12\" sm=\"12\" style={{ height: \"60px\" }}>\r\n                  <Row>\r\n                    <Col className=\"innerCol\" xl=\"3\">\r\n                      <div className=\"content diamondContent\">\r\n                        <h5 className=\"noMarginBottom\">Depth</h5>\r\n                        <p>{this.props.description.depth}</p>\r\n                      </div>\r\n                    </Col>\r\n                    <Col className=\"innerCol\" xl=\"3\">\r\n                      <div className=\"content diamondContent\">\r\n                        <h5 className=\"noMarginBottom\">Table</h5>\r\n                        <p>{this.props.description.table}</p>\r\n                      </div>\r\n                    </Col>\r\n                    <Col className=\"innerCol\" xl=\"3\">\r\n                      <div className=\"content diamondContent\">\r\n                        <h5 className=\"noMarginBottom\">Lab</h5>\r\n                        <a target=\"_blank\" href={\"http://www.gia.edu/report-check?reportno=\" + this.props.description.certificateNumber}><p>{this.props.description.lab}</p></a>\r\n                      </div>\r\n                    </Col>\r\n                    <Col className=\"innerCol\" xl=\"3\">\r\n                      <div className=\"content diamondContent\">\r\n                        <h5 className=\"noMarginBottom\">Gird</h5>\r\n                        <p>{this.props.description.girdle}</p>\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n                </Col>\r\n                <Col lg=\"3\" md=\"12\" sm=\"12\" style={{ height: \"60px\" }}>\r\n                  <Row>\r\n                    <Col className=\"innerCol\" xl=\"3\">\r\n                      <div className=\"content diamondContent\">\r\n                        <h5 className=\"noMarginBottom\">Culet</h5>\r\n                        <p>{this.props.description.culet}</p>\r\n                      </div>\r\n                    </Col>\r\n                    <Col className=\"innerCol\" xl=\"3\">\r\n                      <div className=\"content diamondContent\">\r\n                        <h5 className=\"noMarginBottom\">Rap</h5>\r\n                        <p style={{fontSize:\"11px\"}}>{this.props.description.list}</p>\r\n                      </div>\r\n                    </Col>\r\n                    <Col className=\"innerCol\" xl=\"3\">\r\n                      <div className=\"content diamondContent\">\r\n                        <h5 className=\"noMarginBottom\">Disc%</h5>\r\n                        <p>{(Math.floor(this.props.description.discount * 10) / 10).toFixed() + \"%\"}</p>\r\n                      </div>\r\n                    </Col>\r\n                    <Col className=\"innerCol\" xl=\"3\">\r\n                      <div className=\"content diamondContent\">\r\n                        <h5 className=\"noMarginBottom\">Price$</h5>\r\n                        <p style={{fontSize:\"11px\"}}>{this.props.description.pricePerCarat.toFixed()}</p>\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n                </Col>\r\n\r\n              </Row>\r\n              {/* below are the details hiden in Accordion */}\r\n            </Accordion.Toggle>\r\n            <Accordion.Collapse eventKey={this.props.edit}>\r\n              <Card.Body>\r\n                <Row>\r\n                  <Col lg=\"3\" md=\"12\" sm=\"12\" style={{ height: \"60px\" }}>\r\n\r\n                    <Row>\r\n                      <Col className=\"innerCol\" xl=\"3\">\r\n                        <div className=\"content diamondContent\">\r\n                          <h5 className=\"noMarginBottom\">Lot</h5>\r\n                          <p style={{fontSize:\"11px\"}}>{this.props.description.lotID}</p>\r\n                        </div>\r\n                      </Col>\r\n\r\n\r\n\r\n\r\n                      <Col className=\"innerCol\" xl=\"3\">\r\n                        <div className=\"content diamondContent\">\r\n                          <h5 className=\"noMarginBottom\">Owner</h5>\r\n                          <p style={{fontSize:\"11px\"}}>{this.props.ownerName(this.props.description.owner.id)}</p>\r\n                        </div>\r\n                      </Col>\r\n\r\n                      <Col className=\"innerCol\" xl=\"3\">\r\n                        <div className=\"content diamondContent\">\r\n                          <h5 className=\"noMarginBottom\">Cert</h5>\r\n                          <a target=\"_blank\" href={\"http://www.gia.edu/report-check?reportno=\" + this.props.description.certificateNumber}><p style={{fontSize:\"11px\"}}>{this.props.description.certificateNumber}</p></a>\r\n\r\n                        </div>\r\n                      </Col>\r\n\r\n\r\n                      <Col className=\"innerCol\" xl=\"3\">\r\n                        <div className=\"content diamondContent\">\r\n                          <h5 className=\"noMarginBottom\">C.Angle</h5>\r\n                          <p>{this.props.description.crownAngle}</p>\r\n                        </div>\r\n                      </Col></Row></Col>\r\n                  <Col lg=\"3\" md=\"12\" sm=\"12\" style={{ height: \"60px\" }}>\r\n\r\n                    <Row>\r\n                      <Col className=\"innerCol\" xl=\"3\">\r\n                        <div className=\"content diamondContent\">\r\n                          <h5 className=\"noMarginBottom\">C.Heigh</h5>\r\n                          <p>{this.props.description.crownHeight}</p>\r\n                        </div>\r\n                      </Col>\r\n\r\n\r\n                      <Col className=\"innerCol\" xl=\"3\">\r\n                        <div className=\"content diamondContent\">\r\n                          <h5 className=\"noMarginBottom\">P.Angle</h5>\r\n                          <p>{this.props.description.pavillionAngle}</p>\r\n                        </div>\r\n                      </Col>\r\n\r\n\r\n                      <Col className=\"innerCol\" xl=\"3\">\r\n                        <div className=\"content diamondContent\">\r\n                          <h5 className=\"noMarginBottom\">P.Depth</h5>\r\n                          <p>{this.props.description.pavillionDepth}</p>\r\n                        </div>\r\n                      </Col>\r\n                      <Col className=\"innerCol\" xl=\"3\">\r\n                        <div className=\"content diamondContent\">\r\n                          <h5 className=\"noMarginBottom\">StarLen</h5>\r\n                          <p>{this.props.description.starLength}</p>\r\n                        </div>\r\n                      </Col></Row></Col>\r\n\r\n                  <Col lg=\"3\" md=\"12\" sm=\"12\" style={{ height: \"60px\" }}>\r\n                    <Row>\r\n\r\n                      <Col className=\"innerCol\" xl=\"3\">\r\n                        <div className=\"content diamondContent\">\r\n                          <h5 className=\"noMarginBottom\">LoHalf</h5>\r\n                          <p>{this.props.description.lowerHalf}</p>\r\n                        </div>\r\n                      </Col>\r\n                      <Col className=\"innerCol\" xl=\"3\">\r\n                        <div className=\"content diamondContent\">\r\n                          <h5 className=\"noMarginBottom\">Meas</h5>\r\n                          <p>{this.props.description.measurements()}</p>\r\n                        </div>\r\n                      </Col>\r\n                      <Col className=\"innerCol\" xl=\"3\">\r\n                        <div className=\"content diamondContent\">\r\n                          <h5 className=\"noMarginBottom\">Incl</h5>\r\n                          <p>{this.props.description.inclusions}</p>\r\n                        </div>\r\n                      </Col>\r\n                    </Row>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  {pics}\r\n                </Row>\r\n                <Row>\r\n                  {/* these childres are the action buttons and are declared in the father componenet DiamondList */}\r\n                  {this.props.children}\r\n                </Row>\r\n              </Card.Body>\r\n            </Accordion.Collapse>\r\n          </Card>\r\n        </Accordion>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Slider from '@material-ui/core/Slider';\r\n\r\n\r\n//two sided slider for color and clarity filter\r\nexport default function HorizontalColorSlider(props) {\r\n    \r\n    const useStyles = makeStyles({\r\n        root: {\r\n          width: 450,\r\n        },\r\n      });\r\n      \r\n  const classes = useStyles();\r\n  function valuetext(value) {\r\n    return `${value}°C`;\r\n  }\r\n  let marks,max;\r\n  //color slider value marks\r\n  if (props.name===\"Color\"){\r\n  marks = [\r\n    {\r\n      value: 0,\r\n      label: 'D',\r\n    },\r\n    {\r\n      value: 1,\r\n      label: 'E',\r\n    },\r\n    {\r\n      value: 2,\r\n      label: 'F',\r\n    },\r\n    {\r\n      value: 3,\r\n      label: 'G',\r\n    },\r\n    {\r\n      value: 4,\r\n      label: 'H',\r\n    },\r\n    {\r\n      value: 5,\r\n      label: 'I',\r\n    },\r\n    {\r\n      value: 6,\r\n      label: 'J',\r\n    },\r\n    {\r\n      value: 7,\r\n      label: 'K',\r\n    },\r\n    {\r\n      value: 8,\r\n      label: 'L',\r\n    },\r\n    {\r\n      value: 9,\r\n      label: 'M',\r\n    },\r\n    {\r\n      value: 10,\r\n      label: 'N',\r\n    },\r\n    {\r\n      value: 11,\r\n      label: 'OP',\r\n    },\r\n    {\r\n      value: 12,\r\n      label: 'QR',\r\n    },\r\n    {\r\n      value: 13,\r\n      label: 'ST',\r\n    },\r\n    {\r\n      value: 14,\r\n      label: 'UV',\r\n    },\r\n    {\r\n      value: 15,\r\n      label: 'WX',\r\n    },\r\n    {\r\n      value: 16,\r\n      label: 'YZ',\r\n    },\r\n  ];\r\n  max=16;\r\n}\r\n//clarity slider mark values\r\nelse if (props.name===\"Clarity\"){\r\n    marks = [\r\n        {\r\n          value: 0,\r\n          label: 'FL',\r\n        },\r\n        {\r\n          value: 1,\r\n          label: 'IF',\r\n        },\r\n        {\r\n          value: 2,\r\n          label: 'VVS1',\r\n        },\r\n        {\r\n          value: 3,\r\n          label: 'VVS2',\r\n        },\r\n        {\r\n          value: 4,\r\n          label: 'VS1',\r\n        },\r\n        {\r\n          value: 5,\r\n          label: 'VS2',\r\n        },\r\n        {\r\n          value: 6,\r\n          label: 'SI1',\r\n        },\r\n        {\r\n          value: 7,\r\n          label: 'SI2',\r\n        },\r\n        {\r\n          value: 8,\r\n          label: 'SI3',\r\n        },\r\n        {\r\n          value: 9,\r\n          label: 'I1',\r\n        },\r\n        {\r\n            value: 10,\r\n            label: 'I2',\r\n          },\r\n          {\r\n            value: 11,\r\n            label: 'I3',\r\n          },\r\n      ];  \r\n      max=11; \r\n}\r\nif (props.name===\"Color\"&&props.filter.clearColorFilter){\r\n  let filter=props.filter;\r\n  filter.clearColorFilter=false;\r\n  props.setFilter(filter);\r\n  return false;\r\n\r\n} else if (props.name===\"Clarity\"&&props.filter.clearClarityFilter){\r\n  let filter=props.filter;\r\n  filter.clearClarityFilter=false;\r\n  props.setFilter(filter);\r\n  return false;\r\n} else\r\n  return (\r\n    <React.Fragment>\r\n      <Typography id=\"horizontal-slider\" gutterBottom>\r\n        \r\n      </Typography>\r\n      <div className={classes.root}>\r\n        {props.name}\r\n        <Slider\r\n        onChangeCommitted={(e,val)=>{props.change(val)}}\r\n          orientation=\"horizontal\"\r\n          defaultValue={[0, max]}\r\n          aria-labelledby=\"horizontal-slider\"\r\n          getAriaValueText={valuetext}\r\n          marks={marks}\r\n          max={max}\r\n        />\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from 'react'\r\nimport HorizontalColorSlider from './Slider'\r\nimport { Form, Row, Col, FormControl } from 'react-bootstrap'\r\nimport { Button } from '@material-ui/core';\r\nimport {colorValue,clarityValue} from '../Classes/Diamond'\r\n// import Multiselect from 'react-bootstrap-multiselect'\r\n// import '../multiselect.css'\r\n\r\n\r\n//returns color value\r\nfunction num2color(value) {\r\n  switch (value) {\r\n    case 0:\r\n      return \"D\";\r\n      break;\r\n    case 1:\r\n      return \"E\";\r\n      break;\r\n    case 2:\r\n      return \"F\";\r\n      break;\r\n    case 3:\r\n      return \"G\";\r\n      break;\r\n    case 4:\r\n      return \"H\";\r\n      break;\r\n    case 5:\r\n      return \"I\";\r\n      break;\r\n    case 6:\r\n      return \"J\";\r\n      break;\r\n    case 7:\r\n      return \"K\";\r\n      break;\r\n    case 8:\r\n      return \"L\";\r\n      break;\r\n    case 9:\r\n      return \"M\";\r\n      break;\r\n    case 10:\r\n      return \"N\";\r\n      break;\r\n    case 11:\r\n      return \"OP\";\r\n      break;\r\n    case 12:\r\n      return \"QR\";\r\n      break;\r\n    case 13:\r\n      return \"ST\";\r\n      break;\r\n    case 14:\r\n      return \"UV\";\r\n      break;\r\n    case 15:\r\n      return \"WX\";\r\n      break;\r\n    case 16:\r\n      return \"YZ\";\r\n      break;\r\n    default:\r\n      return false;\r\n  }\r\n}\r\n//returns clarity value\r\nfunction num2clarity(value) {\r\n  switch (value) {\r\n    case 0:\r\n      return \"FL\";\r\n      break;\r\n    case 1:\r\n      return \"IF\";\r\n      break;\r\n    case 2:\r\n      return \"VVS1\";\r\n      break;\r\n    case 3:\r\n      return \"VVS2\";\r\n      break;\r\n    case 4:\r\n      return \"VS1\";\r\n      break;\r\n    case 5:\r\n      return \"VS2\";\r\n      break;\r\n    case 6:\r\n      return \"SI1\";\r\n      break;\r\n    case 7:\r\n      return \"SI2\";\r\n      break;\r\n    case 8:\r\n      return \"SI3\";\r\n      break;\r\n    case 9:\r\n      return \"I1\";\r\n      break;\r\n    case 10:\r\n      return \"I2\";\r\n      break;\r\n    case 11:\r\n      return \"I3\";\r\n      break;\r\n    default:\r\n      return false;\r\n  }\r\n}\r\n\r\n//filter\r\nexport default class SearchDiamondForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      tglAll: \"Select all shapes\",\r\n      filter:{\r\n        weightMin:\"\",\r\n        weightMax:\"\",\r\n      }\r\n    }\r\n  }\r\n\r\n//click on a shape filter wiil toggle selection from/to filter\r\n  toggleChoice = (e) => {\r\n    let { filter, setFilter } = this.props;\r\n    if (!filter.shape.includes(e.target.innerHTML)) { filter.shape.push(e.target.innerHTML) }\r\n    else {\r\n      for (var i = 0; i < filter.shape.length; i++) {\r\n        if (filter.shape[i] === e.target.innerHTML) {\r\n          filter.shape.splice(i, 1);\r\n        }\r\n      }\r\n    }\r\n    setFilter(filter);\r\n  }\r\n\r\n//toggle all shape to/from filter\r\n  toggleAll = (e) => {\r\n    let allShapes = [\"BR\", \"OV\", \"PS\", \"MQ\", \"HS\", \"PRI\", \"RAD\", \"EM\",\"AS\", \"CU\", \"BG\", \"TRI\"]\r\n    let { filter, setFilter } = this.props;\r\n    let { tglAll } = this.state;\r\n    if (tglAll === \"Select all shapes\") { filter.shape = allShapes; tglAll = \"Clear all shapes\" }\r\n    else {\r\n      filter.shape = []; tglAll = \"Select all shapes\"\r\n    }\r\n    this.setState({ tglAll });\r\n    setFilter(filter);\r\n  }\r\n\r\n  //changing weight minimum filter value\r\n  setMinWeight = (e) => {\r\n\r\n    let { setFilter } = this.props;\r\n    let filter1=this.props.filter;\r\n    let filter=this.state.filter;\r\n    filter1.weightMin = e.target.value;\r\n    filter.weightMin=e.target.value;\r\n    if (filter1.weightMin===\"\") filter1.weightMin=0;\r\n    this.setState({filter});\r\n    setFilter(filter1);\r\n  }\r\n\r\n  //changing weight maximum filter value\r\n  setMaxWeight = (e) => {\r\n\r\n    let { setFilter } = this.props;\r\n    let filter1=this.props.filter;\r\n    let filter=this.state.filter;\r\n    filter1.weightMax = e.target.value;\r\n    filter.weightMax=e.target.value;\r\n    if (filter1.weightMax===\"\") filter1.weightMax=10000;\r\n    this.setState({filter});\r\n    setFilter(filter1);\r\n  }\r\n\r\n  //set color minimum and maximum on change in color slider\r\n  setColorFilter = (value) => {\r\n    let { filter, setFilter } = this.props;\r\n    filter.colorMin = num2color(value[0]);\r\n    filter.colorMax = num2color(value[1]);\r\n    setFilter(filter);\r\n  }\r\n\r\n   //set clarity minimum and maximum on change in clarity slider\r\n  setClarityFilter = (value) => {\r\n    let { filter, setFilter } = this.props;\r\n    filter.clarityMin = num2clarity(value[0]);\r\n    filter.clarityMax = num2clarity(value[1]);\r\n    setFilter(filter);\r\n  }\r\n\r\n  //clear all filters\r\n  clearTheFilter= ()=>{\r\n    const {clearFilter } = this.props;\r\n    let {filter } = this.state;\r\n    filter.weightMax=\"\";\r\n    filter.weightMin=\"\";\r\n    clearFilter();\r\n    this.setState({filter});\r\n\r\n  }\r\n  render() {\r\n\r\n    let br, ov, ps, mq, hs, pri, rad, em, cu, bg, tri, asher;\r\n    //sets the color of each shape according to its filter value\r\n    if (this.props.filter.shape.includes(\"BR\")) { br = \"success\" } else { br = \"light\" };\r\n    if (this.props.filter.shape.includes(\"OV\")) { ov = \"success\" } else { ov = \"light\" };\r\n    if (this.props.filter.shape.includes(\"MQ\")) { mq = \"success\" } else { mq = \"light\" };\r\n    if (this.props.filter.shape.includes(\"HS\")) { hs = \"success\" } else { hs = \"light\" };\r\n    if (this.props.filter.shape.includes(\"PS\")) { ps = \"success\" } else { ps = \"light\" };\r\n    if (this.props.filter.shape.includes(\"PRI\")) { pri = \"success\" } else { pri = \"light\" };\r\n    if (this.props.filter.shape.includes(\"RAD\")) { rad = \"success\" } else { rad = \"light\" };\r\n    if (this.props.filter.shape.includes(\"EM\")) { em = \"success\" } else { em = \"light\" };\r\n    if (this.props.filter.shape.includes(\"CU\")) { cu = \"success\" } else { cu = \"light\" };\r\n    if (this.props.filter.shape.includes(\"TRI\")) { tri = \"success\" } else { tri = \"light\" };\r\n    if (this.props.filter.shape.includes(\"BG\")) { bg = \"success\" } else { bg = \"light\" };\r\n    if (this.props.filter.shape.includes(\"AS\")) { asher = \"success\" } else { asher = \"light\" };\r\n   \r\n    var width60 = { width: \"60px\" };\r\n    return (\r\n      <Form>\r\n        <Button style={{backgroundColor:\"pink\",border:\"none\",borderRadius:\"5px\",marginTop:\"5px\",height:\"40px\"}} onClick={this.clearTheFilter} className=\"fullWin\">\r\n                    Clear all filters\r\n        </Button> \r\n        <h3 style={{marginTop:\"10px\"}}> Filter</h3>\r\n        <Row>\r\n          <Col lg=\"12\" md=\"12\" sm=\"12\" xs=\"12\">\r\n            {/* clear all shapes or choose all shapes */}\r\n            <button style={{marginBottom:\"5px\"}} onClick={this.toggleAll} type=\"button\" className={`btn btn-primary`}>{this.state.tglAll}</button>\r\n          </Col>\r\n          {/* all shapes buttons */}\r\n          <Col lg=\"1\" md=\"2\" sm=\"3\" xs=\"4\">\r\n            <button onClick={this.toggleChoice} type=\"button\" className={`btn btn-${br}`}>BR</button>\r\n          </Col>\r\n          <Col lg=\"1\" md=\"2\" sm=\"3\" xs=\"4\">\r\n            <button onClick={this.toggleChoice} type=\"button\" className={`btn btn-${ov}`}>OV</button>\r\n          </Col>\r\n          <Col lg=\"1\" md=\"2\" sm=\"3\" xs=\"4\">\r\n            <button onClick={this.toggleChoice} type=\"button\" className={`btn btn-${ps}`}>PS</button>\r\n          </Col>\r\n          <Col lg=\"1\" md=\"2\" sm=\"3\" xs=\"4\">\r\n            <button onClick={this.toggleChoice} type=\"button\" className={`btn btn-${mq}`}>MQ</button>\r\n          </Col>\r\n          <Col lg=\"1\" md=\"2\" sm=\"3\" xs=\"4\">\r\n            <button onClick={this.toggleChoice} type=\"button\" className={`btn btn-${hs}`}>HS</button>\r\n          </Col>\r\n          <Col lg=\"1\" md=\"2\" sm=\"3\" xs=\"4\">\r\n            <button onClick={this.toggleChoice} type=\"button\" className={`btn btn-${pri}`}>PRI</button>\r\n          </Col>\r\n          <Col lg=\"1\" md=\"2\" sm=\"3\" xs=\"4\">\r\n            <button onClick={this.toggleChoice} type=\"button\" className={`btn btn-${em}`}>EM</button>\r\n          </Col>\r\n          <Col lg=\"1\" md=\"2\" sm=\"3\" xs=\"4\">\r\n            <button onClick={this.toggleChoice} type=\"button\" className={`btn btn-${asher}`}>AS</button>\r\n          </Col>\r\n          <Col lg=\"1\" md=\"2\" sm=\"3\" xs=\"4\">\r\n            <button onClick={this.toggleChoice} type=\"button\" className={`btn btn-${rad}`}>RAD</button>\r\n          </Col>\r\n          <Col lg=\"1\" md=\"2\" sm=\"3\" xs=\"4\">\r\n            <button onClick={this.toggleChoice} type=\"button\" className={`btn btn-${cu}`}>CU</button>\r\n          </Col>\r\n          <Col lg=\"1\" md=\"2\" sm=\"3\" xs=\"4\">\r\n            <button onClick={this.toggleChoice} type=\"button\" className={`btn btn-${bg}`}>BG</button>\r\n          </Col>\r\n          <Col lg=\"1\" md=\"2\" sm=\"3\" xs=\"4\">\r\n            <button onClick={this.toggleChoice} type=\"button\" className={`btn btn-${tri}`}>TRI</button>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n{/* //weight input minimum and maximum */}\r\n          <Form.Group as={Col} xl=\"3\" lg=\"3\" sm=\"12\" controlId=\"validationCustom05\">\r\n            <Form.Label>Weight From</Form.Label>\r\n            <Form.Control onChange={this.setMinWeight} type=\"number\" placeholder=\"From\" value={this.state.filter.weightMin}/>\r\n            <Form.Control.Feedback type=\"invalid\">\r\n            </Form.Control.Feedback>\r\n            <Form.Label>Weight To</Form.Label>\r\n            <Form.Control onChange={this.setMaxWeight} type=\"number\" placeholder=\"To\" value={this.state.filter.weightMax} />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n            </Form.Control.Feedback>\r\n          </Form.Group>\r\n          <Form.Group as={Col} xl=\"9\" lg=\"9\" sm=\"12\" controlId=\"validationCustom05\">\r\n            {/* sliders , one for color and one for clarity */}\r\n            <HorizontalColorSlider setFilter={this.props.setFilter} filter={this.props.filter} name=\"Color\" change={(value) => { this.setColorFilter(value) }} />\r\n            <HorizontalColorSlider setFilter={this.props.setFilter} filter={this.props.filter} name=\"Clarity\" change={(value) => { this.setClarityFilter(value)}} />\r\n          </Form.Group>\r\n        </Row>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { Modal, Button, InputGroup, FormControl, Alert } from 'react-bootstrap'\r\n\r\nexport default class SendMessageModal extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            show: false,\r\n            modal: this.props.show,\r\n            diamond: this.props.diamond,\r\n        }\r\n    \r\n    }\r\n    handleClose = () => {\r\n        this.setState({\r\n            modal: false,\r\n            show: false\r\n        });\r\n        this.props.close();\r\n\r\n    }\r\n    contactSeller = () => {\r\n        const { addMessage, activeUser, ownerName } = this.props;\r\n        const { diamond } = this.state;\r\n        let { show } = this.state;\r\n        addMessage(this.textInput.value, activeUser.id, diamond.owner.id);\r\n        show = true;\r\n        this.setState({ show })\r\n        // this.handleClose();\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n        let newState = {\r\n            modal: nextProps.show,\r\n            diamond: nextProps.diamond,\r\n        }\r\n        this.setState(newState)\r\n    }\r\n    render() {\r\n\r\n        const { addMessage, activeUser, ownerName } = this.props;\r\n        const { modal, diamond } = this.state;\r\n        let showLotId;\r\n        let showOwnerId;\r\n        if (diamond) { showOwnerId = diamond.owner.id; showLotId = diamond.lotID } else return false;\r\n        return (\r\n            <Modal show={modal}\r\n                size=\"lg\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                        Send Message to {this.props.ownerName(showOwnerId)}\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body style={{ height: \"300px\" }}>\r\n                    <h4>Regarding Diamond {showLotId}</h4>\r\n                    <InputGroup className=\"mb-0\">\r\n                        <FormControl\r\n                            ref={(element) => { this.textInput = element }}\r\n                            as=\"textarea\" rows=\"10\"\r\n                            defaultValue={`Hi ${ownerName(showOwnerId)}, I am contacting you regarding your diamond: ${showOwnerId} ${diamond.shape} ${diamond.color} ${diamond.clarity}`}\r\n                            aria-label=\"User\"\r\n                            aria-describedby=\"basic-addon1\"\r\n                        />\r\n                    </InputGroup>\r\n                    <Alert style={{ width: \"100%\" }} variant=\"primary\" show={this.state.show}>\r\n                        message Sent {ownerName(showOwnerId)}\r\n                    </Alert>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button onClick={() => { this.contactSeller() }}>Send</Button>\r\n                    <Button onClick={this.handleClose}>Close</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        );\r\n    }\r\n}\r\n","import React from 'react'\r\nimport { Modal, Button,InputGroup,FormControl,Alert } from 'react-bootstrap'\r\n\r\nexport default class SendOfferModal extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            show: false,\r\n            modal: this.props.show,\r\n            diamond: this.props.diamond,\r\n        }\r\n    }\r\n    handleClose = () => {\r\n        this.setState({\r\n            modal: false,\r\n            show: false\r\n        });\r\n        this.props.close();\r\n\r\n    }\r\n    contactSeller = () => {\r\n        const { addMessage, activeUser,ownerName } = this.props;\r\n        const { diamond } = this.state;\r\n        let { show } = this.state;\r\n        addMessage(this.textInput.value, activeUser.id, diamond.owner.id);\r\n        show = true;\r\n        this.setState({ show })\r\n        // this.handleClose();\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n        let newState = {\r\n            modal: nextProps.show,\r\n            diamond: nextProps.diamond,\r\n        }\r\n        this.setState(newState)\r\n    }\r\n    render() {\r\n        const { addMessage, activeUser,ownerName } = this.props;\r\n        const { modal, diamond } = this.state;\r\n        let showLotId;\r\n        let showOwnerId;\r\n        let showPrice;\r\n        if (diamond) {showPrice=diamond.pricePerCarat; showOwnerId=diamond.owner.id; showLotId=diamond.lotID} else return false;\r\n        return (\r\n            <Modal show={modal}\r\n                size=\"sm\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                        Send Offer to {this.props.ownerName(showOwnerId)}\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body style={{height:\"300px\"}}>\r\n                    <h4>Regarding Diamond {showLotId}</h4>\r\n                    <h4>Asking Price: {showPrice}</h4>\r\n                    <InputGroup className=\"mb-0\">\r\n                        <FormControl\r\n                             ref={(element)=>{this.textInput=element}}\r\n                            as=\"textarea\" rows=\"10\" \r\n                            defaultValue = {`Hi ${ownerName(showOwnerId)}, I am Offering you on your diamond: ${showOwnerId} ${diamond.shape} ${diamond.color} ${diamond.clarity}, XXXXX Dollars per carat. what do you say?`}\r\n                            aria-label=\"User\"\r\n                            aria-describedby=\"basic-addon1\"\r\n                        />\r\n                    </InputGroup>\r\n                    <Alert style={{ width: \"100%\" }} variant=\"primary\" show={this.state.show}>\r\n                        Offer Sent to {ownerName(showOwnerId)}\r\n                    </Alert>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button onClick={() => { this.contactSeller() }}>Send</Button>\r\n                    <Button onClick={this.handleClose}>Close</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        );\r\n    }\r\n}\r\n","import React from 'react'\r\nimport { Button, ButtonToolbar, Alert } from 'react-bootstrap'\r\nimport ShowDiamond from '../components/ShowDiamond'\r\nimport SearchDiamondForm from '../components/SearchDiamondForm'\r\nimport SendMessageModal from '../components/SendMessageModal'\r\nimport SendOfferModal from '../components/SendOfferModal'\r\n\r\n\r\n//RECIVES 3 PROPS \r\n//deleteDiamond=FUNCTION TO DELETE A DIAMOND(INDEX OF THE DELETED DIAMOND) \r\n//editDiamond=FUNCTION THAT CHANGES THE STATE OF THE FATHER COMPONENT SO\r\n//                          THE ADDDIAMOND MODAL CHANGES TO EDIT MODAL(INDEX OF THE DIAMOND TO BE EDITED) \r\n//list=ARRAY OF DIAMONDS\r\nexport default class DiamondList extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      modal: false,\r\n      modalOffer: false,\r\n      index: \"\",\r\n      list: this.props.list,\r\n      show: false\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    setInterval(this.hideAlert, 10000);\r\n  }\r\n  componentWillReceiveProps(nextProps) {\r\n    let list = nextProps.list;\r\n    this.setState({ list })\r\n  }\r\n\r\n  toggle = (e) => {\r\n    this.setState({\r\n      modal: !this.state.modal,\r\n      index: e.target.value\r\n    });\r\n  }\r\n  toggleOffer = (e) => {\r\n    this.setState({\r\n      modalOffer: !this.state.modalOffer,\r\n      index: e.target.value\r\n    });\r\n  }\r\n  handleClose = () => {\r\n    this.setState({\r\n      modal: false,\r\n      modalOffer: false,\r\n    });\r\n\r\n  }\r\n  // CALLS THE FATHER COMPONENT'S FUNCTION DELETEDIAMOND WITH THE INDEX OF THE DIAMOND\r\n  deleteDiamond = (element) => {\r\n    this.props.deleteDiamond(element.target.value)\r\n  }\r\n  // CALLS THE FATHER COMPONENT'S FUNCTION EDITDIAMOND WITH THE INDEX OF THE DIAMOND\r\n  editDiamond = (element) => {\r\n\r\n    this.props.editDiamond(element.target.value)\r\n  }\r\n  showAlert = () => {\r\n    let { show } = this.state;\r\n    show = true;\r\n    this.setState({ show });\r\n  }\r\n  hideAlert = () => {\r\n    let { show } = this.state;\r\n    show = false;\r\n    this.setState({ show });\r\n  }\r\n  render() {\r\n    const {cart}=this.props;\r\n\r\n    var result = [];\r\n    for (var i = 0; i < this.state.list.length; i++) {\r\n      if (this.state.list[i].inFilter(this.props.filter)\r\n        && (!this.props.filter.owner\r\n          || this.state.list[i].owner.id === this.props.activeUser.id)) {\r\n        if (!this.props.activeUser) {\r\n          //IF anonimus \r\n          //DISPLAY SINGLE DIAMOND\r\n\r\n          result.push( <ShowDiamond  key={i} ownerName={this.props.ownerName} edit={i} description={this.state.list[i]}>\r\n            <ButtonToolbar>\r\n              {/* DISPLAY THE USER'S ACTION BUTTONS */}\r\n              <Button onClick={(e) => {\r\n                  if (!cart.includes(this.state.list[e.target.value].id)){\r\n                  this.props.addToCart(this.state.list[e.target.value].id);\r\n                  this.showAlert();\r\n                }}}\r\n                value={i} style={{ width: \"100px\", height: \"60px\", marginLeft: \"15px\", marginTop: \"10px\" }} variant=\"success\">Add to Cart</Button>\r\n            </ButtonToolbar>\r\n          </ShowDiamond>\r\n          )\r\n          ;\r\n        }\r\n\r\n        else\r\n          if (this.state.list[i].owner.id == this.props.activeUser.id) {\r\n            //IF THE USER IS THE OWNER OF THE DIAMOND\r\n            //DISPLAY SINGLE DIAMOND\r\n            result.push(<ShowDiamond key={i} ownerName={this.props.ownerName} edit={i} description={this.state.list[i]}>\r\n              <ButtonToolbar>\r\n                {/* DISPLAY THE OWNER'S ACTION BUTTONS */}\r\n                <Button onClick={this.editDiamond} value={i} style={{ width: \"100px\", height: \"60px\", marginLeft: \"15px\", marginTop: \"10px\" }} variant=\"warning\">Edit</Button>\r\n                <Button onClick={this.deleteDiamond} value={i} style={{ width: \"100px\", height: \"60px\", marginLeft: \"15px\", marginTop: \"10px\" }} variant=\"danger\">Delete</Button>\r\n                {/* <Button value={i} style={{ width: \"100px\", height: \"60px\", marginLeft: \"15px\", marginTop: \"10px\" }} variant=\"dark\" >Add to Auction</Button> */}\r\n              </ButtonToolbar>\r\n            </ShowDiamond>)\r\n            ;\r\n          }\r\n          else {\r\n            //IF THE USER IS NOT THE OWNER OF THE DIAMOND\r\n            //DISPLAY SINGLE DIAMOND\r\n            result.push(<ShowDiamond key={i}  ownerName={this.props.ownerName} edit={i} description={this.state.list[i]}>\r\n              <ButtonToolbar>\r\n                {/* DISPLAY THE USER'S ACTION BUTTONS */}\r\n\r\n                <Button onClick={this.toggleOffer} value={i} style={{ width: \"100px\", height: \"60px\", marginLeft: \"15px\", marginTop: \"10px\" }} variant=\"primary\">Offer</Button>\r\n                <Button onClick={(e) => {\r\n                  if (!cart.includes(this.state.list[e.target.value].id)){\r\n                  this.props.addToCart(this.state.list[e.target.value].id);\r\n                  this.showAlert();\r\n                }}}\r\n                  value={i} style={{ width: \"100px\", height: \"60px\", marginLeft: \"15px\", marginTop: \"10px\" }} variant=\"success\">Add to cart</Button>\r\n                <Button onClick={this.toggle} value={i} style={{ width: \"100px\", height: \"60px\", marginLeft: \"15px\", marginTop: \"10px\" }} variant=\"secondary\" >Contact seller</Button>\r\n                {/* <Button value={i} style={{ width: \"100px\", height: \"60px\", marginLeft: \"15px\", marginTop: \"10px\" }} variant=\"info\" >Bid</Button> */}\r\n              </ButtonToolbar>\r\n            </ShowDiamond>);\r\n          }\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <Alert id=\"alertAddToCart\" key=\"alert\" variant=\"info\" show={this.state.show}>\r\n          Diamond has been added to your Cart\r\n        </Alert>\r\n        <SearchDiamondForm clearFilter={this.props.clearFilter} filter={this.props.filter} setFilter={this.props.setFilter} />\r\n        {result}\r\n        <SendMessageModal show={this.state.modal} diamond={this.state.list[this.state.index]} activeUser={this.props.activeUser} addMessage={this.props.addMessage} close={this.handleClose} ownerName={this.props.ownerName} />\r\n        <SendOfferModal show={this.state.modalOffer} diamond={this.state.list[this.state.index]} activeUser={this.props.activeUser} addMessage={this.props.addMessage} close={this.handleClose} ownerName={this.props.ownerName} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { Container, Button } from 'react-bootstrap'\r\nimport AddDiamond from '../components/AddNewDiamond'\r\nimport DiamondList from '../components/DiamondsList'\r\nimport { user, listPrice } from '../App'\r\nimport { Diamond1 } from '../Classes/Diamond'\r\nimport DiamondNavbar from '../components/DiamondNavbar';\r\nimport diamondPic from '../data/l8cb11pkn10.jpg'\r\nimport Parse from 'parse'; \r\n\r\nimport priceList from '../data/prices.json';\r\nconst axios = require('axios').default\r\n\r\n\r\nexport class Search extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      diamondArr: [],\r\n      prices: [],\r\n      isLoading: true,\r\n      filter: {\r\n        shape: [],\r\n        colorMin: \"D\",\r\n        colorMax: \"YZ\",\r\n        clarityMin: \"FL\",\r\n        clarityMax: \"I3\",\r\n        weightMin: 0,\r\n        weightMax: 10000,\r\n        owner: false,\r\n        clearColorFilter: false,\r\n        clearClarityFilter: false\r\n      },\r\n      edit: -1\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    // let {diamondArr,isLoading,prices}=this.state;\r\n    let isLoading = true;\r\n    let diamondArr = [];\r\n    let prices = priceList;\r\n    var newDiamond;\r\n    const Diamond = Parse.Object.extend('Diamond');\r\n    const query = new Parse.Query(Diamond);\r\n    query.find().then((diamondsParse) => {\r\n      // You can use the \"get\" method to get the value of an attribute\r\n      // Ex: response.get(\"<ATTRIBUTE_NAME>\")\r\n      diamondsParse.forEach((diamond) => {\r\n        newDiamond = new Diamond1(diamond);\r\n        diamondArr = diamondArr.concat([newDiamond]);\r\n      })\r\n      isLoading = false;\r\n      this.setState({ diamondArr, isLoading, prices })\r\n    }, (error) => {\r\n\r\n      console.error('Error while fetching Diamond', error);\r\n    });\r\n  }\r\n\r\n  saveDiamond = (diamond, atEdit) => {\r\n    console.log(diamond);\r\n    let { edit, diamondArr } = this.state;\r\n\r\n    if (atEdit === -1) {\r\n\r\n      const Diamond = Parse.Object.extend('Diamond');\r\n      const myNewObject = new Diamond();\r\n\r\n      myNewObject.set('lotID', diamond.lotID);\r\n      myNewObject.set('shape', diamond.shape);\r\n      myNewObject.set('weight', Number(diamond.weight));\r\n      myNewObject.set('color', diamond.color);\r\n      myNewObject.set('clarity', diamond.clarity);\r\n      myNewObject.set('cut', diamond.cut);\r\n      myNewObject.set('polish', diamond.polish);\r\n      myNewObject.set('symmetry', diamond.symmetry);\r\n      myNewObject.set('fluorescence', diamond.fluorescence);\r\n      myNewObject.set('fluorescenceColor', diamond.fluorescenceColor);\r\n      myNewObject.set('lab', diamond.lab);\r\n      myNewObject.set('certificateNumber', diamond.certificateNumber);\r\n      myNewObject.set('depth', Number(diamond.depth));\r\n      myNewObject.set('table', Number(diamond.table));\r\n      myNewObject.set('crownAngle', Number(diamond.crownAngle));\r\n      myNewObject.set('crownHeight', Number(diamond.crownHeight));\r\n      myNewObject.set('pavillionAngle', Number(diamond.pavillionAngle));\r\n      myNewObject.set('pavillionDepth', Number(diamond.pavillionDepth));\r\n      myNewObject.set('starLength', Number(diamond.starLength));\r\n      myNewObject.set('lowerHalf', Number(diamond.lowerHalf));\r\n      myNewObject.set('girdle', diamond.girdle);\r\n      myNewObject.set('culet', diamond.culet);\r\n      myNewObject.set('list', Number(diamond.list));\r\n      myNewObject.set('discount', Number(diamond.discount));\r\n      myNewObject.set('pricePerCarat', Number(diamond.pricePerCarat));\r\n      myNewObject.set('links', diamond.links);\r\n      // myNewObject.set('inclusions',diamond.inclusions);\r\n      if (diamond.keepDiscount) {myNewObject.set('keepDiscount', true)} else {myNewObject.set('keepDiscount', false)}\r\n      // myNewObject.set('keepDiscount', diamond.keepDiscount);\r\n      myNewObject.set('diamMin', Number(diamond.diamMin));\r\n      myNewObject.set('diamMax', Number(diamond.diamMax));\r\n      myNewObject.set('deptAvg', Number(diamond.deptAvg));\r\n      myNewObject.set('owner', Parse.User.current());\r\n\r\n      if (diamond.pic1 && diamond.pic1.file) myNewObject.set('pic1', new Parse.File(diamond.pic1.name, diamond.pic1.file));\r\n      if (diamond.pic2 && diamond.pic2.file) myNewObject.set('pic2', new Parse.File(diamond.pic2.name, diamond.pic2.file));\r\n\r\n      myNewObject.save().then(\r\n        (result) => {\r\n          console.log('Diamond created', result);\r\n          diamondArr = diamondArr.concat([new Diamond1(result)]);\r\n    \r\n          edit = -1;\r\n          this.setState({ edit, diamondArr });\r\n        },\r\n        (error) => {\r\n          console.error('Error while creating Diamond: ', error);\r\n        }\r\n      );\r\n    }\r\n    else {\r\n      const Diamond = Parse.Object.extend('Diamond');\r\n      const query = new Parse.Query(Diamond);\r\n      // here you put the objectId that you want to update\r\n      query.get(diamond.id).then((object) => {\r\n        object.set('lotID', diamond.lotID);\r\n        object.set('shape', diamond.shape);\r\n        object.set('weight', Number(diamond.weight));\r\n        object.set('color', diamond.color);\r\n        object.set('clarity', diamond.clarity);\r\n        object.set('cut', diamond.cut);\r\n        object.set('polish', diamond.polish);\r\n        object.set('symmetry', diamond.symmetry);\r\n        object.set('fluorescence', diamond.fluorescence);\r\n        object.set('fluorescenceColor', diamond.fluorescenceColor);\r\n        object.set('lab', diamond.lab);\r\n        object.set('certificateNumber', diamond.certificateNumber);\r\n        object.set('depth', Number(diamond.depth));\r\n        object.set('table', Number(diamond.table));\r\n        object.set('crownAngle', Number(diamond.crownAngle));\r\n        object.set('crownHeight', Number(diamond.crownHeight));\r\n        object.set('pavillionAngle', Number(diamond.pavillionAngle));\r\n        object.set('pavillionDepth', Number(diamond.pavillionDepth));\r\n        object.set('starLength', Number(diamond.starLength));\r\n        object.set('lowerHalf', Number(diamond.lowerHalf));\r\n        object.set('girdle', diamond.girdle);\r\n        object.set('culet', diamond.culet);\r\n        object.set('list', Number(diamond.list));\r\n        object.set('discount', Number(diamond.discount));\r\n        object.set('pricePerCarat', Number(diamond.pricePerCarat));\r\n        object.set('links', diamond.links);\r\n        // object.set('inclusions',diamond.inclusions);\r\n        if (diamond.keepDiscount) {object.set('keepDiscount', true)} else {object.set('keepDiscount', false)}\r\n        object.set('diamMin', Number(diamond.diamMin));\r\n        object.set('diamMax', Number(diamond.diamMax));\r\n        object.set('deptAvg', Number(diamond.deptAvg));\r\n        object.set('owner', Parse.User.current());\r\n  \r\n        if (!diamond.pic1.file) {object.set('pic1',null)}\r\n        else if (!diamond.pic1.file[\"_name\"]){ object.set('pic1', new Parse.File(diamond.pic1.name, diamond.pic1.file)); }\r\n        else  {object.set('pic1', diamond.pic1.file)};\r\n        if (!diamond.pic2.file) {object.set('pic2',null)}\r\n        else if (!diamond.pic2.file[\"_name\"]){ object.set('pic2', new Parse.File(diamond.pic2.name, diamond.pic2.file)); }\r\n        else  {object.set('pic2', diamond.pic2.file)};       \r\n        object.save().then((response) => {\r\n          // You can use the \"get\" method to get the value of an attribute\r\n          // Ex: response.get(\"<ATTRIBUTE_NAME>\")\r\n          console.log('Updated Diamond', response);\r\n         diamondArr.splice(atEdit, 1, new Diamond1(response));\r\n          edit = -1;\r\n          this.setState({ edit, diamondArr });\r\n        }, (error) => {\r\n\r\n          console.error('Error while updating Diamond', error);\r\n        });\r\n      });\r\n\r\n    }\r\n\r\n  }\r\n\r\n  deleteDiamond = (index) => {\r\n    let { diamondArr } = this.state;\r\n    let id = diamondArr[index].id;\r\n    const Diamond = Parse.Object.extend('Diamond');\r\n    const query = new Parse.Query(Diamond);\r\n    // here you put the objectId that you want to delete\r\n    query.get(id).then((object) => {\r\n      object.destroy().then((response) => {\r\n\r\n        var newArr = diamondArr.splice(index, 1);\r\n        this.setState(newArr);\r\n        console.log('Deleted Diamond', response);\r\n      }, (error) => {\r\n\r\n        console.error('Error while deleting Diamond', error);\r\n      });\r\n    });\r\n\r\n\r\n  }\r\n  setFilter = (filter) => {\r\n    this.setState({ filter })\r\n  }\r\n  editDiamond = (index) => {\r\n    let newState = this.state;\r\n    newState.edit = index;\r\n    this.setState(newState)\r\n  }\r\n  cancelEdit = () => {\r\n    let newState = {\r\n      edit: -1\r\n    }\r\n    this.setState(newState)\r\n  }\r\n  clearFilter = () => {\r\n    let filter = {\r\n      shape: [],\r\n      colorMin: \"D\",\r\n      colorMax: \"YZ\",\r\n      clarityMin: \"FL\",\r\n      clarityMax: \"I3\",\r\n      weightMin: \"\",\r\n      weightMax: \"\",\r\n      owner: false,\r\n      clearClarityFilter: true,\r\n      clearColorFilter: true\r\n    }\r\n    this.setFilter(filter);\r\n  }\r\n  render() {\r\n    const { activeUser, handleLogout, allMessages } = this.props;\r\n    if (this.state.isLoading) return false;\r\n \r\n    return (\r\n\r\n      <Container >\r\n        <DiamondNavbar cart={this.props.cart}  allMessages={allMessages} activeUser={activeUser} handleLogout={handleLogout} />\r\n        <AddDiamond filter={this.state.filter} setFilter={this.setFilter} activeUser={activeUser} saveDiamond={this.saveDiamond} cancelEdit={this.cancelEdit} addEdit={this.addEdit} prices={this.state.prices} edit={this.state.edit} diamonds={this.state.diamondArr} />\r\n        <DiamondList cart={this.props.cart}   addToCart={this.props.addToCart}  addMessage={this.props.addMessage} clearFilter={this.clearFilter} filter={this.state.filter} setFilter={this.setFilter} ownerName={this.props.ownerName} activeUser={activeUser} deleteDiamond={this.deleteDiamond} editDiamond={this.editDiamond} list={this.state.diamondArr} />\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Search;","import React from 'react'\r\nimport { Container,Form, Button, Alert } from 'react-bootstrap'\r\nimport { Redirect } from 'react-router-dom';\r\nimport DiamondNavbar from '../components/DiamondNavbar';\r\nimport User from '../Classes/User'\r\nimport Parse from 'parse';\r\n\r\nclass LoginPage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            invalidLogin: false,\r\n            successLogin: false\r\n        }\r\n\r\n        this.emailInput = React.createRef();\r\n        this.pwdInput = React.createRef();\r\n\r\n        this.login = this.login.bind(this);\r\n    }\r\n\r\n    login() {\r\n        // Pass the username and password to logIn function\r\n        Parse.User.logIn(this.emailInput.current.value,this.pwdInput.current.value).then((user) => {\r\n            // Do stuff after successful login\r\n             console.log('Logged in user', user);\r\n\r\n            const User1 = new Parse.User();\r\n            const query = new Parse.Query(User1);\r\n\r\n            // Finds the user by its ID\r\n            query.get(user.id).then((user) => {\r\n                // Updates the data we want\r\n                user.set('isLogin', true);\r\n                user.save().then((response) => {\r\n                console.log('Updated user', response);\r\n                    this.props.handleLogin(new User(user));\r\n                    this.setState({successLogin: true});\r\n\r\n\r\n            }).catch((error) => {\r\n            console.error('Error while updating user', error);\r\n            });\r\n            });\r\n\r\n        }).catch(error => {\r\n  \r\n            console.error('Error while logging in user', error);\r\n            this.setState({invalidLogin: true});\r\n        })\r\n\r\n    }\r\n\r\n    render() {\r\n        const { activeUser, handleLogout } = this.props;\r\n        if (this.state.successLogin) {\r\n            return <Redirect to=\"/home\"/>\r\n        }\r\n\r\n        return (\r\n            <Container>\r\n            <DiamondNavbar cart={this.props.cart}   allMessages={this.state.allMessages} activeUser={activeUser} handleLogout={handleLogout}/>\r\n            <div className=\"login\">\r\n                <h1>Login to Diamonds</h1>\r\n                <p>or <a href=\"#/signup\">create an account</a></p>\r\n                <Alert variant=\"danger\" show={this.state.invalidLogin}>\r\n                    Invalid email or password!\r\n                </Alert>\r\n                <Form>\r\n                    <Form.Group controlId=\"formBasicEmail\">\r\n                        <Form.Label>Email address</Form.Label>\r\n                        <Form.Control \r\n                        // value=\"pintob\" \r\n                        ref={this.emailInput} type=\"email\" placeholder=\"Enter email\"/>\r\n                        <Form.Text className=\"text-muted\">\r\n                            We'll never share your email with anyone else.\r\n                        </Form.Text>\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"formBasicPassword\">\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control\r\n                        //  value=\"1397\"\r\n                          ref={this.pwdInput}  type=\"password\" placeholder=\"Password\"/>\r\n                    </Form.Group>\r\n                    <Button variant=\"success\" type=\"button\" block onClick={this.login}>\r\n                        Login\r\n                    </Button>\r\n                </Form>\r\n            </div>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\nexport default LoginPage;","import React from 'react'\r\nimport { Container, Form, Button, Alert, Image } from 'react-bootstrap'\r\nimport { Redirect } from 'react-router-dom';\r\nimport DiamondNavbar from '../components/DiamondNavbar';\r\nimport User from '../Classes/User'\r\nimport Parse from 'parse';\r\n\r\nclass SignupPage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            invalidLogin: false,\r\n            successLogin: false,\r\n            image: \"\"\r\n        }\r\n\r\n        this.emailInput = React.createRef();\r\n        this.pwdInput = React.createRef();\r\n        this.userInput = React.createRef();\r\n        this.lnameInput = React.createRef();\r\n        this.fnameInput = React.createRef();\r\n    }\r\n\r\n    signup = () => {\r\nconst {image}=this.state;\r\n        const user = new Parse.User()\r\n        user.set('username', this.userInput.current.value);\r\n        user.set('email', this.emailInput.current.value);\r\n        user.set('lname', this.lnameInput.current.value);\r\n        user.set('fname', this.fnameInput.current.value);\r\n        user.set('password', this.pwdInput.current.value);\r\n        user.set('isLogin', true);\r\n        if (image) user.set('pic', new Parse.File(image[\"_name\"], image.file));\r\n        user.signUp().then((user) => {\r\n\r\n            console.log('User signed up', user);\r\n            this.props.handleLogin(new User(user));\r\n            this.setState({ successLogin: true });\r\n\r\n        }).catch(error => {\r\n\r\n            console.error('Error while signing up user', error);\r\n            this.setState({ invalidLogin: true });\r\n        });\r\n\r\n    }\r\n    imgChange=(ev)=> {\r\n\r\n        let image = {};\r\n        image.file = ev.target.files[0];\r\n        if (image.file) {\r\n            image.URL = URL.createObjectURL(image.file);\r\n        } else {\r\n            image.URL = \"\";\r\n        }\r\n        this.setState({ image });\r\n    }\r\n    render() {\r\n        const { activeUser, handleLogout } = this.props;\r\n        const { image } = this.state;\r\n        if (this.state.successLogin) {\r\n            return <Redirect to=\"/home\" />\r\n        }\r\n\r\n        return (\r\n            <Container>\r\n                <DiamondNavbar cart={this.props.cart}  allMessages={this.state.allMessages} activeUser={activeUser} handleLogout={handleLogout} />\r\n                <div className=\"login\">\r\n                    <h1>SignUp to Diamonds</h1>\r\n                    <p>or <a href=\"#/login\">Allready have an accout? Login here</a></p>\r\n                    <Alert variant=\"danger\" show={this.state.invalidLogin}>\r\n                        Signup has failed! Please choose a complex password\r\n                </Alert>\r\n                    <Form>\r\n                        <Form.Group controlId=\"formBasicUsername\">\r\n                            <Form.Label>User Name</Form.Label>\r\n                            <Form.Control ref={this.userInput} type=\"text\" placeholder=\"Enter username\" />\r\n                            <Form.Text className=\"text-muted\">\r\n                            </Form.Text>\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"formBasicEmail\">\r\n                            <Form.Label>Email address</Form.Label>\r\n                            <Form.Control ref={this.emailInput} type=\"email\" placeholder=\"Enter email\" />\r\n                            <Form.Text className=\"text-muted\">\r\n                                We'll never share your email with anyone else.\r\n                        </Form.Text>\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"formBasicPassword\">\r\n                            <Form.Label>Password</Form.Label>\r\n                            <Form.Control ref={this.pwdInput} type=\"password\" placeholder=\"Password\" />\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"formBasicfname\">\r\n                            <Form.Label>First Name</Form.Label>\r\n                            <Form.Control ref={this.fnameInput} type=\"text\" placeholder=\"Enter first name\" />\r\n                            <Form.Text className=\"text-muted\">\r\n                            </Form.Text>\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"formBasiclname\">\r\n                            <Form.Label>Last Name</Form.Label>\r\n                            <Form.Control ref={this.lnameInput} type=\"text\" placeholder=\"Enter Last name\" />\r\n                            <Form.Text className=\"text-muted\">\r\n                            </Form.Text>\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"formFile1\">\r\n                            <Form.Label >\r\n                                Choose an Image file\r\n                            </Form.Label>\r\n                            Image\r\n                            <Form.Control data-id=\"1\" type=\"file\" placeholder=\"Diamond image URL\" accept=\"image/*\" onChange={this.imgChange} />\r\n                            <Image src={image.URL} style={{ width: \"15%\" }} fluid />\r\n                        </Form.Group>\r\n                        <Button variant=\"success\" type=\"button\" block onClick={this.signup}>\r\n                            Signup\r\n                    </Button>\r\n                    </Form>\r\n                </div>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\nexport default SignupPage;","import React from 'react';\r\nimport { InputGroup, FormControl,Jumbotron,Container } from 'react-bootstrap'\r\nimport Cards from 'react-credit-cards';\r\n\r\n\r\n//payment form\r\nexport default class PaymentForm extends React.Component {\r\n    state = {\r\n        cvc: '',\r\n        expiry: '',\r\n        focus: '',\r\n        name: '',\r\n        number: '',\r\n    };\r\n\r\n    handleInputFocus = (e) => {\r\n        this.setState({ focus: e.target.name });\r\n    }\r\n\r\n    handleInputChange = (e) => {\r\n        const { name, value } = e.target;\r\n\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n\r\n        <Jumbotron fluid>\r\n                <Container>\r\n                    <h1>Payment</h1>\r\n                    <p>\r\n                        Please enter your credit card information\r\n                    </p>\r\n   \r\n                <Cards className=\"md-12 sm-12\"\r\n                    cvc={this.state.cvc}\r\n                    expiry={this.state.expiry}\r\n                    focus={this.state.focus}\r\n                    name={this.state.name}\r\n                    number={this.state.number}\r\n                />\r\n                <div \r\n                style={{ width: \"100%\", marginTop: \"50px\" }} \r\n                // className=\" container md-6 sm-12 mr-auto\"  \r\n                >\r\n                    <InputGroup className=\"mb-3 sm-12\">\r\n                        <FormControl\r\n                            type=\"tel\"\r\n                            name=\"number\"\r\n                            placeholder=\"Card Number\"\r\n                            aria-label=\"Card Number\"\r\n                            aria-describedby=\"basic-addon1\"\r\n                            onChange={this.handleInputChange}\r\n                            onFocus={this.handleInputFocus}\r\n                        />\r\n                    </InputGroup>\r\n                    <InputGroup className=\"mb-3 sm-6\">\r\n                        <FormControl\r\n                            type=\"number\"\r\n                            name=\"expiry\"\r\n                            placeholder=\"MMYY\"\r\n                            aria-label=\"MMYY\"\r\n                            aria-describedby=\"basic-addon1\"\r\n                            onChange={this.handleInputChange}\r\n                            onFocus={this.handleInputFocus}\r\n                        />\r\n                    </InputGroup>\r\n                    <InputGroup className=\"mb-3 sm-6\">\r\n                        <FormControl\r\n                            type=\"number\"\r\n                            name=\"cvc\"\r\n                            placeholder=\"CVC\"\r\n                            aria-label=\"CVC\"\r\n                            aria-describedby=\"basic-addon1\"\r\n                            onChange={this.handleInputChange}\r\n                            onFocus={this.handleInputFocus}\r\n                        />\r\n                    </InputGroup>\r\n                    <InputGroup className=\"mb-3 sm-12\">\r\n                        <FormControl\r\n                            type=\"text\"\r\n                            name=\"name\"\r\n                            placeholder=\"name\"\r\n                            aria-label=\"name\"\r\n                            aria-describedby=\"basic-addon1\"\r\n                            onChange={this.handleInputChange}\r\n                            onFocus={this.handleInputFocus}\r\n                        />\r\n                    </InputGroup>\r\n                </div>\r\n                </Container>\r\n            </Jumbotron>\r\n        );\r\n    }\r\n}","import React from 'react'\r\nimport { Container,Table } from 'react-bootstrap'\r\n// import { Redirect } from 'react-router-dom';\r\nimport DiamondNavbar from '../components/DiamondNavbar';\r\nimport { Diamond1 } from '../Classes/Diamond';\r\nimport Parse from 'parse';\r\nimport deleteFromCartIcon from '../data/delete-1507091-1279000.png'\r\nimport PaymentForm from '../components/PaymentForm'\r\n\r\n// import User from '../Classes/User'\r\n// import Parse from 'parse';\r\n\r\nclass ShoppingCart extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            diamondsInCart: []\r\n        }\r\n    }\r\n    componentDidMount(){\r\n            let diamondsInCart=[];\r\n            const {cart}=this.props;\r\n            const Diamond = Parse.Object.extend('Diamond');\r\n            const query = new Parse.Query(Diamond);\r\n\r\n            query.find().then((results) => {\r\n                // You can use the \"get\" method to get the value of an attribute\r\n                // Ex: response.get(\"<ATTRIBUTE_NAME>\")\r\n                results.forEach(diamond=>{\r\n                    if (cart.includes(diamond.id)) {diamondsInCart.push(new Diamond1(diamond))};\r\n                })\r\n                console.log('Diamond found', results);\r\n                this.setState({diamondsInCart});\r\n            }, (error) => {\r\n                \r\n                console.error('Error while fetching Diamond', error);\r\n            });\r\n        }\r\n        render() {\r\n            const { activeUser, handleLogout, allMessages, cart,ownerName,deleteFromCart } = this.props;\r\n            const { diamondsInCart } = this.state;\r\n            let index=-1;\r\n            let tableLines=[];\r\n            let weight,price,lineTotal,total;\r\n            let caratTotal=0;\r\n            let priceAVG=0;\r\n            total=0;\r\n            if (!diamondsInCart.length){tableLines.push(<tr key={index}><td style={{width:\"100%\"}}><h3>Your cart is empty</h3></td></tr>)}\r\n            else{\r\n            diamondsInCart.forEach(diamond=>{\r\n                index++;\r\n                weight=diamond.weight;\r\n                price=diamond.pricePerCarat;\r\n                lineTotal=weight*price;\r\n                total+=lineTotal;\r\n                caratTotal+=weight;\r\n                if (caratTotal) priceAVG=total/caratTotal;\r\n                tableLines.push(           \r\n                 <tr key={index}>\r\n                    {/* <td>{index}</td> */}\r\n                    <td style={{width:\"15%\"}}>{ownerName(diamond.owner.id)}</td>\r\n                    <td style={{width:\"15%\"}}>{`${diamond.lotID} ${diamond.shape} ${diamond.color} ${diamond.clarity}`}</td>\r\n                    <td style={{width:\"10%\"}}>{weight}</td>\r\n                    <td style={{width:\"15%\"}}>{price.toFixed(2)}</td>\r\n                    <td style={{width:\"15%\"}}>{lineTotal.toFixed(2)}</td>\r\n                    <td style={{width:\"20%\"}}><img className=\"deleteMessage\" \r\n                            onClick={()=>{\r\n                             \r\n                                    diamondsInCart.splice(index,1);\r\n                                    this.setState({diamondsInCart});\r\n                                    deleteFromCart(diamond.id);\r\n                                    \r\n                                } }\r\n                            style={{width:\"30px\"}} \r\n                            src={deleteFromCartIcon}></img></td>\r\n                </tr>)\r\n                \r\n            })\r\n            tableLines.push(           \r\n                <tr>\r\n                   {/* <td></td> */}\r\n                   <td style={{width:\"15%\"}}></td>\r\n                   <td style={{width:\"15%\"}}></td>\r\n                   <td style={{fontWeight:\"bold\",width:\"10%\"}}>{caratTotal.toFixed(2)}</td>\r\n                   <td style={{width:\"15%\"}}>{priceAVG.toFixed(2)}</td>\r\n                   <td style={{fontWeight:\"bold\",width:\"15%\"}}>{total.toFixed(2)}</td>\r\n                   <td style={{width:\"20%\"}}></td>\r\n               </tr>)           \r\n            }\r\n            return (\r\n                <Container>\r\n                    <DiamondNavbar cart={cart} allMessages={allMessages} activeUser={activeUser} handleLogout={handleLogout} />\r\n                    <h1>Shopping Cart</h1>\r\n                    <Table striped bordered hover size=\"sm\">\r\n                        <thead>\r\n                            <tr>\r\n                                {/* <th>#</th> */}\r\n                                <th style={{width:\"15%\"}}>Owner</th>\r\n                                <th style={{width:\"15%\"}}>Desc</th>\r\n                                <th style={{width:\"10%\"}}>Weight</th>\r\n                                <th style={{width:\"15%\"}}>Price</th>\r\n                                <th style={{width:\"15%\"}}>Total</th>\r\n                                <th style={{width:\"20%\"}}>Del</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {tableLines}\r\n                        </tbody>\r\n                    </Table>\r\n\r\n                    <PaymentForm/>\r\n                </Container>\r\n            );\r\n        }\r\n    }\r\n    export default ShoppingCart;","import React from 'react';\r\nimport { Container, Jumbotron, ListGroup } from 'react-bootstrap'\r\nimport messagearrived from '../data/V-512.png'\r\nimport messageread from '../data/seen-300x225.webp'\r\nimport cartIcon from '../data/flat_seo3-24-512.png'\r\n\r\nimport DiamondNavbar from '../components/DiamondNavbar';\r\n\r\nexport default class About extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n    }\r\n    render() {\r\n        const { activeUser, handleLogout, allMessages } = this.props;\r\n        return (\r\n            <Container>\r\n                <DiamondNavbar cart={this.props.cart} allMessages={allMessages} activeUser={activeUser} handleLogout={handleLogout} />\r\n                <Jumbotron fluid>\r\n                    <Container>\r\n                        <h1>About</h1>\r\n                        <p>\r\n                            this web sight has been built by Boaz Pinto as a final front end web development course project.\r\n\r\n                        </p>\r\n                        <h1>Features</h1>\r\n                        <ListGroup>\r\n                            <ListGroup.Item variant=\"primary\">Search</ListGroup.Item>\r\n                            <ListGroup.Item>show my listings - filter to owner=activeuser</ListGroup.Item>\r\n                            <ListGroup.Item>clear all filters - clear filters</ListGroup.Item>\r\n                            <ListGroup.Item>Add new Diamond - popup window to enter all diamond parameters</ListGroup.Item>\r\n                            <ListGroup.Item>Acordion - click to see aditional information and action buttons</ListGroup.Item>\r\n                            <ListGroup.Item>Hover on image to enlarge</ListGroup.Item>\r\n                            <ListGroup.Item>Delete - action button for the owner of the diamond</ListGroup.Item>\r\n                            <ListGroup.Item>Edit - action button for the owner of the diamond</ListGroup.Item>\r\n                            <ListGroup.Item>contact - action button for user to send message to the owner</ListGroup.Item>\r\n                            <ListGroup.Item>filter - filter the list of diamonds by min weight and max weight</ListGroup.Item>\r\n                            <ListGroup.Item>filter - filter the list by shapes buttons, mutiple selectio, clear all and select all</ListGroup.Item>\r\n                            <ListGroup.Item>filter - double sided range input for color and clarity</ListGroup.Item>\r\n                            <ListGroup.Item>Upload from excel</ListGroup.Item>\r\n                            <ListGroup.Item>Mapping excel headers with parse object keys</ListGroup.Item>\r\n                            <ListGroup.Item variant=\"warning\">Messages</ListGroup.Item>\r\n                            <ListGroup.Item>List of members, sorted by new messages and by last message date</ListGroup.Item>\r\n                            <ListGroup.Item>search a member by name or by userName</ListGroup.Item>\r\n                            <ListGroup.Item>show conversation with member as a chat style</ListGroup.Item>\r\n                            <ListGroup.Item>each message yoy send shows if it has been arrived <img style={{width:\"20px\"}} src={messagearrived}></img> or read <img style={{width:\"20px\"}}  src={messageread}></img></ListGroup.Item>\r\n                            <ListGroup.Item>Delete message you wrote will delete message both sides</ListGroup.Item>\r\n                            <ListGroup.Item>Delete message you reccieved will delete it only your side</ListGroup.Item>\r\n                            <ListGroup.Item>input field to send message</ListGroup.Item>\r\n                            <ListGroup.Item variant=\"success\">Cart<img  style={{width:\"30px\"}} src={cartIcon} ></img></ListGroup.Item>\r\n                            <ListGroup.Item>show your items in cart</ListGroup.Item>\r\n                            <ListGroup.Item>combines diamonds in cart at login</ListGroup.Item>\r\n                            <ListGroup.Item>canceling diamonds in cart that are owned by activeuser </ListGroup.Item>\r\n                            <ListGroup.Item>delete button to remove from cart</ListGroup.Item>\r\n                            <ListGroup.Item>summery of carats and prices</ListGroup.Item>\r\n                            <ListGroup.Item>credit card form that shows an image of the credit card company by the first digits of credit muber</ListGroup.Item>\r\n                            <ListGroup.Item variant=\"danger\">Login</ListGroup.Item>\r\n                            <ListGroup.Item variant=\"primary\">Signup</ListGroup.Item>\r\n                            <ListGroup.Item variant=\"success\">HomePage</ListGroup.Item>\r\n                            <ListGroup.Item>Carousel with pictures of diamonds and major diamond centers worlwide</ListGroup.Item>\r\n                        </ListGroup>\r\n                        <h1>Contact</h1>\r\n                        <p>\r\n                            Boaz Pinto - pintob@gmail.com\r\n\r\n                        </p>\r\n                    </Container>\r\n                </Jumbotron>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\n","import React from 'react';\r\nimport { Container, Jumbotron, Table, Form, Button } from 'react-bootstrap'\r\nimport readXlsxFile from 'read-excel-file'\r\nimport DiamondNavbar from '../components/DiamondNavbar';\r\nimport Parse from 'parse';\r\nimport excelIcon from '../data/38-383271_excel-logo-png-microsoft-excel-logo-transparent-png.png'\r\nimport excelTemplet from '../data/Save_Excel_Icon.jpg'\r\nimport zipcelx from 'zipcelx';\r\n\r\n//upload diamonds from excel sheet\r\nexport default class LoadExcel extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            excelRows: [], //keep the excel data rows\r\n            headers: [], //keep the excel headers row\r\n            header: {}, //keep an object with parse diamond keys and an index that represent the column number in the excel\r\n            log1: []    // keeps the remarks log to show at the end of the upload\r\n        }\r\n\r\n    }\r\n    // internal function to save a diamond in parse. input : object with one diamond data\r\n    saveDiamond = (diamond) => {\r\n\r\n        const Diamond = Parse.Object.extend('Diamond');\r\n        const myNewObject = new Diamond();\r\n\r\n        myNewObject.set('lotID', diamond.lotID);\r\n        myNewObject.set('shape', diamond.shape);\r\n        myNewObject.set('weight', Number(diamond.weight));\r\n        myNewObject.set('color', diamond.color);\r\n        myNewObject.set('clarity', diamond.clarity);\r\n        myNewObject.set('cut', diamond.cut);\r\n        myNewObject.set('polish', diamond.polish);\r\n        myNewObject.set('symmetry', diamond.symmetry);\r\n        myNewObject.set('fluorescence', diamond.fluorescence);\r\n        myNewObject.set('fluorescenceColor', diamond.fluorescenceColor);\r\n        myNewObject.set('lab', diamond.lab);\r\n        myNewObject.set('certificateNumber', diamond.certificateNumber);\r\n        myNewObject.set('depth', Number(diamond.depth));\r\n        myNewObject.set('table', Number(diamond.table));\r\n        myNewObject.set('crownAngle', Number(diamond.crownAngle));\r\n        myNewObject.set('crownHeight', Number(diamond.crownHeight));\r\n        myNewObject.set('pavillionAngle', Number(diamond.pavillionAngle));\r\n        myNewObject.set('pavillionDepth', Number(diamond.pavillionDepth));\r\n        myNewObject.set('starLength', Number(diamond.starLength));\r\n        myNewObject.set('lowerHalf', Number(diamond.lowerHalf));\r\n        myNewObject.set('girdle', diamond.girdle);\r\n        myNewObject.set('culet', diamond.culet);\r\n        if (!diamond.list&&diamond.list!=0) diamond.list=0;\r\n        myNewObject.set('list', Number(diamond.list));\r\n        if (!diamond.list&&diamond.discount!=\"0\") diamond.discount=null;\r\n        myNewObject.set('discount', Number(diamond.discount));\r\n        myNewObject.set('pricePerCarat', Number(diamond.pricePerCarat));\r\n        myNewObject.set('links', diamond.links);\r\n        // myNewObject.set('inclusions',diamond.inclusions);\r\n        if (diamond.keepDiscount===\"true\"||diamond.discount!=null) {diamond.keepDiscount=true} else {diamond.keepDiscount=false};\r\n        myNewObject.set('keepDiscount', diamond.keepDiscount);\r\n        myNewObject.set('diamMin', Number(diamond.diamMin));\r\n        myNewObject.set('diamMax', Number(diamond.diamMax));\r\n        myNewObject.set('deptAvg', Number(diamond.deptAvg));\r\n        myNewObject.set('owner', Parse.User.current());\r\n        myNewObject.save().then(\r\n            (result) => {\r\n                console.log('Diamond created', result);\r\n            },\r\n            (error) => {\r\n                console.error('Error while creating Diamond: ', error);\r\n            }\r\n        );\r\n\r\n\r\n    }\r\n\r\n    // function to load excel data using libraary 'read-excel-file', and set the state with the headers line and the data lines\r\n    // if any excel header column match a parse diamond object key, header state i also updated with the column number (example: header={shape: 2,color:4})\r\n    loadExcelFile = (e) => {\r\n        let { excelRows, headers, header, log1 } = this.state;\r\n        excelRows = [];\r\n        headers = [];\r\n        header = {};\r\n        log1 = [];\r\n\r\n        const input = e.target;\r\n        readXlsxFile(input.files[0]).then((rows) => {\r\n            // `rows` is an array of rows\r\n            // each row being an array of cells.\r\n\r\n            headers = rows[0];\r\n            excelRows = rows.splice(1, rows.length - 1);\r\n            for (var i = 0; i < headers.length; i++) {\r\n                if ([\"shape\", \"weight\", \"color\", \"clarity\", \"lotID\", \"cut\", \"polish\", \"symmetry\",\r\n                    \"fluorescence\", \"fluorescenceColor\", \"lab\", \"certificateNumber\", \"depth\", \"table\",\r\n                    \"crownAngle\", \"crownHeight\", \"pavillionAngle\", \"pavillionDepth\", \"starLength\", \"lowerHalf\",\r\n                    \"girdle\", \"culet\", \"discount\", \"pricePerCarat\", \"diamMin\", \"diamMax\", \"deptAvg\"\r\n                ].includes(headers[i])) { header[headers[i]] = i }\r\n            }\r\n            this.setState({ excelRows, headers, header, log1 })\r\n        })\r\n    }\r\n\r\n    //when a key is picked from a list, add to header (example: header={shape: 2,color:4})\r\n    getValues = (e) => {\r\n\r\n        let { header } = this.state;\r\n        header[e.target.value] = parseInt(e.target.id);\r\n        this.setState({ header });\r\n    }\r\n\r\n    // for each row in the data, builds an object of diamond using the map built in state.header  (example: header={shape: 2,color:4,clarity:1,lotId:5}==> diamond={shape:value in column 2, color:value in column 4.......})\r\n    // attempts to upload diamonds to parse\r\n    // 6 keys are must : lotID,weight,shape,color,clarity and pricePerCarat\r\n    // for now the data is not verified\r\n    upload = () => {\r\n        const { activeUser } = this.props;\r\n        let { header, excelRows, log1 } = this.state;\r\n        const headerKeys = Object.keys(header);\r\n        let index = -1;\r\n        excelRows.forEach(row => {\r\n            //builds the diamond object with the data from excell data line\r\n            let diamond = {};\r\n            index++;\r\n            for (var i = 0; i < headerKeys.length; i++) {\r\n                if ([\"weight\", \"dept\", \"table\", \"crownAngle\", \"crownHeight\", \"pavillionAngle\", \"pavillionDept\", \"starLength\", \"lowerHalf\", \"discount\", \"pricePerCarat\", \"deptAvg\", \"diamMin\", \"diamMax\"].includes(headerKeys[i])) {\r\n                    diamond[headerKeys[i]] = Number(row[header[headerKeys[i]]])\r\n                }\r\n                else if ([\"lotID\", \"fluorescence\", \"fluorescenceColor\", \"culet\"].includes(headerKeys[i])) {\r\n                    if (row[header[headerKeys[i]]])\r\n                    diamond[headerKeys[i]] = row[header[headerKeys[i]]].toString()\r\n                }\r\n                else {\r\n                    if (row[header[headerKeys[i]]])\r\n                    diamond[headerKeys[i]] = row[header[headerKeys[i]]].toString();\r\n                }\r\n            }\r\n            diamond.owner = Parse.User.current();\r\n            if (diamond.keepDiscount || diamond.keepDiscount === 0) { diamond.keepDiscount = true } else { diamond.keepDiscount = false };\r\n\r\n            //checks if there ar the necesary 6 fields\r\n            if (diamond.lotID && diamond.weight && diamond.shape && diamond.color && diamond.clarity && diamond.pricePerCarat) {\r\n                log1.push(<p key={index} style={{ color: \"green\" }}>{row} is valid for upload...</p>)\r\n                this.saveDiamond(diamond);\r\n            }\r\n            else {\r\n                log1.push(<p key={index} style={{ color: \"red\" }}>{row} is not valid for upload...</p>)\r\n            }\r\n\r\n        })\r\n        //completed the upload\r\n        log1.push(<p key={index + 0.5} style={{ color: \"purple\" }}>upload process completed</p>)\r\n        this.setState({ log1 });\r\n    }\r\n    downloadTemplet=()=>{\r\n        const config = {\r\n            filename: 'diamond import templat',\r\n            sheet: {\r\n              data: [\r\n                [{  \r\n                  value:'certificateNumber',\r\n                  type: 'string'\r\n                }, {\r\n                    value:'clarity',\r\n                  type: 'string'\r\n                }, {\r\n                    value:'color',\r\n                  type: 'string'\r\n                }, {\r\n                    value:'crownAngle',\r\n                  type: 'string'\r\n                }, {\r\n                    value:'crownHeight',\r\n                  type: 'string'\r\n                }, {\r\n                    value:'culet',\r\n                  type: 'string'\r\n                }, {\r\n                    value:'cut',\r\n                  type: 'string'\r\n                }, {\r\n                    value:'depth',\r\n                  type: 'string'\r\n                }, {\r\n                    value:'diamMax',\r\n                  type: 'string'\r\n                }, {\r\n                    value:'diamMin',\r\n                  type: 'string'\r\n                }, {\r\n                    value:'deptAvg',\r\n                  type: 'string'\r\n                }, {\r\n                    value:'discount',\r\n                  type: 'string'\r\n                }, {\r\n                    value:'fluorescence',\r\n                  type: 'string'\r\n                }, {\r\n                    value:'fluorescenceColor',\r\n                  type: 'string'\r\n                }, {\r\n                    value:'girdle',\r\n                  type: 'string'\r\n                }, {\r\n                    value:'lab',\r\n                  type: 'string'\r\n                }, {\r\n                    value:'lotID',\r\n                  type: 'string'\r\n                }, {\r\n                    value:'lowerHalf',\r\n                  type: 'string'\r\n                }, {\r\n                    value:'pavillionAngle',\r\n                  type: 'string'\r\n                }, {\r\n                    value:'pavillionDepth',\r\n                  type: 'string'\r\n                }, {\r\n                    value:'polish',\r\n                  type: 'string'\r\n                }, {\r\n                    value:'pricePerCarat',\r\n                  type: 'string'\r\n                }, {\r\n                    value:'shape',\r\n                  type: 'string'\r\n                }, {\r\n                    value:'starLength',\r\n                  type: 'string'\r\n                }, {\r\n                    value:'symmetry',\r\n                  type: 'string'\r\n                }, {\r\n                    value:'table',\r\n                  type: 'string'\r\n                }, {\r\n                    value:'weight',\r\n                  type: 'string'\r\n                }],[\r\n                {  \r\n                    value:'',\r\n                    type: 'string'\r\n                  }, {\r\n                      value:'Required',\r\n                    type: 'string'\r\n                  }, {\r\n                      value:'Required',\r\n                    type: 'string'\r\n                  }, {\r\n                      value:'',\r\n                    type: 'string'\r\n                  }, {\r\n                      value:'',\r\n                    type: 'string'\r\n                  }, {\r\n                      value:'',\r\n                    type: 'string'\r\n                  }, {\r\n                      value:'',\r\n                    type: 'string'\r\n                  }, {\r\n                      value:'',\r\n                    type: 'string'\r\n                  }, {\r\n                      value:'',\r\n                    type: 'string'\r\n                  }, {\r\n                      value:'',\r\n                    type: 'string'\r\n                  }, {\r\n                      value:'',\r\n                    type: 'string'\r\n                  }, {\r\n                      value:'',\r\n                    type: 'string'\r\n                  }, {\r\n                      value:'',\r\n                    type: 'string'\r\n                  }, {\r\n                      value:'',\r\n                    type: 'string'\r\n                  }, {\r\n                      value:'',\r\n                    type: 'string'\r\n                  }, {\r\n                      value:'',\r\n                    type: 'string'\r\n                  }, {\r\n                      value:'Required',\r\n                    type: 'string'\r\n                  }, {\r\n                      value:'',\r\n                    type: 'string'\r\n                  }, {\r\n                      value:'',\r\n                    type: 'string'\r\n                  }, {\r\n                      value:'',\r\n                    type: 'string'\r\n                  }, {\r\n                      value:'',\r\n                    type: 'string'\r\n                  }, {\r\n                      value:'Required',\r\n                    type: 'string'\r\n                  }, {\r\n                      value:'Required',\r\n                    type: 'string'\r\n                  }, {\r\n                      value:'',\r\n                    type: 'string'\r\n                  }, {\r\n                      value:'',\r\n                    type: 'string'\r\n                  }, {\r\n                      value:'',\r\n                    type: 'string'\r\n                  }, {\r\n                      value:'Required',\r\n                    type: 'string'\r\n                  }\r\n            ]\r\n              ]\r\n            }\r\n          };\r\n          \r\n          zipcelx(config);\r\n    }\r\n    render() {\r\n\r\n        const { activeUser, handleLogout, allMessages } = this.props;\r\n        const { excelRows, headers, log1 } = this.state;\r\n        if (log1.length) return (\r\n            <Container>\r\n                <DiamondNavbar cart={this.props.cart} allMessages={allMessages} activeUser={activeUser} handleLogout={handleLogout} />\r\n                <Jumbotron fluid>\r\n                    <div>\r\n                        {log1}\r\n                    </div>\r\n                </Jumbotron>\r\n            </Container>\r\n        )\r\n        let tableLines = [];\r\n        let index = -1;\r\n        headers.forEach(element => {\r\n            index++;\r\n            tableLines.push(<tr key={index}>\r\n                <td>{index}</td>\r\n                <td>{element}</td>\r\n                <td id={element}>\r\n                    <Form.Group>\r\n                        <Form.Label></Form.Label>\r\n                        <Form.Control id={\"0000\" + index} onChange={this.getValues} defaultValue={element} as=\"select\">\r\n                            <option></option>\r\n                            <option>certificateNumber</option>\r\n                            <option>clarity</option>\r\n                            <option>color</option>\r\n                            <option>crownAngle</option>\r\n                            <option>crownHeight</option>\r\n                            <option>culet</option>\r\n                            <option>cut</option>\r\n                            <option>depth</option>\r\n                            <option>diamMax</option>\r\n                            <option>diamMin</option>\r\n                            <option>deptAvg</option>\r\n                            <option>discount</option>\r\n                            <option>fluorescence</option>\r\n                            <option>fluorescenceColor</option>\r\n                            <option>girdle</option>\r\n                            <option>lab</option>\r\n                            <option>lotID</option>\r\n                            <option>lowerHalf</option>\r\n                            <option>pavillionAngle</option>\r\n                            <option>pavillionDepth</option>\r\n                            <option>polish</option>\r\n                            <option>pricePerCarat</option>\r\n                            <option>shape</option>\r\n                            <option>starLength</option>\r\n                            <option>symmetry</option>\r\n                            <option>table</option>\r\n                            <option>weight</option>\r\n\r\n                        </Form.Control>\r\n                    </Form.Group></td>\r\n            </tr>)\r\n\r\n        });\r\n        return (\r\n            <Container>\r\n                <DiamondNavbar cart={this.props.cart} allMessages={allMessages} activeUser={activeUser} handleLogout={handleLogout} />\r\n                <Jumbotron fluid>\r\n                    <div style={{position:\"relative\",display:\"inline-block\",width:\"100%\"}}>\r\n                        <div  onChange={this.loadExcelFile}>\r\n                    <input className=\"excelImage\"  style={{opacity:\"0\",position:\"absolute\",top:\"-65px\",left:\"0\", width:\"20%\",height:\"50px\"}} type=\"file\" id=\"input\" />\r\n                    <img  style={{pointerEvents:\"none\",position:\"absolute\",top:\"-30px\",left:\"0\", width:\"18%\",height:\"50px\"}} src={excelIcon}></img>\r\n                    </div>\r\n                    <p style={{marginTop:\"20px\"}}>Upload Excel</p>\r\n                    <div  onClick={this.downloadTemplet} className=\"excelImage\"  style={{position:\"absolute\",top:\"-30px\",right:\"0\",height:\"50px\"}}>\r\n                    <img style={{height:\"50px\",marginLeft:\"90px\"}} src={excelTemplet}></img>\r\n                    <p>Download Template</p>\r\n                    </div>\r\n                    </div>\r\n                    <Table  >\r\n                        <thead>\r\n                            <tr>\r\n                                <th>#</th>\r\n                                <th>Excel Header</th>\r\n                                <th>Map to</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {tableLines}\r\n                        </tbody>\r\n                    </Table>\r\n                    <Button onClick={this.upload}>Upload</Button>\r\n                </Jumbotron>\r\n\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\n","import React from 'react';\nimport './App.css';\nimport './multiselect.css'\nimport { Switch, Route } from 'react-router-dom'\nimport { Home } from './pages/home'\nimport { Messages } from './pages/messages'\nimport { Search } from './pages/search.js'\nimport jsonUsers from './data/users'\nimport LoginPage from './pages/LoginPage';\nimport SignupPage from './pages/Signup'\nimport Parse from 'parse';\nimport User from './Classes/User'\nimport { Message, usersMessages } from './Classes/Message'\nimport UserMessages from '../src/components/UserMessages'\nimport ShoppingCart from '../src/pages/ShoppingCart'\nimport About from '../src/pages/About'\nimport $ from \"jquery\";\nimport LoadExcel  from './pages/Load';\n\n// input: 4c's of diamond and a pricelist. output : list price of the diamond\nexport function listPrice(shape, color, clarity, weight, priceList) {\n\n  if (shape !== \"BR\" && shape !== \"round\") { shape = \"pear\" } else { shape = \"round\" };\n  for (var i = 0; i < priceList.length; i++) { //searches the right price on the pricelist\n    if (shape === priceList[i].shape && color === priceList[i].color &&\n      clarity === priceList[i].clarity && weight >= Number(priceList[i].low_size) &&\n      weight <= Number(priceList[i].high_size))\n      return Number(priceList[i].caratprice);\n  }\n  return 0;\n}\n\n//returns the owner of a diamond\nfunction ownerOfDiamond(diamondId) {\n\n  const Diamond = Parse.Object.extend('Diamond');\n  const query = new Parse.Query(Diamond);\n  query.equalTo(\"objectId\", diamondId);\n  query.find().then((results) => {\n    // You can use the \"get\" method to get the value of an attribute\n    // Ex: response.get(\"<ATTRIBUTE_NAME>\")\n    results.forEach(diamond => {\n      if (diamond.id === diamondId) { alert(diamond.get(\"owner\").id); return diamond.get(\"owner\").id }\n    })\n  }, (error) => {\n\n    console.error('Error while fetching Diamond', error);\n    return false;\n  });\n}\n\n\n//main component\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      parseActive: null,\n      activeUser:\n        null,\n      allUsers: [],\n      allMessages: [],\n      isLoading: true,\n      cart: []\n    }\n\n    this.handleLogout = this.handleLogout.bind(this);\n    this.handleLogin = this.handleLogin.bind(this);\n\n\n  }\n//fetch messages related to activeuser from parse\n  getMessages = () => {\n    const { activeUser, parseActive } = this.state;\n    if (activeUser) {\n      let allMessages = [];\n\n      const parseMessages = Parse.Object.extend('Messages');\n\n      //messages from activeuser\n      const query1 = new Parse.Query(parseMessages);\n      query1.equalTo('from', parseActive);\n\n      //messages to activeuser\n      const query2 = new Parse.Query(parseMessages);\n      query2.equalTo('to', parseActive);\n\n      //messages from activeuser or to activeuser\n      const composedQuery = Parse.Query.or(query1, query2);\n\n      composedQuery.count().then((count) => {\n        //only 100 last messages\n        if (count > 100) composedQuery.skip(count - 100);\n        composedQuery.find().then((results) => {\n          // You can use the \"get\" method to get the value of an attribute\n          // Ex: response.get(\"<ATTRIBUTE_NAME>\")\n          console.log('Messages found', results);\n          let message1;\n          results.forEach(message => {\n            message1 = new Message(message);\n            //setting received to all messages to activeuser that are still marked not recieved\n            if (message1.to.id === activeUser.id && !message1.recieved) {\n              message1.recieved = true;\n              const Messages = Parse.Object.extend('Messages');\n              const query = new Parse.Query(Messages);\n              // here you put the objectId that you want to update\n              query.get(message1.id).then((object) => {\n                object.set('recieved', true);\n                object.save().then((response) => {\n                  // You can use the \"get\" method to get the value of an attribute\n                  // Ex: response.get(\"<ATTRIBUTE_NAME>\")\n\n                  console.log('Updated Messages', response);\n                }, (error) => {\n\n                  console.error('Error while updating Messages', error);\n                });\n              });\n            }\n            allMessages.push(message1);\n\n          });\n          this.setState({ allMessages });\n        }, (error) => {\n          console.error('Error while fetching Messages', error);\n        });\n\n      })\n    }\n  }\n\n\n  componentDidMount() {\n\n    //set interval for short time will read messages again and agin and will be more live\n    // setInterval(this.getMessages, 3000000000);\n\n    if (Parse.User.current()) { \n      this.handleLogin(new User(Parse.User.current()));\n      this.setState({ successLogin: true });\n    }\n\n//retrieving all users\n    let allUsers = [];\n    const parseUser = new Parse.User();\n    const query = new Parse.Query(parseUser);\n\n    query.find().then((users) => {\n      console.log('User found', users);\n      users.forEach(user => {\n        allUsers.push(new User(user))\n        this.setState({ allUsers });\n      })\n    }, (error) => {\n      console.error('Error while fetching user', error);\n    });\n\n  }\n\n\n  handleLogout() {\n    const User1 = new Parse.User();\n    const query = new Parse.Query(User1);\n    const { activeUser } = this.state;\n    let { cart } = this.state;\n    // Finds the user by its ID\n    query.get(activeUser.id).then((user) => {\n      // Updates the data we want\n\n      user.set('isLogin', false);\n      user.set('lastLogout', new Date());\n\n      // Saves the user with the updated data\n      user.save().then((response) => {\n        console.log('Updated user logout', response);\n        Parse.User.logOut();\n      }).catch((error) => {\n\n        console.error('Error while updating user', error);\n      });\n    });\n    cart = [];\n    this.setState({ activeUser: null, cart });\n  }\n\n  //at login retrieving the activeuser cart and merging with the current unregisterd user cart\n  //diamonds in the unregistered user cart that are owned by activeuser will be deleted from cart\n  handleLogin(activeUser) {\n\n    let { cart } = this.state;\n\n    //if prelogin cart is empty\n    if (cart === []) {\n      cart = activeUser.cart;\n      this.setState({ activeUser, cart });\n      this.getMessages();\n    }\n\n    //if prelogin cart is not empty and loginuser cart is not empty\n    else if (activeUser.cart) {\n      const Diamond = Parse.Object.extend('Diamond');\n      const query = new Parse.Query(Diamond);\n      // query.equalTo(\"objectId\", cart[i]);\n      query.find().then((results) => {\n        // You can use the \"get\" method to get the value of an attribute\n        // Ex: response.get(\"<ATTRIBUTE_NAME>\")\n\n        for (var i = 0; i < cart.length; i++) {\n          if (!activeUser.cart.includes(cart[i])) {\n            let ownerD;\n            for (var j = 0; j < results.length; j++) {\n              if (cart[i] === results[j].id) { ownerD = results[j].get(\"owner\").id; break }\n            }\n            if (ownerD != activeUser.id) { activeUser.cart.push(cart[i]) };\n          }\n        }\n        cart = activeUser.cart;\n\n        const User = new Parse.User();\n        const query = new Parse.Query(User);\n\n        // Finds the user by its ID\n        query.get(activeUser.id).then((user) => {\n          // Updates the data we want\n          let { parseActive } = this.state;\n          parseActive = user;\n          user.set('cart', cart);\n          // Saves the user with the updated data\n          user.save().then((response) => {\n\n            console.log('Updated user', response);\n          }).catch((error) => {\n\n            console.error('Error while updating user', error);\n          });\n          this.setState({ activeUser, cart, parseActive });\n          this.getMessages();\n        });\n      }, (error) => {\n\n        console.error('Error while fetching Diamond', error);\n\n      });\n\n    }\n     //if prelogin cart is not empty and loginuser cart is empty\n    else {\n      const User = new Parse.User();\n      const query = new Parse.Query(User);\n\n      // Finds the user by its ID\n      query.get(activeUser.id).then((user) => {\n        // Updates the data we want\n        user.set('cart', cart);\n        // Saves the user with the updated data\n        user.save().then((response) => {\n\n          console.log('Updated user', response);\n          this.setState({ activeUser, cart });\n          this.getMessages();\n        }).catch((error) => {\n\n          console.error('Error while updating user', error);\n        });\n      });\n    }\n  }\n\n  //gets owner id and returns owner name\n  ownerName = (userId) => {\n    for (var i = 0; i < this.state.allUsers.length; i++) {\n      if (this.state.allUsers[i].id == userId) return this.state.allUsers[i].fname + \" \" + this.state.allUsers[i].lname\n    }\n\n  }\n  //delete message both sides. happens when the sender is the one that deletes the message\n  deleteMessage = (id) => {\n    let { allMessages } = this.state;\n    const Messages = Parse.Object.extend('Messages');\n    const query = new Parse.Query(Messages);\n    // here you put the objectId that you want to delete\n    query.get(id).then((object) => {\n      object.destroy().then((response) => {\n\n        console.log('Deleted Messages', response);\n        for (var i = 0; i < allMessages.length; i++) {\n          if (id === allMessages[i].id) {\n            allMessages.splice(i, 1);\n            break;\n          }\n        }\n        this.setState({ allMessages });\n      }, (error) => {\n\n        console.error('Error while deleting Messages', error);\n      });\n    });\n  }\n\n  //marks the message deleted. it will not show only in the recieving side at conversation. happens when\n  //the receiving side initiated the delete\n  markDeleted = (id) => {\n    let { allMessages } = this.state;\n    const Messages = Parse.Object.extend('Messages');\n    const query = new Parse.Query(Messages);\n    // here you put the objectId that you want to update\n    query.get(id).then((object) => {\n      object.set('deleted', true);\n      object.save().then((response) => {\n        // You can use the \"get\" method to get the value of an attribute\n        // Ex: response.get(\"<ATTRIBUTE_NAME>\")\n\n        console.log('Updated Messages', response);\n        for (var i = 0; i < allMessages.length; i++) {\n          if (id === allMessages[i].id) {\n            allMessages.splice(i, 1);\n            break;\n          }\n        }\n        this.setState({ allMessages });\n      }, (error) => {\n\n        console.error('Error while updating Messages', error);\n      });\n    });\n  }\n\n  //add message\n  addMessage = (text, fromID, toID) => {\n\n    let { allMessages } = this.state;\n    const User2 = new Parse.User();\n    const User1 = new Parse.User();\n    const query2 = new Parse.Query(User2);\n    const query1 = new Parse.Query(User1);\n    let from, to;\n\n    query1.get(fromID).then((from1) => {\n      from = from1;\n      console.log('User found', from1);\n      query2.get(toID).then((to1) => {\n        to = to1;\n        console.log('User found', to1);\n\n        const Messages = Parse.Object.extend('Messages');\n        const myNewObject = new Messages();\n        myNewObject.set('from', from);\n        myNewObject.set('to', to);\n        myNewObject.set('text', text);\n        myNewObject.set('read', false);\n        myNewObject.set('deleted', false);\n        myNewObject.set('recieved', false);\n        myNewObject.save().then(\n          (result) => {\n            console.log('Messages created', result);\n            allMessages.push(new Message(result));\n            this.setState({ allMessages });\n            // alert(\"The Message: '\"+text+\"' has been sent\");\n\n          },\n          (error) => {\n            console.error('Error while creating Messages: ', error);\n          });\n      }, (error) => {\n\n        console.error('Error while fetching user', error);\n      });\n\n    }, (error) => {\n\n      console.error('Error while fetching user', error);\n    });\n\n  }\n\n  //mark all messages in conversation that are still not read as read\n  messageRead = (message) => {\n    const Messages = Parse.Object.extend('Messages');\n    const query = new Parse.Query(Messages);\n    // here you put the objectId that you want to update\n    let { allMessages } = this.state;\n    for (var i = 0; i < allMessages.length; i++) {\n      if (allMessages[i].id === message.id) {\n        allMessages[i].read = true;\n        break;\n      }\n    }\n    query.get(message.id).then((object) => {\n      object.set('read', true);\n      object.save().then((response) => {\n        // You can use the \"get\" method to get the value of an attribute\n        // Ex: response.get(\"<ATTRIBUTE_NAME>\")\n        console.log('Updated Messages', response);\n      }, (error) => {\n        console.error('Error while updating Messages', error);\n      });\n    });\n    this.setState({ allMessages });\n  }\n\n  //add to cart a diamond\n  addToCart = (diamondId) => {\n    let { activeUser, cart } = this.state;\n    if (!cart) cart = [];\n    if (!cart.includes(diamondId)) {\n      cart.push(diamondId);\n   \n      if (activeUser) {\n        const User = new Parse.User();\n        const query = new Parse.Query(User);\n\n        // Finds the user by its ID\n        query.get(activeUser.id).then((user) => {\n          // Updates the data we want\n          user.set('cart', cart);\n          // Saves the user with the updated data\n          user.save().then((response) => {\n\n            console.log('Updated user', response);\n          }).catch((error) => {\n\n            console.error('Error while updating user', error);\n          });\n        });\n\n      }\n    }\n    this.setState({ cart });\n  }\n\n  //delete from cart\n  deleteFromCart = (item) => {\n    let { cart, activeUser } = this.state;\n    var index = cart.indexOf(item);\n    if (index > -1) {\n      cart.splice(index, 1);\n      if (!activeUser) {\n        this.setState({ cart })\n      }\n      else {\n        const User = new Parse.User();\n        const query = new Parse.Query(User);\n\n        // Finds the user by its ID\n        query.get(activeUser.id).then((user) => {\n          // Updates the data we want\n          user.set('cart', cart);\n          // Saves the user with the updated data\n          user.save().then((response) => {\n            console.log('Updated user', response);\n            this.setState({ cart })\n          }).catch((error) => {\n            console.error('Error while updating user', error);\n          });\n        });\n      }\n    }\n  }\n  render() {\n\n    const { activeUser, allUsers, isLoading, allMessages, cart } = this.state;\n\n    return (\n\n\n      <Switch>\n        <Route exact path=\"/\" ><Home cart={cart} allMessages={allMessages} activeUser={activeUser} handleLogout={this.handleLogout}></Home></Route>\n        <Route exact path=\"/home\" ><Home cart={cart} allMessages={allMessages} activeUser={activeUser} handleLogout={this.handleLogout}></Home></Route>\n        <Route exact path=\"/messages\" ><Messages cart={cart} allMessages={allMessages} allUsers={allUsers} activeUser={activeUser} handleLogout={this.handleLogout}></Messages></Route>\n        <Route exact path=\"/messages/:id\" ><UserMessages cart={cart} markDeleted={this.markDeleted} deleteMessage={this.deleteMessage} messageRead={this.messageRead} addMessage={this.addMessage} allMessages={allMessages} allUsers={allUsers} activeUser={activeUser} handleLogout={this.handleLogout}></UserMessages></Route>\n        <Route exact path=\"/search\"><Search cart={cart} addToCart={this.addToCart} addMessage={this.addMessage} allMessages={allMessages} ownerName={this.ownerName} activeUser={activeUser} handleLogout={this.handleLogout}></Search></Route>\n        <Route exact path=\"/login\"> <LoginPage cart={cart} allMessages={allMessages} handleLogout={this.handleLogout} activeUser={activeUser} users={allUsers} handleLogin={this.handleLogin}></LoginPage></Route>\n        <Route exact path=\"/signup\"> <SignupPage cart={cart} allMessages={allMessages} handleLogout={this.handleLogout} activeUser={activeUser} users={allUsers} handleLogin={this.handleLogin}></SignupPage></Route>\n        <Route exact path=\"/cart\"><ShoppingCart deleteFromCart={this.deleteFromCart} cart={cart} allMessages={allMessages} ownerName={this.ownerName} activeUser={activeUser} handleLogout={this.handleLogout}></ShoppingCart></Route>\n        <Route exact path=\"/home\" ><Home cart={cart} allMessages={allMessages} activeUser={activeUser} handleLogout={this.handleLogout}></Home></Route>\n        <Route exact path=\"/about\" ><About cart={cart} allMessages={allMessages} allUsers={allUsers} activeUser={activeUser} handleLogout={this.handleLogout}></About></Route>\n        <Route exact path=\"/load\" ><LoadExcel cart={cart} allMessages={allMessages} allUsers={allUsers} activeUser={activeUser} handleLogout={this.handleLogout}></LoadExcel></Route>\n      </Switch>\n\n      // </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport Parse from 'parse';\nimport 'react-credit-cards/es/styles-compiled.css';\n\n\nParse.serverURL = 'https://parseapi.back4app.com'; // This is your Server URL\nParse.initialize(\n  'qQ2AMgDUa2kxuxt0HEsorOw7uB5vXOhipV8Zm6CF', // This is your Application ID\n  'LUBw95iUPTq6eBVPdBhmC4WKPKJgIRPniD2ditwl' // This is your Javascript key\n);\n\n\nReactDOM.render(<HashRouter><App /></HashRouter>, document.getElementById('root'));\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}