{"version":3,"sources":["data/flat_seo3-24-512.png","data/seen-300x225.webp","data/V-512.png","data/38-383271_excel-logo-png-microsoft-excel-logo-transparent-png.png","data/icons8-delete-message-26.png","data/1c7be669e68d05366ad16b7d2b40333b-diamond-gemstone-black-icon-by-vexels.png","data/Shapes.png","data/delete-1507091-1279000.png","data/l8cb11pkn10.jpg","components/HomePageBody.js","Classes/Message.js","components/DiamondNavbar.js","pages/home.js","Classes/User.js","components/UserMessages.js","pages/messages.js","Classes/Diamond.js","components/ListOfLinks.js","components/AddNewDiamond.js","components/ShowDiamond.js","components/Slider.js","components/SearchDiamondForm.js","components/SendMessageModal.js","components/SendOfferModal.js","components/DiamondsList.js","pages/search.js","pages/LoginPage.js","pages/Signup.js","components/PaymentForm.js","pages/ShoppingCart.js","pages/About.js","pages/Load.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","HomePageBody","Carousel","Item","className","src","alt","Caption","React","Component","Message","parseMessage","this","id","from","get","to","text","createdAt","read","deleted","recieved","usersMessages","user","allMessages","fromUser","result","new","last","messages","console","log","forEach","message","push","DiamondNavbar","props","state","redirectToHome","logout","bind","handleLogout","window","location","hash","setState","itemsInCart","pic","activeUser","cart","signupLink","Nav","Link","href","loginLink","logoutLink","onClick","Image","style","width","roundedCircle","fname","newMessages","myBadge","Badge","pill","variant","length","Navbar","bg","expand","Brand","diamondLogo","Toggle","aria-controls","Collapse","basket","Home","Container","User","parseUser","lname","email","username","isLogin","lastLogout","userDetails","allUsers","i","parseDateTime","dateTime","min","answer","today","Date","getFullYear","getMonth","getDate","getHours","getMinutes","UserMessages","filter","substring","conv","scrollTop","scrollHeight","messageRead","theSender","messageDate","addMessage","deleteMessage","markDeleted","showConversation","index","Row","Col","xl","lg","md","sm","xs","display","color","e","target","height","marginLeft","marginRight","deleteImg","recievedMessage","hidden","readMessage","fontSize","ref","element","InputGroup","FormControl","value","onChange","event","placeholder","aria-label","aria-describedby","Append","Button","Messages","filterUsers","compareFunction","a","b","lastMessageRecieved","redirectTo","listUsers","allUsersSorted","userMessages","sort","toLowerCase","includes","ListGroup","border","redirectToUserMessage","Diamond1","diamond","lotID","shape","weight","clarity","cut","polish","symmetry","fluorescence","fluorescenceColor","lab","certificateNumber","depth","table","crownAngle","crownHeight","pocrownHeightlish","pavillionAngle","pavillionAnglecut","pavillionDepth","starLength","lowerHalf","girdle","culet","list","listPrice","priceList","response","body","price","discount","pricePerCarat","links","inclusions","owner","keepDiscount","diamMin","diamMax","deptAvg","pic1","file","name","url","pic2","colorMin","colorMax","clarityValue","clarityMin","clarityMax","weightMin","weightMax","ListOfLinks","parse","margin","alignItems","justifyContent","deleteLink","AddDiamond","toggle","modal","handleClose","detectMouse","cx","clientX","document","clientWidth","modalWidth","getElementById","offsetWidth","ratio","disableSave","getCertNum","certNumInput","getLotId","textInput","getLab","getWCC","Number","weightInput","colorInput","clarityInput","prices","getOther","cutInput","polishInput","symmetryInput","fluorescenceInput","fluorescenceColorInput","depthInput","tableInput","girdleInput","culetInput","crownAngleInput","crownHeightInput","pavillionAngleInput","pavillionDepthInput","lowerHalfInput","getPrices","checkInput","Math","round","discountInput","priceInput","prepareLink","linktoAdd","linkToAddInput","addLink","newState","newArr","splice","imgChange","ev","diamondImg","files","URL","createObjectURL","nextPage","page","previousPage","saveDiamond","edit","myListings","setFilter","diamonds","nextProps","cancelEdit","Modal","Body","key","Prepend","Text","defaultValue","diamondsShape","rounded","Form","Group","controlId","Label","Control","as","column","Check","type","label","checked","data-id","accept","fluid","position","left","top","excel","size","show","onHide","animation","Header","closeButton","Title","Footer","disabled","ShowDiamond","bgColorClass","pics","description","Accordion","defaultActiveKey","backgroundColor","Card","eventKey","floor","toFixed","ownerName","measurements","children","HorizontalColorSlider","marks","max","classes","makeStyles","root","useStyles","clearColorFilter","clearClarityFilter","Fragment","Typography","gutterBottom","Slider","onChangeCommitted","val","change","orientation","aria-labelledby","getAriaValueText","num2color","num2clarity","SearchDiamondForm","toggleChoice","innerHTML","toggleAll","tglAll","setMinWeight","filter1","setMaxWeight","setColorFilter","setClarityFilter","clearTheFilter","clearFilter","br","ov","ps","mq","hs","pri","rad","em","cu","tri","asher","borderRadius","marginTop","marginBottom","Feedback","SendMessageModal","close","contactSeller","showLotId","showOwnerId","centered","rows","Alert","SendOfferModal","showPrice","DiamondList","toggleOffer","modalOffer","deleteDiamond","editDiamond","showAlert","hideAlert","setInterval","inFilter","ButtonToolbar","addToCart","Search","require","default","atEdit","diamondArr","myNewObject","Parse","Object","extend","set","current","File","save","then","concat","error","Diamond","Query","object","destroy","isLoading","newDiamond","find","diamondsParse","addEdit","LoginPage","invalidLogin","successLogin","emailInput","createRef","pwdInput","login","logIn","User1","handleLogin","catch","block","SignupPage","signup","image","userInput","lnameInput","fnameInput","signUp","PaymentForm","cvc","expiry","focus","number","handleInputFocus","handleInputChange","Jumbotron","onFocus","ShoppingCart","diamondsInCart","results","lineTotal","total","deleteFromCart","tableLines","caratTotal","priceAVG","deleteFromCartIcon","fontWeight","Table","striped","bordered","hover","About","messagearrived","messageread","cartIcon","LoadExcel","loadExcelFile","excelRows","headers","header","log1","input","readXlsxFile","getValues","parseInt","upload","headerKeys","keys","row","toUpperCase","opacity","pointerEvents","excelIcon","low_size","high_size","caratprice","App","getMessages","parseActive","parseMessages","query1","equalTo","query2","composedQuery","or","count","skip","message1","userId","fromID","toID","User2","from1","to1","query","diamondId","item","indexOf","users","logOut","ownerD","j","exact","path","Signup","Boolean","hostname","match","serverURL","initialize","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"yFAAAA,EAAOC,QAAU,IAA0B,8C,oBCA3CD,EAAOC,QAAU,IAA0B,2C,oBCA3CD,EAAOC,QAAU,IAA0B,mC,0sjbCA3CD,EAAOC,QAAU,IAA0B,2F,oBCA3CD,EAAOC,QAAU,IAA0B,sD,oBCA3CD,EAAOC,QAAU,IAA0B,oG,oBCA3CD,EAAOC,QAAU,IAA0B,oC,oBCA3CD,EAAOC,QAAU,IAA0B,oD,4HCA3CD,EAAOC,QAAU,IAA0B,yC,iRCKtBC,E,iLAGjB,OACE,kBAACC,EAAA,EAAD,KACS,kBAACA,EAAA,EAASC,KAAV,KACL,yBACEC,UAAU,gBACVC,IAAI,8EACJC,IAAI,gBAEN,kBAACJ,EAAA,EAASK,QAAV,KACE,wCACA,0DAGG,kBAACL,EAAA,EAASC,KAAV,KACL,yBACEC,UAAU,gBACVC,IAAI,yFACJC,IAAI,iBAEN,kBAACJ,EAAA,EAASK,QAAV,KACE,sCACA,mEAGJ,kBAACL,EAAA,EAASC,KAAV,KACE,yBACEC,UAAU,gBACVC,IAAI,qFACJC,IAAI,gBAEN,kBAACJ,EAAA,EAASK,QAAV,KACE,qCACA,4DAGJ,kBAACL,EAAA,EAASC,KAAV,KACE,yBACEC,UAAU,gBACVC,IAAI,kGACJC,IAAI,iBAEN,kBAACJ,EAAA,EAASK,QAAV,KACE,yCACA,kDAGJ,kBAACL,EAAA,EAASC,KAAV,KACE,yBACEC,UAAU,gBACVC,IAAI,6DACJC,IAAI,gBAEN,kBAACJ,EAAA,EAASK,QAAV,KACE,kDACA,0EAGJ,kBAACL,EAAA,EAASC,KAAV,KACE,yBACEC,UAAU,gBACVC,IAAI,gGACJC,IAAI,gBAGN,kBAACJ,EAAA,EAASK,QAAV,KACE,+DACA,mDAGJ,kBAACL,EAAA,EAASC,KAAV,KACE,yBACEC,UAAU,gBACVC,IAAI,+JACJC,IAAI,gBAGN,kBAACJ,EAAA,EAASK,QAAV,KACE,mEACA,2F,GAjF8BC,IAAMC,W,sDCJnCC,EACT,WAAYC,GAAe,oBACvBC,KAAKC,GAAKF,EAAaE,GACvBD,KAAKE,KAAOH,EAAaI,IAAI,QAC7BH,KAAKI,GAAKL,EAAaI,IAAI,MAC3BH,KAAKK,KAAON,EAAaI,IAAI,QAC7BH,KAAKM,UAAYP,EAAaI,IAAI,aAClCH,KAAKO,KAAOR,EAAaI,IAAI,QAC7BH,KAAKQ,QAAUT,EAAaI,IAAI,WAChCH,KAAKS,SAASV,EAAaI,IAAI,aAGhC,SAASO,EAAcC,EAAMC,EAAaC,GAC7C,IAAIC,EAAS,CACTC,IAAK,EACLC,KAAK,GACLC,SAAU,IAgBd,OAdAC,QAAQC,IAAI,YACZD,QAAQC,IAAIP,GACZM,QAAQC,IAAIR,GACRA,GAAQC,GACRA,EAAYQ,SAAQ,SAAAC,GACZA,EAAQnB,KAAKD,KAAOU,EAAKV,IAAMoB,EAAQjB,GAAGH,KAAOU,EAAKV,MAClDY,GAAWQ,EAAQnB,KAAKD,KAAOY,EAASZ,IAAMoB,EAAQjB,GAAGH,KAAOY,EAASZ,IAAKa,EAAOG,SAASK,KAAKD,GAClGA,EAAQd,MAAQc,EAAQjB,GAAGH,KAAOU,EAAKV,IAAQY,GAAWQ,EAAQnB,KAAKD,KAAOY,EAASZ,IAAMa,EAAOC,MACrGM,EAAQf,UAAUQ,EAAOE,MAAQK,EAAQjB,GAAGH,KAAOU,EAAKV,IAAMY,GAAYQ,EAAQnB,KAAKD,KAAOY,EAASZ,KAAKa,EAAOE,KAAKK,EAAQf,eAMzIQ,E,sBC0CIS,E,YAnEX,WAAYC,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,CACTC,gBAAgB,GAGpB,EAAKC,OAAS,EAAKA,OAAOC,KAAZ,gBANC,E,sEAUf5B,KAAKwB,MAAMK,eAEiB,MAAxBC,OAAOC,SAASC,MAChBhC,KAAKiC,SAAS,CAACP,gBAAgB,M,+BAcnC,IAAIQ,EAKAC,EANC,EAEmCnC,KAAKwB,MAArCY,EAFH,EAEGA,WAAWxB,EAFd,EAEcA,YAAYyB,EAF1B,EAE0BA,KACJrC,KAAKyB,MAAxBC,eAK0BS,EAA9BC,GAAYA,EAAWD,IAAaC,EAAWD,IAAX,KAAsC,oGAE9E,IAAMG,EAAcF,EAA2D,KAA9C,kBAACG,EAAA,EAAIC,KAAL,CAAUC,KAAK,YAAf,UAC3BC,EAAaN,EAAyD,KAA5C,kBAACG,EAAA,EAAIC,KAAL,CAAUC,KAAK,WAAf,SAC1BE,EAAaP,EAAa,kBAACG,EAAA,EAAIC,KAAL,CAAUI,QAAS5C,KAAK2B,QAAQ,kBAACkB,EAAA,EAAD,CAAOC,MAAO,CAACC,MAAM,QAAStD,IAAK0C,EAAKa,eAAa,IAAI,IAAIhD,KAAKwB,MAAMY,WAAWa,MAAM,WAAwB,KAC3KC,EAAYxC,EAAe0B,EAAWxB,GAAaG,IACrDoC,EAAQ,GAGZ,OAFID,IAAaC,EAAS,kBAACC,EAAA,EAAD,CAAOC,MAAI,EAACC,QAAQ,WAAWJ,IACvChB,EAAdG,EAAKkB,OAAqBlB,EAAKkB,OAA0B,GAGzD,kBAACC,EAAA,EAAD,CAAQC,GAAG,QAAQC,OAAO,MACtB,kBAACF,EAAA,EAAOG,MAAR,CAAclB,KAAK,MAAK,yBAAKjD,UAAU,OAAOC,IAAKmE,MAAnD,YACA,kBAACJ,EAAA,EAAOK,OAAR,CAAeC,gBAAc,qBAC7B,kBAACN,EAAA,EAAOO,SAAR,CAAiB9D,GAAG,oBAChB,kBAACsC,EAAA,EAAD,CAAK/C,UAAU,WACX,kBAAC+C,EAAA,EAAIC,KAAL,CAAUC,KAAK,YAAf,UACA,kBAACF,EAAA,EAAIC,KAAL,CAAUC,KAAK,cAAf,WAAqCU,GACrC,kBAACZ,EAAA,EAAIC,KAAL,CAAUC,KAAK,WAAf,UAGJ,kBAACF,EAAA,EAAD,CAAK/C,UAAU,WACf,kBAACgE,EAAA,EAAOG,MAAR,CAAclB,KAAK,UAAS,yBAAKjD,UAAU,SAASsD,MAAO,CAACC,MAAM,QAAStD,IAAKuE,MAAe9B,GAC1FI,EACAI,EACAC,S,GA5DG/C,IAAMC,WCFrBoE,EAAb,YACE,WAAYzC,GAAQ,qEACZA,IAFV,sEAKc,IAAD,EAC0CxB,KAAKwB,MAA9CY,EADD,EACCA,WAAYP,EADb,EACaA,aAAajB,EAD1B,EAC0BA,YAGjC,OAFAM,QAAQC,IAAI,QACZD,QAAQC,IAAIP,GAEV,kBAACsD,EAAA,EAAD,KACE,kBAAC,EAAD,CAAe7B,KAAMrC,KAAKwB,MAAMa,KAAMzB,YAAaA,EAAawB,WAAYA,EAAYP,aAAcA,IACtG,kBAAC,EAAD,WAZV,GAA0BjC,IAAMC,W,sDCJXsE,EACjB,WAAYC,GAAY,oBACpBpE,KAAKC,GAAKmE,EAAUnE,GACpBD,KAAKiD,MAAQmB,EAAUjE,IAAI,SAC3BH,KAAKqE,MAAQD,EAAUjE,IAAI,SAC3BH,KAAKsE,MAAQF,EAAUjE,IAAI,SAC3BH,KAAKuE,SAAWH,EAAUjE,IAAI,YAC9BH,KAAKwE,QAAUJ,EAAUjE,IAAI,WAC7BH,KAAKyE,WAAWL,EAAUjE,IAAI,cAC9BH,KAAKmC,IAAIiC,EAAUjE,IAAI,OACvBH,KAAKqC,KAAK+B,EAAUjE,IAAI,SAKzB,SAASuE,EAAYzE,EAAG0E,GAC3B,IAAK,IAAIC,EAAE,EAAEA,EAAED,EAASpB,OAAOqB,IAC3B,GAAI3E,IAAK0E,EAASC,GAAG3E,GAAI,OAAO0E,EAASC,GAE7C,OAAO,K,0DCNJ,SAASC,EAAcC,GAC1B,IALwBC,EAKpBC,EAAO,GACRC,EAAM,IAAIC,KAIjB,OAHKJ,EAASK,eAAeF,EAAME,eAAeL,EAASM,YAAYH,EAAMG,YAAYN,EAASO,WAAWJ,EAAMI,YAC/FL,EAAOA,EAAOF,EAASO,UAAU,IAAIP,EAASM,WAAW,IAAIN,EAASK,cAAc,KACxGH,EAAOA,EAAOF,EAASQ,WAAW,MATNP,EASsBD,EAASS,cAR/C,EAAUR,EACX,IAAIA,G,IAaMS,E,YACjB,WAAYhE,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,CACTJ,QAAQ,GACRoE,OAAQ,GACPxF,GAAG6B,OAAOC,SAASC,KAAK0D,UAAU,KALxB,E,iFAaf1F,KAAK2F,KAAKC,UAAY5F,KAAK2F,KAAKE,aADjB,MAE0C7F,KAAKwB,MAAtDY,EAFO,EAEPA,WAAYxB,EAFL,EAEKA,YAAYkF,EAFjB,EAEiBA,YAAYnB,EAF7B,EAE6BA,SACxCoB,EAAYrB,EAAY1E,KAAKyB,MAAMxB,GAAI0E,GACxBjE,EAAc0B,EAAYxB,EAAamF,GAC7C9E,SAASG,SAAQ,SAAAC,GAC1BH,QAAQC,IAAI,QAAQE,EAAQnB,KAAKD,GAAG8F,EAAU9F,GAAG,aAAaoB,EAAQd,MAClEc,EAAQnB,KAAKD,KAAK8F,EAAU9F,IAAOoB,EAAQd,OAC3CW,QAAQC,IAAI,8BAA8BE,EAAQpB,IAClD6F,EAAYzE,S,+BAKd,IACF2E,EACA7D,EAFC,SAI6FnC,KAAKwB,MAA/FY,EAJH,EAIGA,WAAYP,EAJf,EAIeA,aAAc8C,EAJ7B,EAI6BA,SAAU/D,EAJvC,EAIuCA,YAAaqF,EAJpD,EAIoDA,WAAWC,EAJ/D,EAI+DA,cAAcC,EAJ7E,EAI6EA,YAC9EJ,EAAYrB,EAAY1E,KAAKyB,MAAMxB,GAAI0E,GAC3CzD,QAAQC,IAAInB,KAAKyB,MAAMxB,IACvBiB,QAAQC,IAAI,cACZD,QAAQC,IAAI4E,GAES5D,EAAjB4D,EAAU5D,IAAa4D,EAAU5D,IAAV,KAAqC,oGAChE,IAAIiE,EAAmB,GA6CvB,OA5CmB1F,EAAc0B,EAAYxB,EAAamF,GAC7C9E,SAASG,SAAQ,SAAAC,GAC1BgF,EACAL,EAAYnB,EAAcxD,EAAQf,WAClCY,QAAQC,IAAIE,EAAQnB,MACpBgB,QAAQC,IAAIiB,EAAWnC,IACnBoB,EAAQnB,KAAKD,KAAOmC,EAAWnC,GAC/BmG,EAAiB9E,KAAK,kBAACgF,EAAA,EAAD,KAClB,kBAACC,EAAA,EAAD,CAAKC,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIC,GAAG,MACpC,kBAACL,EAAA,EAAD,CAAKzD,MAAO,CAAC+D,QAAQ,QAASL,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIC,GAAG,KACzD,0BAAMpH,UAAU,QACZ,yBAAKsD,MAAO,CAAC+D,QAAQ,SACrB,uBAAI/D,MAAO,CAACgE,MAAM,QAAlB,QACA,yBAAKlE,QAAS,SAACmE,GAAKb,EAAca,EAAEC,OAAO/G,KAAMT,UAAU,gBAAgBS,GAAIoB,EAAQpB,GAAI6C,MAAO,CAACC,MAAM,OAAOkE,OAAO,OAAOC,WAAW,OAAOC,YAAY,OAAQ1H,IAAK2H,OAEzK,2BAAI/F,EAAQhB,MACZ,yBAAKyC,MAAO,CAAC+D,QAAQ,SACrB,yBAAK/D,MAAO,CAACC,MAAM,OAAOkE,OAAO,OAAOE,YAAY,OAAOD,WAAW,OAAQzH,IAAK4H,IAAiBC,OAClGjG,EAAQd,OAAOc,EAAQZ,WAEzB,yBAAKqC,MAAO,CAACC,MAAM,OAAOkE,OAAO,OAAOE,YAAY,OAAOD,WAAW,OAAQzH,IAAK8H,IAAaD,QAASjG,EAAQd,OACjH,uBAAGuC,MAAO,CAAC0E,SAAS,OAAOV,MAAM,QAAQI,WAAW,SAAUlB,QAMrE3E,EAAQb,SACb4F,EAAiB9E,KAAK,kBAACgF,EAAA,EAAD,KAElB,kBAACC,EAAA,EAAD,CAAKC,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIC,GAAG,KAChC,0BAAMpH,UAAU,MAChB,yBAAKsD,MAAO,CAAC+D,QAAQ,SACjB,2BAAId,EAAU9C,MAAd,KACA,yBAAKL,QAAS,SAACmE,GAAKZ,EAAYY,EAAEC,OAAO/G,KAAOT,UAAU,gBAAiBS,GAAIoB,EAAQpB,GAAI6C,MAAO,CAACC,MAAM,OAAOkE,OAAO,OAAOC,WAAW,OAAOC,YAAY,OAAQ1H,IAAK2H,OAEzK,2BAAI/F,EAAQhB,MACZ,uBAAGyC,MAAO,CAAC0E,SAAS,OAAOV,MAAM,QAAQI,WAAW,SAAUlB,KAGtE,kBAACO,EAAA,EAAD,CAAKC,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIC,GAAG,WAK5C,kBAAC1C,EAAA,EAAD,CAAWjE,GAAG,kBACV,kBAAC,EAAD,CAAeoC,KAAMrC,KAAKwB,MAAMa,KAAMzB,YAAaA,EAAawB,WAAYA,EAAYP,aAAcA,IAEtG,yBAAKrC,UAAU,cAAa,kBAACqD,EAAA,EAAD,CAAOC,MAAO,CAAEC,MAAO,QAAUtD,IAAK0C,IAAlE,YAAqF4D,EAAU9C,MAA/F,YAAwG8C,EAAU1B,QAElH,kBAACH,EAAA,EAAD,CAAWuD,IAAK,SAACC,GAAW,EAAK/B,KAAK+B,GAAUlI,UAAU,QACrD4G,GAEL,yBAAKnG,GAAG,UACJ,kBAAC0H,EAAA,EAAD,CAAYnI,UAAU,QAClB,kBAACoI,EAAA,EAAD,CACIC,MAAO7H,KAAKyB,MAAMJ,QAClByG,SAAU,SAACC,GAAS,IACX1G,EAAS,EAAKI,MAAdJ,QACLA,EAAQ0G,EAAMf,OAAOa,MACrB,EAAK5F,SAAS,CAACZ,aAEnB2G,YAAY,kBACZC,aAAW,OACXC,mBAAiB,iBAEpB,kBAACP,EAAA,EAAWQ,OAAZ,KACI,kBAACC,EAAA,EAAD,CAAQxF,QAAS,WAAK,IACTvB,EAAS,EAAKI,MAAdJ,QACN4E,EAAW5E,EAAQe,EAAWnC,GAAG8F,EAAU9F,IAC3CoB,EAAQ,GACR,EAAKY,SAAS,CAACZ,aAEtBiC,QAAQ,WANR,gB,GA1Ga1D,IAAMC,WCjBnCwI,EAAb,YACI,WAAY7G,GAAQ,IAAD,8BACf,4CAAMA,KAMV8G,YAAY,SAACvB,GAAK,IACTtB,EAAQ,EAAKhE,MAAbgE,OACLA,EAAOsB,EAAEC,OAAOa,MAChB,EAAK5F,SAAS,CAACwD,YAVA,EAYnB8C,gBAAgB,SAACC,EAAEC,GACf,OAAID,EAAEzH,MAAM0H,EAAE1H,KAAc,GAClByH,EAAEzH,KAAK0H,EAAE1H,IAAc,EACxByH,EAAEE,oBAAoBD,EAAEC,qBAA8B,EACnD,GAdZ,EAAKjH,MAAQ,CACTgE,OAAO,GACPkD,WAAW,IAJA,EADvB,mFAmBwB1I,GAClB,IAAI0I,EAAW1I,EACfD,KAAKiC,SAAS,CAAC0G,iBArBrB,+BAuBc,IAAD,OACL,GAAI3I,KAAKyB,MAAMkH,WAAa,OAAO,kBAAC,IAAD,CAAUvI,GAAI,aAAaJ,KAAKyB,MAAMkH,aADpE,IAKDxG,EALC,EAEsDnC,KAAKwB,MAAxDY,EAFH,EAEGA,WAAYP,EAFf,EAEeA,aAAc8C,EAF7B,EAE6BA,SAAS/D,EAFtC,EAEsCA,YACpC6E,EAAQzF,KAAKyB,MAAbgE,OACHmD,EAAY,GAEZ1F,EAAY,GACZ2F,EAAe,GAEnB,OAAKzG,GAILuC,EAASvD,SAAQ,SAAAT,GACb,IAAImI,EAAapI,EAAc0B,EAAWxB,EAAYD,GACtDkI,EAAevH,KAAK,CAACX,KAAKA,EAAKI,IAAI+H,EAAa/H,IAAI2H,oBAAoBI,EAAa9H,UAEzF6H,EAAeE,KAAK/I,KAAKuI,iBACzBM,EAAezH,SAAQ,SAAAT,GACnB,IAAI+H,EAAoB,GACpBtG,GAAcA,EAAWnC,KAAKU,EAAKA,KAAKV,KAAQU,EAAKA,KAAK4D,SAASyE,cAAcC,SAASxD,EAAOuD,gBAAgBrI,EAAKA,KAAK0D,MAAM2E,cAAcC,SAASxD,EAAOuD,gBAAgBrI,EAAKA,KAAKsC,MAAM+F,cAAcC,SAASxD,EAAOuD,kBACxM7G,EAAjBxB,EAAKA,KAAKwB,IAAWxB,EAAKA,KAAKwB,IAAV,KAAiC,oGAC3Ce,EAAXvC,EAAKI,IAAoB,kBAACqC,EAAA,EAAD,CAAOC,MAAI,EAACC,QAAQ,WAAW3C,EAAKI,IAApC,KAAqE,GAC9FJ,EAAK+H,sBAAqBA,EAAoB,GAAD,OAAK7D,EAAclE,EAAK+H,uBACzEE,EAAUtH,KAAK,kBAAC4H,EAAA,EAAU3J,KAAX,CAAgBuD,MAAO,CAACC,MAAM,UAC7B,yBAAKvD,UAAU,UAAUsD,MAAO,CAACqG,OAAO,aAAcvG,QAAS,WAAM,EAAKwG,sBAAsBzI,EAAKA,KAAKV,MACtG,kBAAC4C,EAAA,EAAD,CAAOC,MAAO,CAACmE,OAAO,QAASxH,IAAK0C,IADxC,YAGUxB,EAAKA,KAAK4D,SAHpB,aAGiC5D,EAAKA,KAAKsC,MAH3C,YAGoDtC,EAAKA,KAAK0D,MAH9D,KAGwEnB,EAAa,IAAIwF,SAM7G,kBAACxE,EAAA,EAAD,KACI,kBAAC,EAAD,CAAe7B,KAAMrC,KAAKwB,MAAMa,KAAOzB,YAAaA,EAAcwB,WAAYA,EAAYP,aAAcA,IACxG,yCACA,kBAAC8F,EAAA,EAAD,CAAa7E,MAAO,CAACC,MAAM,SAAU+E,SAAU9H,KAAKsI,YAAa9I,UAAU,QACvE,kBAACoI,EAAA,EAAD,CAEII,YAAY,cACZC,aAAW,OACXC,mBAAiB,kBAGzB,kBAACgB,EAAA,EAAD,KACKN,KApCF,kBAAC,IAAD,CAAUxI,GAAG,UAjChC,GAA8BR,IAAMC,W,2BCJvBwJ,EAAb,WACE,WAAYC,GAAU,oBACpBtJ,KAAKC,GAAKqJ,EAAQrJ,GAClBD,KAAKuJ,MAAQD,EAAQnJ,IAAI,SACzBH,KAAKwJ,MAAQF,EAAQnJ,IAAI,SACzBH,KAAKyJ,OAASH,EAAQnJ,IAAI,UAC1BH,KAAK8G,MAAQwC,EAAQnJ,IAAI,SACzBH,KAAK0J,QAAUJ,EAAQnJ,IAAI,WAC3BH,KAAK2J,IAAML,EAAQnJ,IAAI,OAClBH,KAAK2J,MAAK3J,KAAK2J,IAAI,IACxB3J,KAAK4J,OAASN,EAAQnJ,IAAI,UACrBH,KAAK4J,SAAQ5J,KAAK4J,OAAO,IAC9B5J,KAAK6J,SAAWP,EAAQnJ,IAAI,YACvBH,KAAK6J,WAAU7J,KAAK6J,SAAS,IAClC7J,KAAK8J,aAAeR,EAAQnJ,IAAI,gBAC3BH,KAAK8J,eAAc9J,KAAK8J,aAAa,IAC1C9J,KAAK+J,kBAAoBT,EAAQnJ,IAAI,qBAChCH,KAAK+J,oBAAmB/J,KAAK+J,kBAAkB,IACpD/J,KAAKgK,IAAMV,EAAQnJ,IAAI,OAClBH,KAAKgK,MAAKhK,KAAKgK,IAAI,IACxBhK,KAAKiK,kBAAoBX,EAAQnJ,IAAI,qBAChCH,KAAKiK,oBAAmBjK,KAAKiK,kBAAkB,IACpDjK,KAAKkK,MAAQZ,EAAQnJ,IAAI,SACpBH,KAAKkK,QAAOlK,KAAKkK,MAAM,IAC5BlK,KAAKmK,MAAQb,EAAQnJ,IAAI,SACpBH,KAAKmK,QAAOnK,KAAKmK,MAAM,IAC5BnK,KAAKoK,WAAad,EAAQnJ,IAAI,cACzBH,KAAKoK,aAAYpK,KAAKoK,WAAW,IACtCpK,KAAKqK,YAAcf,EAAQnJ,IAAI,eAC1BH,KAAKqK,cAAarK,KAAKsK,kBAAkB,IAC9CtK,KAAKuK,eAAiBjB,EAAQnJ,IAAI,qBAC7BH,KAAKwK,oBAAmBxK,KAAKwK,kBAAkB,IACpDxK,KAAKyK,eAAiBnB,EAAQnJ,IAAI,kBAC7BH,KAAKyK,iBAAgBzK,KAAKyK,eAAe,IAC9CzK,KAAK0K,WAAapB,EAAQnJ,IAAI,cACzBH,KAAK0K,aAAY1K,KAAK0K,WAAW,IACtC1K,KAAK2K,UAAYrB,EAAQnJ,IAAI,aACxBH,KAAK2K,YAAW3K,KAAK2K,UAAU,IACpC3K,KAAK4K,OAAStB,EAAQnJ,IAAI,UACrBH,KAAK4K,SAAQ5K,KAAK4K,OAAO,IAC9B5K,KAAK6K,MAAQvB,EAAQnJ,IAAI,SACpBH,KAAK6K,QAAO7K,KAAK6K,MAAM,IAC5B7K,KAAK8K,KAAOC,GAAU/K,KAAKwJ,MAAOxJ,KAAK8G,MAAO9G,KAAK0J,QAAS1J,KAAKyJ,OAAQuB,EAAUC,SAASC,KAAKC,OACjGnL,KAAKoL,SAAW9B,EAAQnJ,IAAI,YACvBH,KAAKoL,WAAUpL,KAAKoL,SAAS,IAClCpL,KAAKqL,cAAgB/B,EAAQnJ,IAAI,iBAC5BH,KAAKqL,gBAAerL,KAAKqL,cAAc,IAC5CrL,KAAKsL,MAAQhC,EAAQnJ,IAAI,SACpBH,KAAKsL,QAAOtL,KAAKsL,MAAM,IAC5BtL,KAAKuL,WAAajC,EAAQnJ,IAAI,cACzBH,KAAKuL,aAAYvL,KAAKuL,WAAW,IACtCvL,KAAKwL,MAAQlC,EAAQnJ,IAAI,SACpBH,KAAKwL,QAAOxL,KAAKwL,MAAM,IAC5BxL,KAAKyL,aAAenC,EAAQnJ,IAAI,gBAC3BH,KAAKyL,eAAczL,KAAKyL,aAAa,IAC1CzL,KAAK0L,QAAUpC,EAAQnJ,IAAI,WACtBH,KAAK0L,UAAS1L,KAAK0L,QAAQ,IAChC1L,KAAK2L,QAAUrC,EAAQnJ,IAAI,WACtBH,KAAK2L,UAAS3L,KAAK2L,QAAQ,IAChC3L,KAAK4L,QAAUtC,EAAQnJ,IAAI,WACtBH,KAAK4L,UAAS5L,KAAK4L,QAAQ,IAChC,IAAIC,EAAOvC,EAAQnJ,IAAI,QACXH,KAAK6L,KAAbA,EAAoB,CAAEC,KAAKD,EAAKE,KAAMF,EAAI,MAAWG,IAAKH,EAAI,MAA8B,GAC/F,IAAII,EAAO3C,EAAQnJ,IAAI,QACaH,KAAKiM,KAArCA,EAA4C,CAACH,KAAKG,EAAMF,KAAME,EAAI,MAAWD,IAAKC,EAAI,MAAlE,GACrBjM,KAAK8K,OACF9K,KAAKyL,aAELzL,KAAKqL,cAAgBrL,KAAK8K,MAAQ,IAAM9K,KAAKoL,UAAY,IAD5DpL,KAAKoL,SAAW,IAAapL,KAAKqL,cAAiBrL,KAAK8K,KAAlC,KAnE9B,2DAwEmB,OAAO9K,KAAK0L,QAAU,IAAM1L,KAAK2L,QAAU,IAAM3L,KAAK4L,UAxEzE,+BAyEWnG,GAEP,UAAKA,EAAO+D,MAAMP,SAASjJ,KAAKwJ,SAAU/D,EAAO+D,MAAMjG,SAClDvD,KAAK8G,OAASrB,EAAOyG,UACrBlM,KAAK8G,OAASrB,EAAO0G,UACrBC,EAAapM,KAAK0J,UAAY0C,EAAa3G,EAAO4G,aAClDD,EAAapM,KAAK0J,UAAY0C,EAAa3G,EAAO6G,cACjDtM,KAAKyJ,QAAUhE,EAAO8G,WAAgC,KAAnB9G,EAAO8G,aAC1CvM,KAAKyJ,QAAUhE,EAAO+G,WAAgC,KAAnB/G,EAAO+G,gBAjFpD,KAuFO,SAASJ,EAAa1C,GAC3B,OAAQA,GACN,IAAK,KACH,OAAO,EAET,IAAK,KACH,OAAO,EAET,IAAK,OACH,OAAO,EAET,IAAK,OACH,OAAO,EAET,IAAK,MACH,OAAO,EAET,IAAK,MACH,OAAO,EAET,IAAK,MACH,OAAO,EAET,IAAK,MACH,OAAO,EAET,IAAK,MACH,OAAO,EAET,IAAK,KACH,OAAO,EAET,IAAK,KACH,OAAO,GAET,IAAK,KACH,OAAO,GAET,QACE,OAAO,G,sBC3FE+C,G,YAlCX,WAAYjL,GAAQ,qEACVA,I,sEAIN,IAFM,IAAD,OACDkL,EAAQ,GACH9H,EAAI,EAAGA,EAAI5E,KAAKwB,MAAM8J,MAAM/H,OAAQqB,IACzC8H,EAAMpL,KACF,kBAACgF,EAAA,EAAD,CAAKxD,MAAO,CAAE6J,OAAQ,OAAQxD,OAAQ,oBAClC,kBAAC5C,EAAA,EAAD,CAAKzD,MAAO,CAAC+D,QAAQ,OAAO+F,WAAW,SAASC,eAAe,UAAWnG,GAAG,IAAIC,GAAG,KAC/E3G,KAAKwB,MAAM8J,MAAM1G,GAAGc,UAAU,EAAG,IAAI,UAE1C,kBAACa,EAAA,EAAD,CAAKzD,MAAO,CAAC+D,QAAQ,OAAO+F,WAAW,SAASC,eAAe,UAAWnG,GAAG,IAAIC,GAAG,KAChF,kBAAC9D,EAAA,EAAD,CAAOpD,IAAKO,KAAKwB,MAAM8J,MAAM1G,GAAI9B,MAAO,CAAEC,MAAO,WAErD,kBAACwD,EAAA,EAAD,CAAKzD,MAAO,CAAC+D,QAAQ,OAAO+F,WAAW,SAASC,eAAe,UAAWnG,GAAG,IAAIC,GAAG,KAChF,kBAACyB,EAAA,EAAD,CAAQxF,QAAS,WAAQ,EAAKpB,MAAMsL,WAAWlI,KAA/C,gBAUhB,OACI,6BACK8H,O,GA5BS9M,IAAMC,W,qBCaXkN,G,YACjB,WAAYvL,GAAQ,IAAD,8BACf,4CAAMA,KAgLVwL,OAAS,WACL,EAAK/K,SAAS,CACVgL,OAAQ,EAAKxL,MAAMwL,SAnLR,EAuLnBC,YAAc,WACV,EAAKjL,SAAS,CACVgL,OAAO,KAzLI,EA+LnBE,YAAc,SAACpF,GAAW,IAChBuB,EAAY,EAAK7H,MAAjB6H,QACF8D,EAAKrF,EAAMsF,QACXtK,EAAQuK,SAASpC,KAAKqC,YAEtBC,EAAaF,SAASG,eAAe,YAAYC,YACjDC,GAASP,GAAMrK,EAAQyK,GAAc,GAAKA,EAE1CG,GAAS,MAASA,GAAS,KAC3BrE,EAAQE,MAAQ,KAEXmE,GAAS,MAASA,GAAS,GAChCrE,EAAQE,MAAQ,KAEXmE,GAAS,KAAQA,GAAS,KAC/BrE,EAAQE,MAAQ,KAEXmE,GAAS,KAAQA,GAAS,IAC/BrE,EAAQE,MAAQ,KAEXmE,GAAS,KAAQA,GAAS,KAC/BrE,EAAQE,MAAQ,KAEXmE,GAAS,MAASA,GAAS,IAChCrE,EAAQE,MAAQ,KAEXmE,GAAS,KAAQA,GAAS,IAC/BrE,EAAQE,MAAQ,KAEXmE,GAAS,MAASA,GAAS,IAChCrE,EAAQE,MAAQ,KAEXmE,GAAS,KAAQA,GAAS,IAC/BrE,EAAQE,MAAQ,KAEXmE,GAAS,MAASA,GAAS,IAChCrE,EAAQE,MAAQ,KAEXmE,GAAS,KAAQA,GAAS,IAC/BrE,EAAQE,MAAQ,KAEXmE,GAAS,KAAQA,GAAS,MAC/BrE,EAAQE,MAAQ,OAKpB,EAAKvH,SAAS,CAEV2L,aAJc,EAKdtE,aAjPW,EAuPnBuE,WAAa,WACT,IACMvE,EAAY,EAAK7H,MAAjB6H,QACNA,EAAQW,kBAAoB,EAAK6D,aAAajG,MAC9C,EAAK5F,SAAS,CAAE2L,aAHE,EAGWtE,aA3Pd,EA6PnByE,SAAW,WACP,IACMzE,EAAY,EAAK7H,MAAjB6H,QACNA,EAAQC,MAAQ,EAAKyE,UAAUnG,MAE/B,EAAK5F,SAAS,CAEV2L,aANc,EAOdtE,aArQW,EAwQnB2E,OAAS,SAACvG,GACN,IACM4B,EAAY,EAAK7H,MAAjB6H,QAENA,EAAQU,IAAMtC,EAAQV,OAAO/G,GACH,SAAtByH,EAAQV,OAAO/G,KACfqJ,EAAQW,kBAAoB,IAEhC,EAAKhI,SAAS,CACV2L,aARc,EASdtE,aAlRW,EAqRnB4E,OAAS,WACL,IACM5E,EAAY,EAAK7H,MAAjB6H,QAEF6E,OAAO,EAAKC,YAAYvG,OAAS,IACjC,EAAKpG,MAAM6H,QAAQG,OAAS0E,OAAO,EAAKC,YAAYvG,QAExDyB,EAAQxC,MAAQ,EAAKuH,WAAWxG,MAChCyB,EAAQI,QAAU,EAAK4E,aAAazG,MAGhC,EAAKpG,MAAM6H,QAAQE,OAAS,EAAK/H,MAAM6H,QAAQxC,OAAS,EAAKrF,MAAM6H,QAAQI,SAAW,EAAKjI,MAAM6H,QAAQG,OACzGH,EAAQwB,KAAOC,GAAU,EAAKtJ,MAAM6H,QAAQE,MAAO,EAAK/H,MAAM6H,QAAQxC,MAAO,EAAKrF,MAAM6H,QAAQI,QAAS,EAAKjI,MAAM6H,QAAQG,OAAQ,EAAKjI,MAAM+M,QAE9IjF,EAAQwB,KAAO,EAEpB,EAAK7I,SAAS,CAAE2L,aAfE,EAeWtE,aArSd,EAuSnBkF,SAAW,WACP,IACMlF,EAAY,EAAK7H,MAAjB6H,QACNA,EAAQK,IAAM,EAAK8E,SAAS5G,MAC5ByB,EAAQM,OAAS,EAAK8E,YAAY7G,MAClCyB,EAAQO,SAAW,EAAK8E,cAAc9G,MACtCyB,EAAQQ,aAAe,EAAK8E,kBAAkB/G,MAC9CyB,EAAQS,kBAAoB,EAAK8E,uBAAuBhH,MACxDyB,EAAQY,MAAQ,EAAK4E,WAAWjH,MAChCyB,EAAQa,MAAQ,EAAK4E,WAAWlH,MAChCyB,EAAQsB,OAAS,EAAKoE,YAAYnH,MAClCyB,EAAQuB,MAAQ,EAAKoE,WAAWpH,MAChCyB,EAAQc,WAAa,EAAK8E,gBAAgBrH,MAC1CyB,EAAQe,YAAc,EAAK8E,iBAAiBtH,MAC5CyB,EAAQiB,eAAiB,EAAK6E,oBAAoBvH,MAClDyB,EAAQmB,eAAiB,EAAK4E,oBAAoBxH,MAClDyB,EAAQqB,UAAY,EAAK2E,eAAezH,MAExC,EAAK5F,SAAS,CAAE2L,aAjBE,EAiBWtE,aAzTd,EA2TnBiG,UAAY,WACR,IACMjG,EAAY,EAAK7H,MAAjB6H,QAEFA,EAAQwB,KACqB,MAAzB,EAAK0E,WAAW3H,OAChByB,EAAQ+B,cAAgBoE,KAAKC,MAAMpG,EAAQwB,MAAQ,IAAMqD,OAAO,EAAKwB,cAAc9H,QAAU,KAC7FyB,EAAQ8B,SAAW+C,OAAO,EAAKwB,cAAc9H,OAC7CyB,EAAQmC,cAAe,IAGvBnC,EAAQ+B,cAAgB8C,OAAO,EAAKyB,WAAW/H,OAC/CyB,EAAQ8B,SAAW,IAAMqE,KAAKC,MAAMvB,OAAO,EAAKyB,WAAW/H,OAASyB,EAAQwB,KAAO,KAAS,IAC5FxB,EAAQmC,cAAe,IAG3BnC,EAAQ+B,cAAgB8C,OAAO,EAAKyB,WAAW/H,OAC/CyB,EAAQmC,cAAe,GAI3B,EAAKxJ,SAAS,CAAE2L,aApBE,EAoBWtE,aAhVd,EAkVnBuG,YAAc,WACV,IAAIC,EAAY,EAAKC,eAAelI,MACpC,EAAK5F,SAAS,CAAE6N,eApVD,EAsVnBE,QAAU,WAAO,IAAD,EACiB,EAAKvO,MAA5BqO,EADM,EACNA,UAAWxG,EADL,EACKA,QACjB,GAAIwG,EAAW,CACXxG,EAAQgC,MAAMhK,KAAKwO,GACnB,IAAIG,EAAW,CACXH,UAAW,GACXlC,aAAa,EACbtE,QAASA,GAGb,EAAKrH,SAASgO,KAhWH,EAmWnBnD,WAAa,SAACzG,GAAW,IAEfiD,EAAY,EAAK7H,MAAjB6H,QACF4G,EAAS5G,EAAQgC,MAAM6E,OAAO9J,EAAO,GACzCiD,EAAQgC,MAAQ4E,EAChB,EAAKjO,SAAS,CACV2L,aAAa,EACbtE,QAASA,KA1WE,EA6WnB8G,UAAY,SAACC,GAAQ,IAAD,EACe,EAAK5O,MAA9B6H,EADU,EACVA,QADU,EACDsE,YAEf,IAAI0C,EAAa,GACjBA,EAAWxE,KAAOuE,EAAGrJ,OAAOuJ,MAAM,GAClCrP,QAAQC,IAAI,QACZD,QAAQC,IAAImP,EAAWxE,MACnBwE,EAAWxE,MACXwE,EAAWtE,IAAMwE,IAAIC,gBAAgBH,EAAWxE,MAChDwE,EAAWvE,KAAOuE,EAAWxE,KAAKC,MAElCuE,EAAa,GAEjBpP,QAAQC,IAAIkP,EAAGrJ,OAAO/G,IACD,cAAjBoQ,EAAGrJ,OAAO/G,GAAsBqJ,EAAQuC,KAAOyE,EAAoBhH,EAAQ2C,KAAOqE,EACtF,EAAKrO,SAAS,CAAEqH,UAASsE,aAbX,KA/WC,EA8XnBxG,UAAY,SAACiJ,GAAQ,IAAD,EACe,EAAK5O,MAA9B6H,EADU,EACVA,QADU,EACDsE,YAEf1M,QAAQC,IAAqB,eAAjBkP,EAAGrJ,OAAO/G,IACD,eAAjBoQ,EAAGrJ,OAAO/G,GAAuBqJ,EAAQuC,KAAO,GAAYvC,EAAQ2C,KAAO,GAE/E,EAAKhK,SAAS,CAAEqH,UAASsE,aAJX,KAhYC,EAwYtB8C,SAAW,WAAO,IACTC,EAAS,EAAKlP,MAAdkP,KACNA,IAEA,EAAK1O,SAAS,CAAE0O,UA5YG,EA8YvBC,aAAe,WAAO,IACZD,EAAS,EAAKlP,MAAdkP,KACNA,IAEA,EAAK1O,SAAS,CAAE0O,UAlZG,EAuZnBE,YAAc,WAAO,IACTvH,EAAY,EAAK7H,MAAjB6H,QACAwH,EAAS,EAAKtP,MAAdsP,KACR,EAAKtP,MAAMqP,YAAYvH,EAASwH,IA1ZjB,EA8ZnBC,WAAa,WAAO,IACVtL,EAAW,EAAKjE,MAAhBiE,OACNA,EAAO+F,OAAQ,EACf,EAAKhK,MAAMwP,UAAUvL,KA9ZI,IAArB,EAAKjE,MAAMsP,MAAe,EAAKtP,MAAMY,WACrC,EAAKX,MAAQ,CACTqO,UAAW,GACX7C,OAAO,EACPW,aAAa,EACb+C,KAAM,EACNrH,QAAS,CACLrJ,GAAI,GACJsJ,MAAO,GACPC,MAAO,GACPC,OAAQ,GACR3C,MAAO,GACP4C,QAAS,GACTC,IAAK,GACLC,OAAQ,GACRC,SAAU,GACVC,aAAc,GACdC,kBAAmB,GACnBC,IAAK,GACLC,kBAAmB,GACnBC,MAAO,GACPC,MAAO,GACPC,WAAY,GACZC,YAAa,GACbE,eAAgB,GAChBE,eAAgB,GAChBC,WAAY,GACZC,UAAW,GACXC,OAAQ,GACRC,MAAO,GACPC,KAAM,EACNM,SAAU,GACVC,cAAe,GACfC,MAAO,GACPC,WAAY,GACZE,cAAc,EACdC,QAAS,GACTC,QAAS,GACTC,QAAS,GACTC,KAAM,GACNI,KAAM,GACNT,MAAO,EAAKhK,MAAMY,WAAWnC,KAMhC,EAAKuB,MAAMY,WAChB,EAAKX,MAAQ,CACTwL,OAAO,EACP0D,KAAM,EACN/C,aAAa,EACbtE,QAAS,CACLrJ,GAAI,EAAKuB,MAAMyP,SAAS,EAAKzP,MAAMsP,MAAM7Q,GACzCsJ,MAAO,EAAK/H,MAAMyP,SAAS,EAAKzP,MAAMsP,MAAMvH,MAC5CC,MAAO,EAAKhI,MAAMyP,SAAS,EAAKzP,MAAMsP,MAAMtH,MAC5CC,OAAQ,EAAKjI,MAAMyP,SAAS,EAAKzP,MAAMsP,MAAMrH,OAC7C3C,MAAO,EAAKtF,MAAMyP,SAAS,EAAKzP,MAAMsP,MAAMhK,MAC5C4C,QAAS,EAAKlI,MAAMyP,SAAS,EAAKzP,MAAMsP,MAAMpH,QAC9CC,IAAK,EAAKnI,MAAMyP,SAAS,EAAKzP,MAAMsP,MAAMnH,IAC1CC,OAAQ,EAAKpI,MAAMyP,SAAS,EAAKzP,MAAMsP,MAAMlH,OAC7CC,SAAU,EAAKrI,MAAMyP,SAAS,EAAKzP,MAAMsP,MAAMjH,SAC/CC,aAAc,EAAKtI,MAAMyP,SAAS,EAAKzP,MAAMsP,MAAMhH,aACnDC,kBAAmB,EAAKvI,MAAMyP,SAAS,EAAKzP,MAAMsP,MAAM/G,kBACxDC,IAAK,EAAKxI,MAAMyP,SAAS,EAAKzP,MAAMsP,MAAM9G,IAC1CC,kBAAmB,EAAKzI,MAAMyP,SAAS,EAAKzP,MAAMsP,MAAM7G,kBACxDC,MAAO,EAAK1I,MAAMyP,SAAS,EAAKzP,MAAMsP,MAAM5G,MAC5CC,MAAO,EAAK3I,MAAMyP,SAAS,EAAKzP,MAAMsP,MAAM3G,MAC5CC,WAAY,EAAK5I,MAAMyP,SAAS,EAAKzP,MAAMsP,MAAM1G,WACjDC,YAAa,EAAK7I,MAAMyP,SAAS,EAAKzP,MAAMsP,MAAMzG,YAClDE,eAAgB,EAAK/I,MAAMyP,SAAS,EAAKzP,MAAMsP,MAAMvG,eACrDE,eAAgB,EAAKjJ,MAAMyP,SAAS,EAAKzP,MAAMsP,MAAMrG,eACrDC,WAAY,EAAKlJ,MAAMyP,SAAS,EAAKzP,MAAMsP,MAAMpG,WACjDC,UAAW,EAAKnJ,MAAMyP,SAAS,EAAKzP,MAAMsP,MAAMnG,UAChDC,OAAQ,EAAKpJ,MAAMyP,SAAS,EAAKzP,MAAMsP,MAAMlG,OAC7CC,MAAO,EAAKrJ,MAAMyP,SAAS,EAAKzP,MAAMsP,MAAMjG,MAC5CC,KAAM,EAAKtJ,MAAMyP,SAAS,EAAKzP,MAAMsP,MAAMhG,KAC3CM,SAAU,EAAK5J,MAAMyP,SAAS,EAAKzP,MAAMsP,MAAM1F,SAC/CC,cAAe,EAAK7J,MAAMyP,SAAS,EAAKzP,MAAMsP,MAAMzF,cACpDC,MAAO,EAAK9J,MAAMyP,SAAS,EAAKzP,MAAMsP,MAAMxF,MAC5CC,WAAY,EAAK/J,MAAMyP,SAAS,EAAKzP,MAAMsP,MAAMvF,WACjDE,aAAc,EAAKjK,MAAMyP,SAAS,EAAKzP,MAAMsP,MAAMrF,aACnDC,QAAS,EAAKlK,MAAMyP,SAAS,EAAKzP,MAAMsP,MAAMpF,QAC9CC,QAAS,EAAKnK,MAAMyP,SAAS,EAAKzP,MAAMsP,MAAMnF,QAC9CC,QAAS,EAAKpK,MAAMyP,SAAS,EAAKzP,MAAMsP,MAAMlF,QAC9CJ,MAAO,EAAKhK,MAAMyP,SAAS,EAAKzP,MAAMsP,MAAMtF,MAC5CK,KAAM,EAAKrK,MAAMyP,SAAS,EAAKzP,MAAMsP,MAAMjF,KAC3CI,KAAM,EAAKzK,MAAMyP,SAAS,EAAKzP,MAAMsP,MAAM7E,OAOnD,EAAKxK,MAAQ,CACTwL,OAAO,EACP0D,KAAM,EACN/C,aAAa,EACbtE,QAAS,MArGF,E,uFA2GO4H,GACtB,IAAIjB,EAEAA,GADoB,IAApBiB,EAAUJ,MAAeI,EAAU9O,WACxB,CACP6K,OAAO,EACPW,aAAa,EACb+C,KAAM,EACNrH,QAAS,CACLrJ,GAAI,GACJsJ,MAAO,GACPC,MAAO,GACPC,OAAQ,GACR3C,MAAO,GACP4C,QAAS,GACTC,IAAK,GACLC,OAAQ,GACRC,SAAU,GACVC,aAAc,GACdC,kBAAmB,GACnBC,IAAK,GACLC,kBAAmB,GACnBC,MAAO,GACPC,MAAO,GACPC,WAAY,GACZC,YAAa,GACbE,eAAgB,GAChBE,eAAgB,GAChBC,WAAY,GACZC,UAAW,GACXC,OAAQ,GACRC,MAAO,GACPC,KAAM,EACNM,SAAU,GACVC,cAAe,GACfC,MAAO,GACPC,WAAY,GACZE,cAAc,EACdC,QAAS,GACTC,QAAS,GACTC,QAAS,GACTJ,MAAO0F,EAAU9O,WAAWnC,GAC5B4L,KAAM,GACNI,KAAM,KAKTiF,EAAU9O,WACJ,CACP6K,OAAO,EACP0D,KAAM,EACN/C,aAAa,EACbtE,QAAS4H,EAAUD,SAASC,EAAUJ,OAK/B,CACP7D,OAAO,EACP0D,KAAM,EACN/C,aAAa,EACbtE,QAAS,MAKjBtJ,KAAKiC,SAASgO,K,+BAwPR,IACFpE,EAAMI,EADL,OAEL,IAAKjM,KAAKwB,MAAMY,aAAepC,KAAKyB,MAAM6H,QAAS,OAAO,EACpBuC,EAAlC7L,KAAKyB,MAAM6H,QAAQuC,OAAS,GAAa,CAAEE,KAAM/L,KAAKyB,MAAM6H,QAAQuC,KAAKE,KAAMC,IAAKhM,KAAKyB,MAAM6H,QAAQuC,KAAKG,IAAK1E,QAAQ,GAAsB,CAAEyE,KAAM,KAAMC,IAAK,KAAM1E,QAAQ,GAC9I2E,EAAlCjM,KAAKyB,MAAM6H,QAAQ2C,OAAS,GAAa,CAAEF,KAAM/L,KAAKyB,MAAM6H,QAAQ2C,KAAKF,KAAMC,IAAKhM,KAAKyB,MAAM6H,QAAQ2C,KAAKD,IAAK1E,QAAQ,GAAsB,CAAEyE,KAAM,KAAMC,IAAK,KAAM1E,QAAQ,GAEpL,IAAIoF,EAAQ,GAubZ,OArbK1M,KAAKyB,MAAMwL,QAA8B,IAArBjN,KAAKwB,MAAMsP,MAAa9Q,KAAKwB,MAAM2P,aAE3B,KAA7BnR,KAAKyB,MAAM6H,QAAQC,OAA6C,KAA7BvJ,KAAKyB,MAAM6H,QAAQE,OAA8C,KAA9BxJ,KAAKyB,MAAM6H,QAAQG,QAA8C,KAA7BzJ,KAAKyB,MAAM6H,QAAQxC,OAA+C,KAA/B9G,KAAKyB,MAAM6H,QAAQI,SAAsC,IAApB1J,KAAKyB,MAAMkP,KAC7LjE,EAAMpL,KAEF,kBAAC8P,EAAA,EAAMC,KAAP,CAAYC,IAAKtR,KAAKyB,MAAM6H,QAAQC,OAApC,SACgB,kBAAC5B,EAAA,EAAD,CAAYnI,UAAU,QAC9B,kBAACmI,EAAA,EAAW4J,QAAZ,KACI,kBAAC5J,EAAA,EAAW6J,KAAZ,CAAiBvR,GAAG,kBAExB,kBAAC2H,EAAA,EAAD,CAAaE,SAAU9H,KAAK+N,SAAU0D,aAAczR,KAAKyB,MAAM6H,QAAQC,MAAO9B,IAAK,SAACC,GAAc,EAAKsG,UAAYtG,GAC/GM,YAAY,kBANxB,eASS,kBAACnF,EAAA,EAAD,CAAOD,QAAS5C,KAAKmN,YAAarK,MAAO,CAAEC,MAAO,QAAUtD,IAAKiS,IAAeC,SAAO,IAC5F,+CAAqB3R,KAAKyB,MAAM6H,QAAQE,OAV5C,SAYiB,kBAAC7B,EAAA,EAAD,CAAYnI,UAAU,QAE/B,kBAACoI,EAAA,EAAD,CAAaE,SAAU9H,KAAKkO,OAAQuD,aAAczR,KAAKyB,MAAM6H,QAAQG,OAAQhC,IAAK,SAACC,GAAc,EAAK0G,YAAc1G,GAChHM,YAAY,kBAGpB,kBAAC4J,EAAA,EAAKC,MAAN,CAAYC,UAAU,8BAClB,kBAACF,EAAA,EAAKG,MAAN,cACA,kBAACH,EAAA,EAAKI,QAAN,CAAclK,SAAU9H,KAAKkO,OAAQuD,aAAczR,KAAKyB,MAAM6H,QAAQxC,MAAOW,IAAK,SAACC,GAAc,EAAK2G,WAAa3G,GAAWuK,GAAG,UAC7H,4BAAQpK,MAAM,KACd,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,MAAd,MACA,4BAAQA,MAAM,MAAd,MACA,4BAAQA,MAAM,MAAd,MACA,4BAAQA,MAAM,MAAd,MACA,4BAAQA,MAAM,MAAd,MACA,4BAAQA,MAAM,MAAd,MACA,4BAAQA,MAAM,eAAd,kBACA,4BAAQA,MAAM,SAAd,YACA,4BAAQA,MAAM,eAAd,kBACA,4BAAQA,MAAM,iBAAd,sBAGR,kBAAC+J,EAAA,EAAKC,MAAN,CAAYC,UAAU,8BAClB,kBAACF,EAAA,EAAKG,MAAN,gBACA,kBAACH,EAAA,EAAKI,QAAN,CAAclK,SAAU9H,KAAKkO,OAAQuD,aAAczR,KAAKyB,MAAM6H,QAAQI,QAASjC,IAAK,SAACC,GAAc,EAAK4G,aAAe5G,GAAWuK,GAAG,UACjI,4BAAQpK,MAAM,KACd,4BAAQA,MAAM,MAAd,MACA,4BAAQA,MAAM,MAAd,MACA,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,OAAd,OACA,4BAAQA,MAAM,OAAd,OACA,4BAAQA,MAAM,OAAd,OACA,4BAAQA,MAAM,OAAd,OACA,4BAAQA,MAAM,OAAd,OACA,4BAAQA,MAAM,MAAd,MACA,4BAAQA,MAAM,MAAd,MACA,4BAAQA,MAAM,MAAd,UAWe,KAA3B7H,KAAKyB,MAAM6H,QAAQU,KAAkC,IAApBhK,KAAKyB,MAAMkP,KAC5CjE,EAAMpL,KAEF,kBAAC8P,EAAA,EAAMC,KAAP,KAAY,mCACR,kBAAC/K,EAAA,EAAD,KAEI,kBAACC,EAAA,EAAD,CAAKE,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIC,GAAG,KACzB,kBAAC1C,EAAA,EAAD,CAAW1E,UAAU,cACjB,uBAAGiD,KAAK,gBACJ,wBAAIjD,UAAU,UAAd,OACA,kBAACqD,EAAA,EAAD,CAAO5C,GAAG,MAAM2C,QAAS5C,KAAKiO,OAAQnL,MAAO,CAAEC,MAAO,OAAQoG,OAAQ,kBAAoB1J,IAAI,gEAAgEkS,SAAO,OAMjL,kBAACpL,EAAA,EAAD,CAAKE,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIC,GAAG,KACzB,kBAAC1C,EAAA,EAAD,CAAW1E,UAAU,cACjB,uBAAGiD,KAAK,gBACJ,wBAAIjD,UAAU,UAAd,UACA,kBAACqD,EAAA,EAAD,CAAO5C,GAAG,UAAU2C,QAAS5C,KAAKiO,OAAQnL,MAAO,CAAEC,MAAO,OAAQoG,OAAQ,kBAAoB1J,IAAI,+FAA+FkS,SAAO,OAIpN,kBAACpL,EAAA,EAAD,CAAKE,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIC,GAAG,KACzB,kBAAC1C,EAAA,EAAD,CAAW1E,UAAU,cACjB,uBAAGiD,KAAK,gBAEJ,wBAAIjD,UAAU,UAAd,UACA,kBAACqD,EAAA,EAAD,CAAO5C,GAAG,aAAa2C,QAAS5C,KAAKiO,OAAQnL,MAAO,CAAEC,MAAO,OAAQoG,OAAQ,kBAAoB1J,IAAI,kEAAkEkS,SAAO,OAK1L,kBAACpL,EAAA,EAAD,CAAKE,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIC,GAAG,KACzB,kBAAC1C,EAAA,EAAD,CAAW1E,UAAU,cACjB,uBAAGiD,KAAK,gBACJ,wBAAIjD,UAAU,UAAd,OACA,kBAACqD,EAAA,EAAD,CAAO5C,GAAG,MAAM2C,QAAS5C,KAAKiO,OAAQnL,MAAO,CAAEC,MAAO,OAAQoG,OAAQ,kBAAoB1J,IAAI,2HAA2HkS,SAAO,OAK5O,kBAACpL,EAAA,EAAD,CAAKE,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIC,GAAG,KACzB,kBAAC1C,EAAA,EAAD,CAAW1E,UAAU,cACjB,uBAAGiD,KAAK,gBACJ,wBAAIjD,UAAU,UAAd,OACA,kBAACqD,EAAA,EAAD,CAAO5C,GAAG,MAAM2C,QAAS5C,KAAKiO,OAAQnL,MAAO,CAAEC,MAAO,OAAQoG,OAAQ,kBAAoB1J,IAAI,2EAA2EkS,SAAO,OAK5L,kBAACpL,EAAA,EAAD,CAAKE,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIC,GAAG,KACzB,kBAAC1C,EAAA,EAAD,CAAW1E,UAAU,cACjB,uBAAGiD,KAAK,gBACJ,wBAAIjD,UAAU,UAAd,OACA,kBAACqD,EAAA,EAAD,CAAO5C,GAAG,MAAM2C,QAAS5C,KAAKiO,OAAQnL,MAAO,CAAEC,MAAO,OAAQoG,OAAQ,kBAAoB1J,IAAI,8CAA8CkS,SAAO,OAK/J,kBAACpL,EAAA,EAAD,CAAKE,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIC,GAAG,KACzB,kBAAC1C,EAAA,EAAD,CAAW1E,UAAU,cACjB,uBAAGiD,KAAK,gBACJ,wBAAIjD,UAAU,UAAd,QACA,kBAACqD,EAAA,EAAD,CAAO5C,GAAG,OAAO2C,QAAS5C,KAAKiO,OAAQnL,MAAO,CAAEC,MAAO,OAAQoG,OAAQ,kBAAoB1J,IAAI,8FAA8FkS,SAAO,QAMpN,yDAA+B3R,KAAKyB,MAAM6H,QAAQU,KAClD,kDACA,kBAACrC,EAAA,EAAD,CAAYnI,UAAU,QAElB,kBAACoI,EAAA,EAAD,CAAaE,SAAU9H,KAAK6N,WAAY4D,aAAczR,KAAKyB,MAAM6H,QAAQW,kBAAmBxC,IAAK,SAACC,GAAc,EAAKoG,aAAepG,GAChIM,YAAY,0BASa,KAArChI,KAAKyB,MAAM6H,QAAQ+B,eAA4C,IAApBrL,KAAKyB,MAAMkP,KAEtDjE,EAAMpL,KACF,kBAAC8P,EAAA,EAAMC,KAAP,KACI,8CAAoBrR,KAAKyB,MAAM6H,QAAQE,MAAvC,IAA+CxJ,KAAKyB,MAAM6H,QAAQG,OAAlE,IAA2EzJ,KAAKyB,MAAM6H,QAAQxC,MAA9F,KAAuG9G,KAAKyB,MAAM6H,QAAQI,QAA1H,MAAsI1J,KAAKyB,MAAM6H,QAAQwB,MACzJ,0FACA,kBAAC8G,EAAA,EAAKC,MAAN,CAAYI,GAAI3L,KACZ,kBAACsL,EAAA,EAAKG,MAAN,CAAYE,GAAG,SAASC,QAAM,EAACvL,GAAI,IAEnC,kBAACJ,EAAA,EAAD,CAAKI,GAAI,IACL,kBAACiL,EAAA,EAAKO,MAAN,CAAYrK,SAAU9H,KAAKuP,UAAW9H,IAAK,SAACC,GAAc,EAAK8H,WAAa9H,GACxE0K,KAAK,QACLC,MAAM,6BACNtG,KAAK,uBACL9L,GAAG,wBACHqS,SAAO,IAEX,kBAACV,EAAA,EAAKO,MAAN,CACIC,KAAK,QACLC,MAAM,oCACNtG,KAAK,uBACL9L,GAAG,4BAIf,+CACA,kBAAC0H,EAAA,EAAD,CAAYnI,UAAU,QAClB,kCAAO,kBAACoI,EAAA,EAAD,CACH6J,aAAczR,KAAKyB,MAAM6H,QAAQ+B,cACjC5D,IAAK,SAACC,GAAc,EAAKkI,WAAalI,GACtCI,SAAU,WACF,EAAKrG,MAAM6H,QAAQwB,OAAQ,EAAK6E,cAAc9H,MAAQ,IAAO4H,KAAKC,MAAQvB,OAAO,EAAKyB,WAAW/H,OAAU,EAAKpG,MAAM6H,QAAQwB,KAAQ,KAAU,KACpJ,EAAKyE,aAKTvH,YAAY,oBAVhB,MAaJ,wCACA,kBAACL,EAAA,EAAD,CAAYnI,UAAU,QAClB,8BAAM,kBAACoI,EAAA,EAAD,CACF6J,aAAczR,KAAKyB,MAAM6H,QAAQ8B,SACjC3D,IAAK,SAACC,GAAc,EAAKiI,cAAgBjI,GACzCI,SAAU,WACF,EAAKrG,MAAM6H,QAAQwB,OAAQ,EAAK8E,WAAW/H,MAAQ4H,KAAKC,MAAM,EAAKjO,MAAM6H,QAAQwB,MAAQ,IAAOqD,OAAO,EAAKwB,cAAc9H,QAAW,MACzI,EAAK0H,aAITvH,YAAY,eAThB,QAiBY,IAApBhI,KAAKyB,MAAMkP,KACXjE,EAAMpL,KACF,kBAAC8P,EAAA,EAAMC,KAAP,CAAY7R,UAAU,gBAClB,kBAAC8G,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKE,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIC,GAAG,KACzB,kBAACgL,EAAA,EAAKC,MAAN,CAAYC,UAAU,8BAClB,kBAACF,EAAA,EAAKG,MAAN,YACA,kBAACH,EAAA,EAAKI,QAAN,CAAclK,SAAU9H,KAAKwO,SAAUiD,aAAczR,KAAKyB,MAAM6H,QAAQK,IAAKlC,IAAK,SAACC,GAAc,EAAK+G,SAAW/G,GAAWuK,GAAG,UAC3H,4BAAQpK,MAAM,KACd,4BAAQA,MAAM,MAAd,aACA,4BAAQA,MAAM,MAAd,aACA,4BAAQA,MAAM,KAAd,QACA,4BAAQA,MAAM,KAAd,QACA,4BAAQA,MAAM,KAAd,WAIZ,kBAACtB,EAAA,EAAD,CAAKE,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIC,GAAG,KACzB,kBAACgL,EAAA,EAAKC,MAAN,CAAYC,UAAU,8BAClB,kBAACF,EAAA,EAAKG,MAAN,eACA,kBAACH,EAAA,EAAKI,QAAN,CAAclK,SAAU9H,KAAKwO,SAAUiD,aAAczR,KAAKyB,MAAM6H,QAAQM,OAAQnC,IAAK,SAACC,GAAc,EAAKgH,YAAchH,GAAWuK,GAAG,UACjI,4BAAQpK,MAAM,KACd,4BAAQA,MAAM,MAAd,aACA,4BAAQA,MAAM,MAAd,aACA,4BAAQA,MAAM,KAAd,QACA,4BAAQA,MAAM,KAAd,QACA,4BAAQA,MAAM,KAAd,WAIZ,kBAACtB,EAAA,EAAD,CAAKE,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIC,GAAG,KACzB,kBAACgL,EAAA,EAAKC,MAAN,CAAYC,UAAU,8BAClB,kBAACF,EAAA,EAAKG,MAAN,iBACA,kBAACH,EAAA,EAAKI,QAAN,CAAclK,SAAU9H,KAAKwO,SAAUiD,aAAczR,KAAKyB,MAAM6H,QAAQO,SAAUpC,IAAK,SAACC,GAAc,EAAKiH,cAAgBjH,GAAWuK,GAAG,UACrI,4BAAQpK,MAAM,KACd,4BAAQA,MAAM,MAAd,aACA,4BAAQA,MAAM,MAAd,aACA,4BAAQA,MAAM,KAAd,QACA,4BAAQA,MAAM,KAAd,QACA,4BAAQA,MAAM,KAAd,WAIZ,kBAACtB,EAAA,EAAD,CAAKE,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIC,GAAG,KACzB,kBAACgL,EAAA,EAAKC,MAAN,CAAYC,UAAU,8BAClB,kBAACF,EAAA,EAAKG,MAAN,qBACA,kBAACH,EAAA,EAAKI,QAAN,CAAclK,SAAU9H,KAAKwO,SAAUiD,aAAczR,KAAKyB,MAAM6H,QAAQQ,aAAcrC,IAAK,SAACC,GAAc,EAAKkH,kBAAoBlH,GAAWuK,GAAG,UAC7I,4BAAQpK,MAAM,KACd,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,SAAd,SACA,4BAAQA,MAAM,UAAd,UACA,4BAAQA,MAAM,UAAd,UACA,4BAAQA,MAAM,eAAd,kBAIZ,kBAACtB,EAAA,EAAD,CAAKE,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIC,GAAG,KACzB,kBAACgL,EAAA,EAAKC,MAAN,CAAYC,UAAU,8BAClB,kBAACF,EAAA,EAAKG,MAAN,iBACA,kBAACH,EAAA,EAAKI,QAAN,CAAclK,SAAU9H,KAAKwO,SAAUiD,aAAczR,KAAKyB,MAAM6H,QAAQS,kBAAmBtC,IAAK,SAACC,GAAc,EAAKmH,uBAAyBnH,GAAWuK,GAAG,UACvJ,4BAAQpK,MAAM,KACd,4BAAQA,MAAM,UAAd,UACA,4BAAQA,MAAM,SAAd,SACA,4BAAQA,MAAM,SAAd,aAKhB,kBAACvB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKE,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIC,GAAG,KACzB,kBAACgL,EAAA,EAAKG,MAAN,cACA,kBAACpK,EAAA,EAAD,CAAYnI,UAAU,QAClB,kBAACoI,EAAA,EAAD,CAAaE,SAAU9H,KAAKwO,SAAUiD,aAAczR,KAAKyB,MAAM6H,QAAQY,MAAOzC,IAAK,SAACC,GAAc,EAAKoH,WAAapH,GAChHM,YAAY,YAIxB,kBAACzB,EAAA,EAAD,CAAKE,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIC,GAAG,KACzB,kBAACgL,EAAA,EAAKG,MAAN,cACA,kBAACpK,EAAA,EAAD,CAAYnI,UAAU,QAElB,kBAACoI,EAAA,EAAD,CAAaE,SAAU9H,KAAKwO,SAAUiD,aAAczR,KAAKyB,MAAM6H,QAAQa,MAAO1C,IAAK,SAACC,GAAc,EAAKqH,WAAarH,GAChHM,YAAY,YAKxB,kBAACzB,EAAA,EAAD,CAAKE,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIC,GAAG,KACzB,kBAACgL,EAAA,EAAKG,MAAN,eACA,kBAACpK,EAAA,EAAD,CAAYnI,UAAU,QAElB,kBAACoI,EAAA,EAAD,CAAaE,SAAU9H,KAAKwO,SAAUiD,aAAczR,KAAKyB,MAAM6H,QAAQsB,OAAQnD,IAAK,SAACC,GAAc,EAAKsH,YAActH,GAClHM,YAAY,aAIxB,kBAACzB,EAAA,EAAD,CAAKE,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIC,GAAG,KACzB,kBAACgL,EAAA,EAAKC,MAAN,CAAYC,UAAU,8BAClB,kBAACF,EAAA,EAAKG,MAAN,cACA,kBAACH,EAAA,EAAKI,QAAN,CAAclK,SAAU9H,KAAKwO,SAAUiD,aAAczR,KAAKyB,MAAM6H,QAAQuB,MAAOpD,IAAK,SAACC,GAAc,EAAKuH,WAAavH,GAAWuK,GAAG,UAC/H,4BAAQpK,MAAM,KACd,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,MAAd,cACA,4BAAQA,MAAM,KAAd,SACA,4BAAQA,MAAM,KAAd,UACA,4BAAQA,MAAM,KAAd,SACA,4BAAQA,MAAM,MAAd,kBAKhB,kBAACvB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKE,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIC,GAAG,KACzB,kBAACgL,EAAA,EAAKG,MAAN,WACA,kBAACpK,EAAA,EAAD,CAAYnI,UAAU,QAElB,kBAACoI,EAAA,EAAD,CAAaE,SAAU9H,KAAKwO,SAAUiD,aAAczR,KAAKyB,MAAM6H,QAAQc,WAAY3C,IAAK,SAACC,GAAc,EAAKwH,gBAAkBxH,GAC1HM,YAAY,SAKxB,kBAACzB,EAAA,EAAD,CAAKE,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIC,GAAG,KACzB,kBAACgL,EAAA,EAAKG,MAAN,WACA,kBAACpK,EAAA,EAAD,CAAYnI,UAAU,QAElB,kBAACoI,EAAA,EAAD,CAAaE,SAAU9H,KAAKwO,SAAUiD,aAAczR,KAAKyB,MAAM6H,QAAQe,YAAa5C,IAAK,SAACC,GAAc,EAAKyH,iBAAmBzH,GAC5HM,YAAY,SAIxB,kBAACzB,EAAA,EAAD,CAAKE,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIC,GAAG,KACzB,kBAACgL,EAAA,EAAKG,MAAN,WACA,kBAACpK,EAAA,EAAD,CAAYnI,UAAU,QAElB,kBAACoI,EAAA,EAAD,CAAaE,SAAU9H,KAAKwO,SAAUiD,aAAczR,KAAKyB,MAAM6H,QAAQiB,eAAgB9C,IAAK,SAACC,GAAc,EAAK0H,oBAAsB1H,GAClIM,YAAY,SAIxB,kBAACzB,EAAA,EAAD,CAAKE,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIC,GAAG,KACzB,kBAACgL,EAAA,EAAKG,MAAN,WACA,kBAACpK,EAAA,EAAD,CAAYnI,UAAU,QAElB,kBAACoI,EAAA,EAAD,CAAaE,SAAU9H,KAAKwO,SAAUiD,aAAczR,KAAKyB,MAAM6H,QAAQmB,eAAgBhD,IAAK,SAACC,GAAc,EAAK2H,oBAAsB3H,GAClIM,YAAY,SAIxB,kBAACzB,EAAA,EAAD,CAAKE,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIC,GAAG,KACzB,kBAACgL,EAAA,EAAKG,MAAN,WACA,kBAACpK,EAAA,EAAD,CAAYnI,UAAU,QAElB,kBAACoI,EAAA,EAAD,CAAaE,SAAU9H,KAAKwO,SAAUiD,aAAczR,KAAKyB,MAAM6H,QAAQqB,UAAWlD,IAAK,SAACC,GAAc,EAAK4H,eAAiB5H,GACxHM,YAAY,YAWZ,IAApBhI,KAAKyB,MAAMkP,KAEXjE,EAAMpL,KACF,kBAAC8P,EAAA,EAAMC,KAAP,CAAY7R,UAAU,gBAClB,kBAACoS,EAAA,EAAKG,MAAN,yBACA,kBAACpK,EAAA,EAAD,CAAYnI,UAAU,QAElB,kBAACoI,EAAA,EAAD,CAAaE,SAAU9H,KAAK6P,YAAa4B,aAAczR,KAAKyB,MAAMqO,UAAWrI,IAAK,SAACC,GAAc,EAAKqI,eAAiBrI,GACnHM,YAAY,kBAAkBH,MAAO7H,KAAKyB,MAAMqO,UAAWhN,MAAO,CAAEC,MAAO,QAASoE,YAAa,UACrG,kBAACiB,EAAA,EAAD,CAAQxF,QAAS5C,KAAKgQ,QAAS1M,QAAQ,WAAvC,QAEJ,kBAAC,GAAD,CAAawJ,WAAY9M,KAAK8M,WAAYxB,MAAOtL,KAAKyB,MAAM6H,QAAQgC,UAOpD,IAApBtL,KAAKyB,MAAMkP,MAEXjE,EAAMpL,KACF,kBAAC8P,EAAA,EAAMC,KAAP,CAAY7R,UAAU,gBAClB,kBAACoS,EAAA,EAAD,KACI,kBAACA,EAAA,EAAKC,MAAN,CAAYC,UAAU,aAClB,kBAACF,EAAA,EAAKG,MAAN,6BADJ,YAKQ,kBAACH,EAAA,EAAKI,QAAN,CAAcO,UAAQ,IAAIH,KAAK,OAAOpK,YAAY,oBAAoBwK,OAAO,UAAU1K,SAAU9H,KAAKoQ,YAE1G,kBAACvN,EAAA,EAAD,CAAOpD,IAAKoM,EAAKG,IAAKlJ,MAAO,CAAEC,MAAO,OAAS0P,OAAK,IACpD,2BAAI5G,EAAKE,KAAK,kBAAC3D,EAAA,EAAD,CAAQxF,QAAS5C,KAAKoH,UAAWnH,GAAG,aAAaqH,OAAQuE,EAAKvE,OAAQhE,QAAQ,UAA9E,YAElB,kBAACsO,EAAA,EAAKC,MAAN,CAAYC,UAAU,aAClB,kBAACF,EAAA,EAAKG,MAAN,6BADJ,YAKQ,kBAACH,EAAA,EAAKI,QAAN,CAAcO,UAAQ,IAAIH,KAAK,OAAOpK,YAAY,oBAAoBwK,OAAO,UAAU1K,SAAU9H,KAAKoQ,YAE1G,kBAACvN,EAAA,EAAD,CAAOpD,IAAKwM,EAAKD,IAAKlJ,MAAO,CAAEC,MAAO,OAAS0P,OAAK,IACpD,2BAAIxG,EAAKF,KAAK,kBAAC3D,EAAA,EAAD,CAAQxF,QAAS5C,KAAKoH,UAAWnH,GAAG,aAAaqH,OAAQ2E,EAAK3E,OAAQhE,QAAQ,UAA9E,eAYlD,yBAAKR,MAAO,CAAE4P,SAAU,aACpB,kBAACtK,EAAA,EAAD,CAAQ9E,QAAQ,UAAUV,QAAS5C,KAAKgN,OAAQxN,UAAU,WAA1D,oBAGA,kBAAC+C,EAAA,EAAD,CAAKO,MAAO,CAAE4P,SAAU,WAAYC,KAAM,QAASC,IAAK,QACpD,kBAACrQ,EAAA,EAAIC,KAAL,CAAUC,KAAK,UAAS,yBAAKK,MAAO,CAAEC,MAAO,QAASkE,OAAQ,QAAUxH,IAAKoT,SAEjF,kBAACzK,EAAA,EAAD,CAAQ9E,QAAQ,OAAOV,QAAS5C,KAAK+Q,WAAYvR,UAAU,WAA3D,oBAGA,kBAAC4R,EAAA,EAAD,CAAOnR,GAAG,WAAW6S,KAAK,KAAKC,KAAM/S,KAAKyB,MAAMwL,MAAO+F,OAAQhT,KAAKkN,YAAa+F,WAAW,GACxF,kBAAC7B,EAAA,EAAM8B,OAAP,CAAcC,aAAW,GACrB,kBAAC/B,EAAA,EAAMgC,MAAP,0BAEH1G,EACD,kBAAC0E,EAAA,EAAMiC,OAAP,KACI,kBAACjL,EAAA,EAAD,CAAQxF,QAAS5C,KAAK4Q,aAActN,QAAQ,UAAUgQ,SAA8B,IAApBtT,KAAKyB,MAAMkP,MAA3E,QAGA,kBAACvI,EAAA,EAAD,CAAQ9E,QAAQ,YAAYV,QAAS5C,KAAKkN,aAA1C,SAGA,kBAAC9E,EAAA,EAAD,CAAQxF,QAAS5C,KAAK0Q,SAAUpN,QAAQ,UAAUgQ,SAA8B,IAApBtT,KAAKyB,MAAMkP,MAAvE,QAGA,kBAACvI,EAAA,EAAD,CAAQ9E,QAAQ,UAAUV,QAAS5C,KAAK6Q,YAAayC,SAAUtT,KAAKyB,MAAMmM,aAA1E,0B,GA73BgBhO,IAAMC,W,wCCVzB0T,G,iLAIjB,IAAIC,EAAe,GACfxT,KAAKwB,MAAMsP,KAAO,IAAM,IAAK0C,EAAe,cAEhD,IADA,IAAIC,EAAO,GACF7O,EAAI,EAAGA,EAAI5E,KAAKwB,MAAMkS,YAAYpI,MAAM/H,OAAQqB,IACvD6O,EAAKnS,KAAK,yBAAKwB,MAAO,CAAE6J,OAAQ,OAASnN,UAAU,8CACjD,yBAAKA,UAAU,0BACb,uBAAGiD,KAAK,KAAI,yBAAKjD,UAAU,WAAWC,IAAKO,KAAKwB,MAAMkS,YAAYpI,MAAM1G,SAkB9E,OAdI5E,KAAKwB,MAAMkS,YAAY7H,OAAS,IAClC4H,EAAKnS,KAAK,yBAAKwB,MAAO,CAAE6J,OAAQ,OAASnN,UAAU,8CACjD,yBAAKA,UAAU,0BACb,uBAAGiD,KAAK,KAAI,yBAAKjD,UAAU,WAAWC,IAAKO,KAAKwB,MAAMkS,YAAY7H,KAAKG,UAIzEhM,KAAKwB,MAAMkS,YAAYzH,OAAS,IAClCwH,EAAKnS,KAAK,yBAAKwB,MAAO,CAAE6J,OAAQ,OAASnN,UAAU,8CACjD,yBAAKA,UAAU,0BACb,uBAAGiD,KAAK,KAAI,yBAAKjD,UAAU,WAAWC,IAAKO,KAAKwB,MAAMkS,YAAYzH,KAAKD,UAK3E,6BAEE,kBAAC2H,GAAA,EAAD,CAAWrC,IAAKtR,KAAKwB,MAAMkS,YAAYzT,GAAI2T,iBAAiB,IAAI9Q,MAAO,CAAE+Q,gBAAiBL,IACxF,kBAACM,GAAA,EAAD,KACE,kBAACH,GAAA,EAAU9P,OAAX,CAAkBoO,GAAI6B,KAAKZ,OAAQa,SAAU/T,KAAKwB,MAAMsP,MACtD,kBAACxK,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKE,GAAG,IAAIC,GAAG,KAAKC,GAAG,KAAK7D,MAAO,CAAEmE,OAAQ,SAC3C,kBAACX,EAAA,EAAD,KAEE,kBAACC,EAAA,EAAD,CAAK/G,UAAU,WAAWgH,GAAG,KAC3B,yBAAKhH,UAAU,0BACb,wBAAIA,UAAU,kBAAd,SACA,2BAAIQ,KAAKwB,MAAMkS,YAAYlK,SAG/B,kBAACjD,EAAA,EAAD,CAAK/G,UAAU,WAAWgH,GAAG,KAC3B,yBAAKhH,UAAU,0BACb,wBAAIA,UAAU,kBAAd,SACA,2BAAIQ,KAAKwB,MAAMkS,YAAYjK,UAI/B,kBAAClD,EAAA,EAAD,CAAK/G,UAAU,WAAWgH,GAAG,KAC3B,yBAAKhH,UAAU,0BACb,wBAAIA,UAAU,kBAAd,OACA,2BAAIQ,KAAKwB,MAAMkS,YAAY5M,SAG/B,kBAACP,EAAA,EAAD,CAAK/G,UAAU,WAAWgH,GAAG,KAC3B,yBAAKhH,UAAU,0BACb,wBAAIA,UAAU,kBAAd,QACA,2BAAIQ,KAAKwB,MAAMkS,YAAYhK,aAKnC,kBAACnD,EAAA,EAAD,CAAKE,GAAG,IAAIC,GAAG,KAAKC,GAAG,KAAK7D,MAAO,CAAEmE,OAAQ,SAC3C,kBAACX,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAK/G,UAAU,WAAWgH,GAAG,KAC3B,yBAAKhH,UAAU,0BACb,wBAAIA,UAAU,kBAAd,OACA,2BAAIQ,KAAKwB,MAAMkS,YAAY/J,OAG/B,kBAACpD,EAAA,EAAD,CAAK/G,UAAU,WAAWgH,GAAG,KAC3B,yBAAKhH,UAAU,0BACb,wBAAIA,UAAU,kBAAd,OACA,2BAAIQ,KAAKwB,MAAMkS,YAAY9J,UAG/B,kBAACrD,EAAA,EAAD,CAAK/G,UAAU,WAAWgH,GAAG,KAC3B,yBAAKhH,UAAU,0BACb,wBAAIA,UAAU,kBAAd,OACA,2BAAIQ,KAAKwB,MAAMkS,YAAY7J,YAG/B,kBAACtD,EAAA,EAAD,CAAK/G,UAAU,WAAWgH,GAAG,KAC3B,yBAAKhH,UAAU,0BACb,wBAAIA,UAAU,kBAAd,MACA,2BAAIQ,KAAKwB,MAAMkS,YAAY5J,aAAe,IAAM9J,KAAKwB,MAAMkS,YAAY3J,uBAK/E,kBAACxD,EAAA,EAAD,CAAKE,GAAG,IAAIC,GAAG,KAAKC,GAAG,KAAK7D,MAAO,CAAEmE,OAAQ,SAC3C,kBAACX,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAK/G,UAAU,WAAWgH,GAAG,KAC3B,yBAAKhH,UAAU,0BACb,wBAAIA,UAAU,kBAAd,SACA,2BAAIQ,KAAKwB,MAAMkS,YAAYxJ,SAG/B,kBAAC3D,EAAA,EAAD,CAAK/G,UAAU,WAAWgH,GAAG,KAC3B,yBAAKhH,UAAU,0BACb,wBAAIA,UAAU,kBAAd,SACA,2BAAIQ,KAAKwB,MAAMkS,YAAYvJ,SAG/B,kBAAC5D,EAAA,EAAD,CAAK/G,UAAU,WAAWgH,GAAG,KAC3B,yBAAKhH,UAAU,0BACb,wBAAIA,UAAU,kBAAd,OACA,uBAAGwH,OAAO,SAASvE,KAAM,4CAA8CzC,KAAKwB,MAAMkS,YAAYzJ,mBAAmB,2BAAIjK,KAAKwB,MAAMkS,YAAY1J,QAGhJ,kBAACzD,EAAA,EAAD,CAAK/G,UAAU,WAAWgH,GAAG,KAC3B,yBAAKhH,UAAU,0BACb,wBAAIA,UAAU,kBAAd,QACA,2BAAIQ,KAAKwB,MAAMkS,YAAY9I,YAKnC,kBAACrE,EAAA,EAAD,CAAKE,GAAG,IAAIC,GAAG,KAAKC,GAAG,KAAK7D,MAAO,CAAEmE,OAAQ,SAC3C,kBAACX,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAK/G,UAAU,WAAWgH,GAAG,KAC3B,yBAAKhH,UAAU,0BACb,wBAAIA,UAAU,kBAAd,SACA,2BAAIQ,KAAKwB,MAAMkS,YAAY7I,SAG/B,kBAACtE,EAAA,EAAD,CAAK/G,UAAU,WAAWgH,GAAG,KAC3B,yBAAKhH,UAAU,0BACb,wBAAIA,UAAU,kBAAd,OACA,uBAAGsD,MAAO,CAAC0E,SAAS,SAAUxH,KAAKwB,MAAMkS,YAAY5I,QAGzD,kBAACvE,EAAA,EAAD,CAAK/G,UAAU,WAAWgH,GAAG,KAC3B,yBAAKhH,UAAU,0BACb,wBAAIA,UAAU,kBAAd,SACA,4BAAKiQ,KAAKuE,MAAwC,GAAlChU,KAAKwB,MAAMkS,YAAYtI,UAAiB,IAAI6I,UAAY,OAG5E,kBAAC1N,EAAA,EAAD,CAAK/G,UAAU,WAAWgH,GAAG,KAC3B,yBAAKhH,UAAU,0BACb,wBAAIA,UAAU,kBAAd,UACA,uBAAGsD,MAAO,CAAC0E,SAAS,SAAUxH,KAAKwB,MAAMkS,YAAYrI,cAAc4I,iBAS/E,kBAACN,GAAA,EAAU5P,SAAX,CAAoBgQ,SAAU/T,KAAKwB,MAAMsP,MACvC,kBAACgD,GAAA,EAAKzC,KAAN,KACE,kBAAC/K,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKE,GAAG,IAAIC,GAAG,KAAKC,GAAG,KAAK7D,MAAO,CAAEmE,OAAQ,SAE3C,kBAACX,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAK/G,UAAU,WAAWgH,GAAG,KAC3B,yBAAKhH,UAAU,0BACb,wBAAIA,UAAU,kBAAd,OACA,uBAAGsD,MAAO,CAAC0E,SAAS,SAAUxH,KAAKwB,MAAMkS,YAAYnK,SAOzD,kBAAChD,EAAA,EAAD,CAAK/G,UAAU,WAAWgH,GAAG,KAC3B,yBAAKhH,UAAU,0BACb,wBAAIA,UAAU,kBAAd,SACA,uBAAGsD,MAAO,CAAC0E,SAAS,SAAUxH,KAAKwB,MAAM0S,UAAUlU,KAAKwB,MAAMkS,YAAYlI,MAAMvL,OAIpF,kBAACsG,EAAA,EAAD,CAAK/G,UAAU,WAAWgH,GAAG,KAC3B,yBAAKhH,UAAU,0BACb,wBAAIA,UAAU,kBAAd,QACA,uBAAGwH,OAAO,SAASvE,KAAM,4CAA8CzC,KAAKwB,MAAMkS,YAAYzJ,mBAAmB,uBAAGnH,MAAO,CAAC0E,SAAS,SAAUxH,KAAKwB,MAAMkS,YAAYzJ,sBAM1K,kBAAC1D,EAAA,EAAD,CAAK/G,UAAU,WAAWgH,GAAG,KAC3B,yBAAKhH,UAAU,0BACb,wBAAIA,UAAU,kBAAd,WACA,2BAAIQ,KAAKwB,MAAMkS,YAAYtJ,gBAGnC,kBAAC7D,EAAA,EAAD,CAAKE,GAAG,IAAIC,GAAG,KAAKC,GAAG,KAAK7D,MAAO,CAAEmE,OAAQ,SAE3C,kBAACX,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAK/G,UAAU,WAAWgH,GAAG,KAC3B,yBAAKhH,UAAU,0BACb,wBAAIA,UAAU,kBAAd,WACA,2BAAIQ,KAAKwB,MAAMkS,YAAYrJ,eAK/B,kBAAC9D,EAAA,EAAD,CAAK/G,UAAU,WAAWgH,GAAG,KAC3B,yBAAKhH,UAAU,0BACb,wBAAIA,UAAU,kBAAd,WACA,2BAAIQ,KAAKwB,MAAMkS,YAAYnJ,kBAK/B,kBAAChE,EAAA,EAAD,CAAK/G,UAAU,WAAWgH,GAAG,KAC3B,yBAAKhH,UAAU,0BACb,wBAAIA,UAAU,kBAAd,WACA,2BAAIQ,KAAKwB,MAAMkS,YAAYjJ,kBAG/B,kBAAClE,EAAA,EAAD,CAAK/G,UAAU,WAAWgH,GAAG,KAC3B,yBAAKhH,UAAU,0BACb,wBAAIA,UAAU,kBAAd,WACA,2BAAIQ,KAAKwB,MAAMkS,YAAYhJ,gBAInC,kBAACnE,EAAA,EAAD,CAAKE,GAAG,IAAIC,GAAG,KAAKC,GAAG,KAAK7D,MAAO,CAAEmE,OAAQ,SAC3C,kBAACX,EAAA,EAAD,KAEE,kBAACC,EAAA,EAAD,CAAK/G,UAAU,WAAWgH,GAAG,KAC3B,yBAAKhH,UAAU,0BACb,wBAAIA,UAAU,kBAAd,UACA,2BAAIQ,KAAKwB,MAAMkS,YAAY/I,aAG/B,kBAACpE,EAAA,EAAD,CAAK/G,UAAU,WAAWgH,GAAG,KAC3B,yBAAKhH,UAAU,0BACb,wBAAIA,UAAU,kBAAd,QACA,2BAAIQ,KAAKwB,MAAMkS,YAAYS,kBAG/B,kBAAC5N,EAAA,EAAD,CAAK/G,UAAU,WAAWgH,GAAG,KAC3B,yBAAKhH,UAAU,0BACb,wBAAIA,UAAU,kBAAd,QACA,2BAAIQ,KAAKwB,MAAMkS,YAAYnI,iBAMrC,kBAACjF,EAAA,EAAD,KACGmN,GAEH,kBAACnN,EAAA,EAAD,KAEGtG,KAAKwB,MAAM4S,mB,GA5PWxU,IAAMC,W,8BCAhC,SAASwU,GAAsB7S,GAE1C,IAUE8S,EAAMC,EAJJC,EANcC,aAAW,CACzBC,KAAM,CACJ3R,MAAO,MAIC4R,GAqIlB,GA/HmB,UAAbnT,EAAMuK,MACVuI,EAAQ,CACN,CACEzM,MAAO,EACPwK,MAAO,KAET,CACExK,MAAO,EACPwK,MAAO,KAET,CACExK,MAAO,EACPwK,MAAO,KAET,CACExK,MAAO,EACPwK,MAAO,KAET,CACExK,MAAO,EACPwK,MAAO,KAET,CACExK,MAAO,EACPwK,MAAO,KAET,CACExK,MAAO,EACPwK,MAAO,KAET,CACExK,MAAO,EACPwK,MAAO,KAET,CACExK,MAAO,EACPwK,MAAO,KAET,CACExK,MAAO,EACPwK,MAAO,KAET,CACExK,MAAO,GACPwK,MAAO,KAET,CACExK,MAAO,GACPwK,MAAO,MAET,CACExK,MAAO,GACPwK,MAAO,MAET,CACExK,MAAO,GACPwK,MAAO,MAET,CACExK,MAAO,GACPwK,MAAO,MAET,CACExK,MAAO,GACPwK,MAAO,MAET,CACExK,MAAO,GACPwK,MAAO,OAGXkC,EAAI,IAGgB,YAAb/S,EAAMuK,OACXuI,EAAQ,CACJ,CACEzM,MAAO,EACPwK,MAAO,MAET,CACExK,MAAO,EACPwK,MAAO,MAET,CACExK,MAAO,EACPwK,MAAO,QAET,CACExK,MAAO,EACPwK,MAAO,QAET,CACExK,MAAO,EACPwK,MAAO,OAET,CACExK,MAAO,EACPwK,MAAO,OAET,CACExK,MAAO,EACPwK,MAAO,OAET,CACExK,MAAO,EACPwK,MAAO,OAET,CACExK,MAAO,EACPwK,MAAO,OAET,CACExK,MAAO,EACPwK,MAAO,MAET,CACIxK,MAAO,GACPwK,MAAO,MAET,CACExK,MAAO,GACPwK,MAAO,OAGbkC,EAAI,IAEO,UAAb/S,EAAMuK,MAAgBvK,EAAMiE,OAAOmP,iBAAiB,CACtD,IAAInP,EAAOjE,EAAMiE,OAGjB,OAFAA,EAAOmP,kBAAiB,EACxBpT,EAAMwP,UAAUvL,IACT,EAEF,GAAiB,YAAbjE,EAAMuK,MAAkBvK,EAAMiE,OAAOoP,mBAAmB,CACjE,IAAIpP,EAAOjE,EAAMiE,OAGjB,OAFAA,EAAOoP,oBAAmB,EAC1BrT,EAAMwP,UAAUvL,IACT,EAEP,OACE,kBAAC,IAAMqP,SAAP,KACE,kBAACC,GAAA,EAAD,CAAY9U,GAAG,oBAAoB+U,cAAY,IAG/C,yBAAKxV,UAAWgV,EAAQE,MACrBlT,EAAMuK,KACP,kBAACkJ,GAAA,EAAD,CACAC,kBAAmB,SAACnO,EAAEoO,GAAO3T,EAAM4T,OAAOD,IACxCE,YAAY,aACZ5D,aAAc,CAAC,EAAG8C,GAClBe,kBAAgB,oBAChBC,iBA5JR,SAAmB1N,GACjB,MAAM,GAAN,OAAUA,EAAV,UA4JMyM,MAAOA,EACPC,IAAKA,M,cCpKf,SAASiB,GAAU3N,GACjB,OAAQA,GACN,KAAK,EACH,MAAO,IAET,KAAK,EACH,MAAO,IAET,KAAK,EACH,MAAO,IAET,KAAK,EACH,MAAO,IAET,KAAK,EACH,MAAO,IAET,KAAK,EACH,MAAO,IAET,KAAK,EACH,MAAO,IAET,KAAK,EACH,MAAO,IAET,KAAK,EACH,MAAO,IAET,KAAK,EACH,MAAO,IAET,KAAK,GACH,MAAO,IAET,KAAK,GACH,MAAO,KAET,KAAK,GACH,MAAO,KAET,KAAK,GACH,MAAO,KAET,KAAK,GACH,MAAO,KAET,KAAK,GACH,MAAO,KAET,KAAK,GACH,MAAO,KAET,QACE,OAAO,GAIb,SAAS4N,GAAY5N,GACnB,OAAQA,GACN,KAAK,EACH,MAAO,KAET,KAAK,EACH,MAAO,KAET,KAAK,EACH,MAAO,OAET,KAAK,EACH,MAAO,OAET,KAAK,EACH,MAAO,MAET,KAAK,EACH,MAAO,MAET,KAAK,EACH,MAAO,MAET,KAAK,EACH,MAAO,MAET,KAAK,EACH,MAAO,MAET,KAAK,EACH,MAAO,KAET,KAAK,GACH,MAAO,KAET,KAAK,GACH,MAAO,KAET,QACE,OAAO,G,IAKQ6N,G,YACnB,WAAYlU,GAAQ,IAAD,8BACjB,4CAAMA,KAWRmU,aAAe,SAAC5O,GAAO,IAAD,EACQ,EAAKvF,MAA3BiE,EADc,EACdA,OAAQuL,EADM,EACNA,UACd,GAAKvL,EAAO+D,MAAMP,SAASlC,EAAEC,OAAO4O,WAElC,IAAK,IAAIhR,EAAI,EAAGA,EAAIa,EAAO+D,MAAMjG,OAAQqB,IACnCa,EAAO+D,MAAM5E,KAAOmC,EAAEC,OAAO4O,WAC/BnQ,EAAO+D,MAAM2G,OAAOvL,EAAG,QAJqBa,EAAO+D,MAAMlI,KAAKyF,EAAEC,OAAO4O,WAQ7E5E,EAAUvL,IAtBO,EA0BnBoQ,UAAY,SAAC9O,GACX,IADiB,EAEW,EAAKvF,MAA3BiE,EAFW,EAEXA,OAAQuL,EAFG,EAEHA,UACR8E,EAAW,EAAKrU,MAAhBqU,OACS,sBAAXA,GAAkCrQ,EAAO+D,MAH7B,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,MAAO,KAAK,KAAM,KAAM,KAAM,OAGpBsM,EAAS,qBAEvErQ,EAAO+D,MAAQ,GAAIsM,EAAS,qBAE9B,EAAK7T,SAAS,CAAE6T,WAChB9E,EAAUvL,IAnCO,EAuCnBsQ,aAAe,SAAChP,GAAO,IAEfiK,EAAc,EAAKxP,MAAnBwP,UACFgF,EAAQ,EAAKxU,MAAMiE,OACnBA,EAAO,EAAKhE,MAAMgE,OACtBuQ,EAAQzJ,UAAYxF,EAAEC,OAAOa,MAC7BpC,EAAO8G,UAAUxF,EAAEC,OAAOa,MACF,KAApBmO,EAAQzJ,YAAgByJ,EAAQzJ,UAAU,GAC9C,EAAKtK,SAAS,CAACwD,WACfuL,EAAUgF,IAhDO,EAoDnBC,aAAe,SAAClP,GAAO,IAEfiK,EAAc,EAAKxP,MAAnBwP,UACFgF,EAAQ,EAAKxU,MAAMiE,OACnBA,EAAO,EAAKhE,MAAMgE,OACtBuQ,EAAQxJ,UAAYzF,EAAEC,OAAOa,MAC7BpC,EAAO+G,UAAUzF,EAAEC,OAAOa,MACF,KAApBmO,EAAQxJ,YAAgBwJ,EAAQxJ,UAAU,KAC9C,EAAKvK,SAAS,CAACwD,WACfuL,EAAUgF,IA7DO,EAiEnBE,eAAiB,SAACrO,GAAW,IAAD,EACE,EAAKrG,MAA3BiE,EADoB,EACpBA,OAAQuL,EADY,EACZA,UACdvL,EAAOyG,SAAWsJ,GAAU3N,EAAM,IAClCpC,EAAO0G,SAAWqJ,GAAU3N,EAAM,IAClCmJ,EAAUvL,IArEO,EAyEnB0Q,iBAAmB,SAACtO,GAAW,IAAD,EACA,EAAKrG,MAA3BiE,EADsB,EACtBA,OAAQuL,EADc,EACdA,UACdvL,EAAO4G,WAAaoJ,GAAY5N,EAAM,IACtCpC,EAAO6G,WAAamJ,GAAY5N,EAAM,IACtCmJ,EAAUvL,IA7EO,EAiFnB2Q,eAAgB,WAAK,IACZC,EAAgB,EAAK7U,MAArB6U,YACF5Q,EAAW,EAAKhE,MAAhBgE,OACLA,EAAO+G,UAAU,GACjB/G,EAAO8G,UAAU,GACjB8J,IACA,EAAKpU,SAAS,CAACwD,YArFf,EAAKhE,MAAQ,CACXqU,OAAQ,oBACRrQ,OAAO,CACL8G,UAAU,GACVC,UAAU,KANG,E,sEA0FT,IAEJ8J,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAKC,EAAKC,EAAIC,EAAIrT,EAAIsT,EAAKC,EAF5C,OAIuCV,EAA1CtW,KAAKwB,MAAMiE,OAAO+D,MAAMP,SAAS,MAAc,UAAwB,QAC7BsN,EAA1CvW,KAAKwB,MAAMiE,OAAO+D,MAAMP,SAAS,MAAc,UAAwB,QAC7BwN,EAA1CzW,KAAKwB,MAAMiE,OAAO+D,MAAMP,SAAS,MAAc,UAAwB,QAC7ByN,EAA1C1W,KAAKwB,MAAMiE,OAAO+D,MAAMP,SAAS,MAAc,UAAwB,QAC7BuN,EAA1CxW,KAAKwB,MAAMiE,OAAO+D,MAAMP,SAAS,MAAc,UAAwB,QAC5B0N,EAA3C3W,KAAKwB,MAAMiE,OAAO+D,MAAMP,SAAS,OAAgB,UAAyB,QAC/B2N,EAA3C5W,KAAKwB,MAAMiE,OAAO+D,MAAMP,SAAS,OAAgB,UAAyB,QAChC4N,EAA1C7W,KAAKwB,MAAMiE,OAAO+D,MAAMP,SAAS,MAAc,UAAwB,QAC7B6N,EAA1C9W,KAAKwB,MAAMiE,OAAO+D,MAAMP,SAAS,MAAc,UAAwB,QAC5B8N,EAA3C/W,KAAKwB,MAAMiE,OAAO+D,MAAMP,SAAS,OAAgB,UAAyB,QAChCxF,EAA1CzD,KAAKwB,MAAMiE,OAAO+D,MAAMP,SAAS,MAAc,UAAwB,QAC7B+N,EAA1ChX,KAAKwB,MAAMiE,OAAO+D,MAAMP,SAAS,MAAiB,UAA2B,QAGjF,OACE,kBAAC2I,EAAA,EAAD,KACE,kBAAC,KAAD,CAAQ9O,MAAO,CAAC+Q,gBAAgB,OAAO1K,OAAO,OAAO8N,aAAa,MAAMC,UAAU,MAAMjQ,OAAO,QAASrE,QAAS5C,KAAKoW,eAAgB5W,UAAU,WAAhJ,qBAGA,wBAAIsD,MAAO,CAACoU,UAAU,SAAtB,WACA,kBAAC5Q,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKE,GAAG,KAAKC,GAAG,KAAKC,GAAG,KAAKC,GAAG,MAE9B,4BAAQ9D,MAAO,CAACqU,aAAa,OAAQvU,QAAS5C,KAAK6V,UAAWzD,KAAK,SAAS5S,UAAS,mBAAsBQ,KAAKyB,MAAMqU,SAGxH,kBAACvP,EAAA,EAAD,CAAKE,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIC,GAAG,KAC3B,4BAAQhE,QAAS5C,KAAK2V,aAAcvD,KAAK,SAAS5S,UAAS,kBAAa8W,IAAxE,OAEF,kBAAC/P,EAAA,EAAD,CAAKE,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIC,GAAG,KAC3B,4BAAQhE,QAAS5C,KAAK2V,aAAcvD,KAAK,SAAS5S,UAAS,kBAAa+W,IAAxE,OAEF,kBAAChQ,EAAA,EAAD,CAAKE,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIC,GAAG,KAC3B,4BAAQhE,QAAS5C,KAAK2V,aAAcvD,KAAK,SAAS5S,UAAS,kBAAagX,IAAxE,OAEF,kBAACjQ,EAAA,EAAD,CAAKE,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIC,GAAG,KAC3B,4BAAQhE,QAAS5C,KAAK2V,aAAcvD,KAAK,SAAS5S,UAAS,kBAAaiX,IAAxE,OAEF,kBAAClQ,EAAA,EAAD,CAAKE,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIC,GAAG,KAC3B,4BAAQhE,QAAS5C,KAAK2V,aAAcvD,KAAK,SAAS5S,UAAS,kBAAakX,IAAxE,OAEF,kBAACnQ,EAAA,EAAD,CAAKE,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIC,GAAG,KAC3B,4BAAQhE,QAAS5C,KAAK2V,aAAcvD,KAAK,SAAS5S,UAAS,kBAAamX,IAAxE,QAEF,kBAACpQ,EAAA,EAAD,CAAKE,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIC,GAAG,KAC3B,4BAAQhE,QAAS5C,KAAK2V,aAAcvD,KAAK,SAAS5S,UAAS,kBAAaqX,IAAxE,OAEF,kBAACtQ,EAAA,EAAD,CAAKE,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIC,GAAG,KAC3B,4BAAQhE,QAAS5C,KAAK2V,aAAcvD,KAAK,SAAS5S,UAAS,kBAAawX,IAAxE,OAEF,kBAACzQ,EAAA,EAAD,CAAKE,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIC,GAAG,KAC3B,4BAAQhE,QAAS5C,KAAK2V,aAAcvD,KAAK,SAAS5S,UAAS,kBAAaoX,IAAxE,QAEF,kBAACrQ,EAAA,EAAD,CAAKE,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIC,GAAG,KAC3B,4BAAQhE,QAAS5C,KAAK2V,aAAcvD,KAAK,SAAS5S,UAAS,kBAAasX,IAAxE,OAEF,kBAACvQ,EAAA,EAAD,CAAKE,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIC,GAAG,KAC3B,4BAAQhE,QAAS5C,KAAK2V,aAAcvD,KAAK,SAAS5S,UAAS,kBAAaiE,IAAxE,OAEF,kBAAC8C,EAAA,EAAD,CAAKE,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIC,GAAG,KAC3B,4BAAQhE,QAAS5C,KAAK2V,aAAcvD,KAAK,SAAS5S,UAAS,kBAAauX,IAAxE,SAGJ,kBAACzQ,EAAA,EAAD,KAEE,kBAACsL,EAAA,EAAKC,MAAN,CAAYI,GAAI1L,IAAKC,GAAG,IAAIC,GAAG,IAAIE,GAAG,KAAKmL,UAAU,sBACnD,kBAACF,EAAA,EAAKG,MAAN,oBACA,kBAACH,EAAA,EAAKI,QAAN,CAAclK,SAAU9H,KAAK+V,aAAc3D,KAAK,SAASpK,YAAY,OAAOH,MAAO7H,KAAKyB,MAAMgE,OAAO8G,YACrG,kBAACqF,EAAA,EAAKI,QAAQoF,SAAd,CAAuBhF,KAAK,YAE5B,kBAACR,EAAA,EAAKG,MAAN,kBACA,kBAACH,EAAA,EAAKI,QAAN,CAAclK,SAAU9H,KAAKiW,aAAc7D,KAAK,SAASpK,YAAY,KAAKH,MAAO7H,KAAKyB,MAAMgE,OAAO+G,YACnG,kBAACoF,EAAA,EAAKI,QAAQoF,SAAd,CAAuBhF,KAAK,aAG9B,kBAACR,EAAA,EAAKC,MAAN,CAAYI,GAAI1L,IAAKC,GAAG,IAAIC,GAAG,IAAIE,GAAG,KAAKmL,UAAU,sBAEnD,kBAACuC,GAAD,CAAuBrD,UAAWhR,KAAKwB,MAAMwP,UAAWvL,OAAQzF,KAAKwB,MAAMiE,OAAQsG,KAAK,QAAQqJ,OAAQ,SAACvN,GAAY,EAAKqO,eAAerO,MACzI,kBAACwM,GAAD,CAAuBrD,UAAWhR,KAAKwB,MAAMwP,UAAWvL,OAAQzF,KAAKwB,MAAMiE,OAAQsG,KAAK,UAAUqJ,OAAQ,SAACvN,GAAY,EAAKsO,iBAAiBtO,a,GA7K1GjI,IAAMC,WC7GhCwX,G,YACjB,WAAY7V,GAAQ,IAAD,8BACf,4CAAMA,KAQV0L,YAAc,WACV,EAAKjL,SAAS,CACVgL,OAAO,EACP8F,MAAM,IAEV,EAAKvR,MAAM8V,SAdI,EAiBnBC,cAAgB,WAAO,IAAD,EAC4B,EAAK/V,MAA3CyE,EADU,EACVA,WAAY7D,EADF,EACEA,WACZkH,GAFU,EACc4K,UACZ,EAAKzS,MAAjB6H,SACO,EAAK7H,MAAdsR,KACN9M,EAAW,EAAK+H,UAAUnG,MAAOzF,EAAWnC,GAAIqJ,EAAQkC,MAAMvL,IAE9D,EAAKgC,SAAS,CAAE8Q,MADT,KApBP,EAAKtR,MAAQ,CACTsR,MAAM,EACN9F,MAAO,EAAKzL,MAAMuR,KAClBzJ,QAAS,EAAK9H,MAAM8H,SAExBpI,QAAQC,IAAI,mBAPG,E,uFA0BO+P,GACtB,IAAIjB,EAAW,CACXhD,MAAOiE,EAAU6B,KACjBzJ,QAAS4H,EAAU5H,SAEvBtJ,KAAKiC,SAASgO,K,+BAER,IAIFuH,EACAC,EALC,SAEyCzX,KAAKwB,MAAnB0S,GAF3B,EAEGjO,WAFH,EAEe7D,WAFf,EAE2B8R,WAF3B,EAGsBlU,KAAKyB,MAAxBwL,EAHH,EAGGA,MAAO3D,EAHV,EAGUA,QAGf,QAAIA,IAAWmO,EAAcnO,EAAQkC,MAAMvL,GAAIuX,EAAYlO,EAAQC,MAE/D,kBAAC6H,EAAA,EAAD,CAAO2B,KAAM9F,EACT6F,KAAK,KACLwC,kBAAgB,gCAChBoC,UAAQ,GAER,kBAACtG,EAAA,EAAM8B,OAAP,CAAcC,aAAW,GACrB,kBAAC/B,EAAA,EAAMgC,MAAP,CAAanT,GAAG,iCAAhB,mBACqBD,KAAKwB,MAAM0S,UAAUuD,KAG9C,kBAACrG,EAAA,EAAMC,KAAP,CAAYvO,MAAO,CAAEmE,OAAQ,UACzB,iDAAuBuQ,GACvB,kBAAC7P,EAAA,EAAD,CAAYnI,UAAU,QAClB,kBAACoI,EAAA,EAAD,CACIH,IAAK,SAACC,GAAc,EAAKsG,UAAYtG,GACrCuK,GAAG,WAAW0F,KAAK,KACnBlG,aAAY,aAAQyC,EAAUuD,GAAlB,yDAA+EA,EAA/E,YAA8FnO,EAAQE,MAAtG,YAA+GF,EAAQxC,MAAvH,YAAgIwC,EAAQI,SACpJzB,aAAW,OACXC,mBAAiB,kBAGzB,kBAAC0P,GAAA,EAAD,CAAO9U,MAAO,CAAEC,MAAO,QAAUO,QAAQ,UAAUyP,KAAM/S,KAAKyB,MAAMsR,MAApE,gBACkBmB,EAAUuD,KAGhC,kBAACrG,EAAA,EAAMiC,OAAP,KACI,kBAACjL,EAAA,EAAD,CAAQxF,QAAS,WAAQ,EAAK2U,kBAA9B,QACA,kBAACnP,EAAA,EAAD,CAAQxF,QAAS5C,KAAKkN,aAAtB,gB,GArE0BtN,IAAMC,WCA/BgY,G,YACjB,WAAYrW,GAAQ,IAAD,8BACf,4CAAMA,KAOV0L,YAAc,WACV,EAAKjL,SAAS,CACVgL,OAAO,EACP8F,MAAM,IAEV,EAAKvR,MAAM8V,SAbI,EAgBnBC,cAAgB,WAAO,IAAD,EAC2B,EAAK/V,MAA1CyE,EADU,EACVA,WAAY7D,EADF,EACEA,WACZkH,GAFU,EACa4K,UACX,EAAKzS,MAAjB6H,SACO,EAAK7H,MAAdsR,KACN9M,EAAW,EAAK+H,UAAUnG,MAAOzF,EAAWnC,GAAIqJ,EAAQkC,MAAMvL,IAE9D,EAAKgC,SAAS,CAAE8Q,MADT,KAnBP,EAAKtR,MAAQ,CACTsR,MAAM,EACN9F,MAAO,EAAKzL,MAAMuR,KAClBzJ,QAAS,EAAK9H,MAAM8H,SALT,E,uFAyBO4H,GACtB,IAAIjB,EAAW,CACXhD,MAAOiE,EAAU6B,KACjBzJ,QAAS4H,EAAU5H,SAEvBtJ,KAAKiC,SAASgO,K,+BAER,IAGFuH,EACAC,EACAK,EALC,SACwC9X,KAAKwB,MAAnB0S,GAD1B,EACGjO,WADH,EACe7D,WADf,EAC0B8R,WAD1B,EAEsBlU,KAAKyB,MAAxBwL,EAFH,EAEGA,MAAO3D,EAFV,EAEUA,QAIf,QAAIA,IAAUwO,EAAUxO,EAAQ+B,cAAeoM,EAAYnO,EAAQkC,MAAMvL,GAAIuX,EAAUlO,EAAQC,MAE3F,kBAAC6H,EAAA,EAAD,CAAO2B,KAAM9F,EACT6F,KAAK,KACLwC,kBAAgB,gCAChBoC,UAAQ,GAER,kBAACtG,EAAA,EAAM8B,OAAP,CAAcC,aAAW,GACrB,kBAAC/B,EAAA,EAAMgC,MAAP,CAAanT,GAAG,iCAAhB,iBACmBD,KAAKwB,MAAM0S,UAAUuD,KAG5C,kBAACrG,EAAA,EAAMC,KAAP,CAAYvO,MAAO,CAACmE,OAAO,UACvB,iDAAuBuQ,GACvB,6CAAmBM,GACnB,kBAACnQ,EAAA,EAAD,CAAYnI,UAAU,QAClB,kBAACoI,EAAA,EAAD,CACKH,IAAK,SAACC,GAAW,EAAKsG,UAAUtG,GACjCuK,GAAG,WAAW0F,KAAK,KACnBlG,aAAY,aAAUyC,EAAUuD,GAApB,gDAAwEA,EAAxE,YAAuFnO,EAAQE,MAA/F,YAAwGF,EAAQxC,MAAhH,YAAyHwC,EAAQI,QAAjI,+CACZzB,aAAW,OACXC,mBAAiB,kBAGzB,kBAAC0P,GAAA,EAAD,CAAO9U,MAAO,CAAEC,MAAO,QAAUO,QAAQ,UAAUyP,KAAM/S,KAAKyB,MAAMsR,MAApE,iBACmBmB,EAAUuD,KAGjC,kBAACrG,EAAA,EAAMiC,OAAP,KACI,kBAACjL,EAAA,EAAD,CAAQxF,QAAS,WAAQ,EAAK2U,kBAA9B,QACA,kBAACnP,EAAA,EAAD,CAAQxF,QAAS5C,KAAKkN,aAAtB,gB,GArEwBtN,IAAMC,WCU7BkY,G,YACnB,WAAYvW,GAAQ,IAAD,8BACjB,4CAAMA,KAiBRwL,OAAS,SAACjG,GACR,EAAK9E,SAAS,CACZgL,OAAQ,EAAKxL,MAAMwL,MACnB5G,MAAOU,EAAEC,OAAOa,SArBD,EAwBnBmQ,YAAc,SAACjR,GACb,EAAK9E,SAAS,CACZgW,YAAa,EAAKxW,MAAMwW,WACxB5R,MAAOU,EAAEC,OAAOa,SA3BD,EA8BnBqF,YAAc,WACZ,EAAKjL,SAAS,CACZgL,OAAO,EACPgL,YAAY,KAjCG,EAsCnBC,cAAgB,SAACxQ,GACf,EAAKlG,MAAM0W,cAAcxQ,EAAQV,OAAOa,QAvCvB,EA0CnBsQ,YAAc,SAACzQ,GACbxG,QAAQC,IAAI,QACZD,QAAQC,IAAIuG,EAAQV,OAAOa,OAC3B,EAAKrG,MAAM2W,YAAYzQ,EAAQV,OAAOa,QA7CrB,EA+CnBuQ,UAAY,WACK,EAAK3W,MAAdsR,KAEN,EAAK9Q,SAAS,CAAE8Q,MADT,KAjDU,EAoDnBsF,UAAY,WACK,EAAK5W,MAAdsR,KAEN,EAAK9Q,SAAS,CAAE8Q,MADT,KApDP,EAAKtR,MAAQ,CACXwL,OAAO,EACPgL,YAAY,EACZ5R,MAAO,GACPyE,KAAM,EAAKtJ,MAAMsJ,KACjBiI,MAAM,GAPS,E,iFAWjBuF,YAAYtY,KAAKqY,UAAW,O,gDAEJnH,GACxB,IAAIpG,EAAOoG,EAAUpG,KACrB9K,KAAKiC,SAAS,CAAE6I,W,+BA+ChB,IALQ,IAAD,OACAzI,EAAMrC,KAAKwB,MAAXa,KAGHvB,EAAS,GACJ8D,EAAI,EAAGA,EAAI5E,KAAKyB,MAAMqJ,KAAKvH,OAAQqB,KACtC5E,KAAKyB,MAAMqJ,KAAKlG,GAAG2T,SAASvY,KAAKwB,MAAMiE,SACpCzF,KAAKwB,MAAMiE,OAAO+F,OAClBxL,KAAKyB,MAAMqJ,KAAKlG,GAAG4G,MAAMvL,KAAOD,KAAKwB,MAAMY,WAAWnC,KACtDD,KAAKwB,MAAMY,WAkBVpC,KAAKyB,MAAMqJ,KAAKlG,GAAG4G,MAAMvL,IAAMD,KAAKwB,MAAMY,WAAWnC,GAGvDa,EAAOQ,KAAK,kBAAC,GAAD,CAAagQ,IAAK1M,EAAGsP,UAAWlU,KAAKwB,MAAM0S,UAAWpD,KAAMlM,EAAG8O,YAAa1T,KAAKyB,MAAMqJ,KAAKlG,IACtG,kBAAC4T,GAAA,EAAD,KAEE,kBAACpQ,EAAA,EAAD,CAAQxF,QAAS5C,KAAKmY,YAAatQ,MAAOjD,EAAG9B,MAAO,CAAEC,MAAO,QAASkE,OAAQ,OAAQC,WAAY,OAAQgQ,UAAW,QAAU5T,QAAQ,WAAvI,QACA,kBAAC8E,EAAA,EAAD,CAAQxF,QAAS5C,KAAKkY,cAAerQ,MAAOjD,EAAG9B,MAAO,CAAEC,MAAO,QAASkE,OAAQ,OAAQC,WAAY,OAAQgQ,UAAW,QAAU5T,QAAQ,UAAzI,aAQJxC,EAAOQ,KAAK,kBAAC,GAAD,CAAagQ,IAAK1M,EAAIsP,UAAWlU,KAAKwB,MAAM0S,UAAWpD,KAAMlM,EAAG8O,YAAa1T,KAAKyB,MAAMqJ,KAAKlG,IACvG,kBAAC4T,GAAA,EAAD,KAGE,kBAACpQ,EAAA,EAAD,CAAQxF,QAAS5C,KAAKgY,YAAanQ,MAAOjD,EAAG9B,MAAO,CAAEC,MAAO,QAASkE,OAAQ,OAAQC,WAAY,OAAQgQ,UAAW,QAAU5T,QAAQ,WAAvI,SACA,kBAAC8E,EAAA,EAAD,CAAQxF,QAAS,SAACmE,GACX1E,EAAK4G,SAAS,EAAKxH,MAAMqJ,KAAK/D,EAAEC,OAAOa,OAAO5H,MACnD,EAAKuB,MAAMiX,UAAU,EAAKhX,MAAMqJ,KAAK/D,EAAEC,OAAOa,OAAO5H,IACrD,EAAKmY,cAELvQ,MAAOjD,EAAG9B,MAAO,CAAEC,MAAO,QAASkE,OAAQ,OAAQC,WAAY,OAAQgQ,UAAW,QAAU5T,QAAQ,WALtG,eAMA,kBAAC8E,EAAA,EAAD,CAAQxF,QAAS5C,KAAKgN,OAAQnF,MAAOjD,EAAG9B,MAAO,CAAEC,MAAO,QAASkE,OAAQ,OAAQC,WAAY,OAAQgQ,UAAW,QAAU5T,QAAQ,aAAlI,qBAxCNxC,EAAOQ,KAAK,kBAAC,GAAD,CAAagQ,IAAK1M,EAAGsP,UAAWlU,KAAKwB,MAAM0S,UAAWpD,KAAMlM,EAAG8O,YAAa1T,KAAKyB,MAAMqJ,KAAKlG,IACtG,kBAAC4T,GAAA,EAAD,KAEE,kBAACpQ,EAAA,EAAD,CAAQxF,QAAS,SAACmE,GACT1E,EAAK4G,SAAS,EAAKxH,MAAMqJ,KAAK/D,EAAEC,OAAOa,OAAO5H,MACnD,EAAKuB,MAAMiX,UAAU,EAAKhX,MAAMqJ,KAAK/D,EAAEC,OAAOa,OAAO5H,IACrD,EAAKmY,cAEPvQ,MAAOjD,EAAG9B,MAAO,CAAEC,MAAO,QAASkE,OAAQ,OAAQC,WAAY,OAAQgQ,UAAW,QAAU5T,QAAQ,WALtG,mBA6CV,OACE,6BACE,kBAACsU,GAAA,EAAD,CAAO3X,GAAG,iBAAiBqR,IAAI,QAAQhO,QAAQ,OAAOyP,KAAM/S,KAAKyB,MAAMsR,MAAvE,uCAGA,kBAAC,GAAD,CAAmBsD,YAAarW,KAAKwB,MAAM6U,YAAa5Q,OAAQzF,KAAKwB,MAAMiE,OAAQuL,UAAWhR,KAAKwB,MAAMwP,YACxGlQ,EACD,kBAAC,GAAD,CAAkBiS,KAAM/S,KAAKyB,MAAMwL,MAAO3D,QAAStJ,KAAKyB,MAAMqJ,KAAK9K,KAAKyB,MAAM4E,OAAQjE,WAAYpC,KAAKwB,MAAMY,WAAY6D,WAAYjG,KAAKwB,MAAMyE,WAAYqR,MAAOtX,KAAKkN,YAAagH,UAAWlU,KAAKwB,MAAM0S,YAC3M,kBAAC,GAAD,CAAgBnB,KAAM/S,KAAKyB,MAAMwW,WAAY3O,QAAStJ,KAAKyB,MAAMqJ,KAAK9K,KAAKyB,MAAM4E,OAAQjE,WAAYpC,KAAKwB,MAAMY,WAAY6D,WAAYjG,KAAKwB,MAAMyE,WAAYqR,MAAOtX,KAAKkN,YAAagH,UAAWlU,KAAKwB,MAAM0S,iB,GA/H7KtU,IAAMC,W,4BCClC6Y,IAHCC,EAAQ,KAASC,QAG/B,YACE,WAAYpX,GAAQ,IAAD,8BACjB,4CAAMA,KA2CRqP,YAAc,SAACvH,EAASuP,GAAY,IAAD,EACN,EAAKpX,MAA1BqP,EAD2B,EAC3BA,KAAMgI,EADqB,EACrBA,WAIZ,GAHA5X,QAAQC,IAAI,UAAY0X,GACxB3X,QAAQC,IAAI,WACZD,QAAQC,IAAImI,IACI,IAAZuP,EAAe,CAEjB,IACME,EAAc,IADJC,KAAMC,OAAOC,OAAO,YAGpCH,EAAYI,IAAI,QAAS7P,EAAQC,OACjCwP,EAAYI,IAAI,QAAS7P,EAAQE,OACjCuP,EAAYI,IAAI,SAAUhL,OAAO7E,EAAQG,SACzCsP,EAAYI,IAAI,QAAS7P,EAAQxC,OACjCiS,EAAYI,IAAI,UAAW7P,EAAQI,SACnCqP,EAAYI,IAAI,MAAO7P,EAAQK,KAC/BoP,EAAYI,IAAI,SAAU7P,EAAQM,QAClCmP,EAAYI,IAAI,WAAY7P,EAAQO,UACpCkP,EAAYI,IAAI,eAAgB7P,EAAQQ,cACxCiP,EAAYI,IAAI,oBAAqB7P,EAAQS,mBAC7CgP,EAAYI,IAAI,MAAO7P,EAAQU,KAC/B+O,EAAYI,IAAI,oBAAqB7P,EAAQW,mBAC7C8O,EAAYI,IAAI,QAAShL,OAAO7E,EAAQY,QACxC6O,EAAYI,IAAI,QAAShL,OAAO7E,EAAQa,QACxC4O,EAAYI,IAAI,aAAchL,OAAO7E,EAAQc,aAC7C2O,EAAYI,IAAI,cAAehL,OAAO7E,EAAQe,cAC9C0O,EAAYI,IAAI,iBAAkBhL,OAAO7E,EAAQiB,iBACjDwO,EAAYI,IAAI,iBAAkBhL,OAAO7E,EAAQmB,iBACjDsO,EAAYI,IAAI,aAAchL,OAAO7E,EAAQoB,aAC7CqO,EAAYI,IAAI,YAAahL,OAAO7E,EAAQqB,YAC5CoO,EAAYI,IAAI,SAAU7P,EAAQsB,QAClCmO,EAAYI,IAAI,QAAS7P,EAAQuB,OACjCkO,EAAYI,IAAI,OAAQhL,OAAO7E,EAAQwB,OACvCiO,EAAYI,IAAI,WAAYhL,OAAO7E,EAAQ8B,WAC3C2N,EAAYI,IAAI,gBAAiBhL,OAAO7E,EAAQ+B,gBAChD0N,EAAYI,IAAI,QAAS7P,EAAQgC,OAE7BhC,EAAQmC,cAAcsN,EAAYI,IAAI,eAAgB7P,EAAQmC,cAClEsN,EAAYI,IAAI,UAAWhL,OAAO7E,EAAQoC,UAC1CqN,EAAYI,IAAI,UAAWhL,OAAO7E,EAAQqC,UAC1CoN,EAAYI,IAAI,UAAWhL,OAAO7E,EAAQsC,UAC1CmN,EAAYI,IAAI,QAASH,KAAM7U,KAAKiV,WACpClY,QAAQC,IAAI,6BACZD,QAAQC,IAAImI,EAAQuC,KAAMvC,EAAQ2C,MAClC/K,QAAQC,WAAWmI,EAAQuC,KAAKC,MAC5BxC,EAAQuC,MAAQvC,EAAQuC,KAAKC,MAAMiN,EAAYI,IAAI,OAAQ,IAAIH,KAAMK,KAAK/P,EAAQuC,KAAKE,KAAMzC,EAAQuC,KAAKC,OAC1GxC,EAAQ2C,MAAQ3C,EAAQ2C,KAAKH,MAAMiN,EAAYI,IAAI,OAAQ,IAAIH,KAAMK,KAAK/P,EAAQ2C,KAAKF,KAAMzC,EAAQ2C,KAAKH,OAC9G5K,QAAQC,IAAI,+BACZD,QAAQC,IAAI4X,GACZA,EAAYO,OAAOC,MACjB,SAACzY,GACCI,QAAQC,IAAI,kBAAmBL,GAC/BgY,EAAaA,EAAWU,OAAO,CAAC,IAAInQ,EAASvI,KAC7CI,QAAQC,IAAI2X,GACZhI,GAAQ,EACR,EAAK7O,SAAS,CAAE6O,OAAMgI,kBAExB,SAACW,GACCvY,QAAQuY,MAAM,iCAAkCA,UAIjD,CACH,IAAMC,EAAUV,KAAMC,OAAOC,OAAO,WACtB,IAAIF,KAAMW,MAAMD,GAExBvZ,IAAImJ,EAAQrJ,IAAIsZ,MAAK,SAACK,GAC1BA,EAAOT,IAAI,QAAS7P,EAAQC,OAC5BqQ,EAAOT,IAAI,QAAS7P,EAAQE,OAC5BoQ,EAAOT,IAAI,SAAUhL,OAAO7E,EAAQG,SACpCmQ,EAAOT,IAAI,QAAS7P,EAAQxC,OAC5B8S,EAAOT,IAAI,UAAW7P,EAAQI,SAC9BkQ,EAAOT,IAAI,MAAO7P,EAAQK,KAC1BiQ,EAAOT,IAAI,SAAU7P,EAAQM,QAC7BgQ,EAAOT,IAAI,WAAY7P,EAAQO,UAC/B+P,EAAOT,IAAI,eAAgB7P,EAAQQ,cACnC8P,EAAOT,IAAI,oBAAqB7P,EAAQS,mBACxC6P,EAAOT,IAAI,MAAO7P,EAAQU,KAC1B4P,EAAOT,IAAI,oBAAqB7P,EAAQW,mBACxC2P,EAAOT,IAAI,QAAShL,OAAO7E,EAAQY,QACnC0P,EAAOT,IAAI,QAAShL,OAAO7E,EAAQa,QACnCyP,EAAOT,IAAI,aAAchL,OAAO7E,EAAQc,aACxCwP,EAAOT,IAAI,cAAehL,OAAO7E,EAAQe,cACzCuP,EAAOT,IAAI,iBAAkBhL,OAAO7E,EAAQiB,iBAC5CqP,EAAOT,IAAI,iBAAkBhL,OAAO7E,EAAQmB,iBAC5CmP,EAAOT,IAAI,aAAchL,OAAO7E,EAAQoB,aACxCkP,EAAOT,IAAI,YAAahL,OAAO7E,EAAQqB,YACvCiP,EAAOT,IAAI,SAAU7P,EAAQsB,QAC7BgP,EAAOT,IAAI,QAAS7P,EAAQuB,OAC5B+O,EAAOT,IAAI,OAAQhL,OAAO7E,EAAQwB,OAClC8O,EAAOT,IAAI,WAAYhL,OAAO7E,EAAQ8B,WACtCwO,EAAOT,IAAI,gBAAiBhL,OAAO7E,EAAQ+B,gBAC3CuO,EAAOT,IAAI,QAAS7P,EAAQgC,OAE5BsO,EAAOT,IAAI,eAAgB7P,EAAQmC,cACnCmO,EAAOT,IAAI,UAAWhL,OAAO7E,EAAQoC,UACrCkO,EAAOT,IAAI,UAAWhL,OAAO7E,EAAQqC,UACrCiO,EAAOT,IAAI,UAAWhL,OAAO7E,EAAQsC,UACrCgO,EAAOT,IAAI,QAASH,KAAM7U,KAAKiV,WAC/BlY,QAAQC,IAAI,2BACZD,QAAQC,IAAImI,EAAQuC,MACfvC,EAAQuC,KAAKC,KACRxC,EAAQuC,KAAKC,KAAb,MACH8N,EAAOT,IAAI,OAAQ7P,EAAQuC,KAAKC,MADA8N,EAAOT,IAAI,OAAQ,IAAIH,KAAMK,KAAK/P,EAAQuC,KAAKE,KAAMzC,EAAQuC,KAAKC,OADhF8N,EAAOT,IAAI,OAAO,MAGtC7P,EAAQ2C,KAAKH,KACRxC,EAAQ2C,KAAKH,KAAb,MACH8N,EAAOT,IAAI,OAAQ7P,EAAQ2C,KAAKH,MADA8N,EAAOT,IAAI,OAAQ,IAAIH,KAAMK,KAAK/P,EAAQ2C,KAAKF,KAAMzC,EAAQ2C,KAAKH,OADhF8N,EAAOT,IAAI,OAAO,MAG3CS,EAAON,OAAOC,MAAK,SAACtO,GAGlB/J,QAAQC,IAAI,kBAAmB8J,GAChC6N,EAAW3I,OAAO0I,EAAQ,EAAG,IAAIxP,EAAS4B,IACzC/J,QAAQC,IAAI2X,GACZhI,GAAQ,EACR,EAAK7O,SAAS,CAAE6O,OAAMgI,kBACrB,SAACW,GAEFvY,QAAQuY,MAAM,+BAAgCA,WAjKnC,EAyKnBvB,cAAgB,SAAC7R,GAAW,IACpByS,EAAe,EAAKrX,MAApBqX,WACF7Y,EAAK6Y,EAAWzS,GAAOpG,GACrByZ,EAAUV,KAAMC,OAAOC,OAAO,WACtB,IAAIF,KAAMW,MAAMD,GAExBvZ,IAAIF,GAAIsZ,MAAK,SAACK,GAClBA,EAAOC,UAAUN,MAAK,SAACtO,GAErB,IAAIiF,EAAS4I,EAAW3I,OAAO9J,EAAO,GACtC,EAAKpE,SAASiO,GACdhP,QAAQC,IAAI,kBAAmB8J,MAC9B,SAACwO,GAEFvY,QAAQuY,MAAM,+BAAgCA,UAvLjC,EA6LnBzI,UAAY,SAACvL,GACX,EAAKxD,SAAS,CAAEwD,YA9LC,EAgMnB0S,YAAc,SAAC9R,GACb,IAAI4J,EAAW,EAAKxO,MACpBwO,EAASa,KAAOzK,EAChB,EAAKpE,SAASgO,IAnMG,EAqMnBkB,WAAa,WAIX,EAAKlP,SAHU,CACb6O,MAAO,KAvMQ,EA2MnBuF,YAAc,WAaZ,EAAKrF,UAZQ,CACXxH,MAAO,GACP0C,SAAU,IACVC,SAAU,KACVE,WAAY,KACZC,WAAY,KACZC,UAAW,GACXC,UAAW,GACXhB,OAAO,EACPqJ,oBAAoB,EACpBD,kBAAkB,KApNpB,EAAKnT,MAAQ,CACXqX,WAAY,GACZvK,OAAQ,GACRuL,WAAW,EACXrU,OAAQ,CACN+D,MAAO,GACP0C,SAAU,IACVC,SAAU,KACVE,WAAY,KACZC,WAAY,KACZC,UAAW,EACXC,UAAW,IACXhB,OAAO,EACPoJ,kBAAkB,EAClBC,oBAAoB,GAEtB/D,MAAO,GAlBQ,EADrB,iFAsBuB,IAKfiJ,EALc,OAEdD,GAAY,EACZhB,EAAa,GACbvK,EAASvD,EAEP0O,EAAUV,KAAMC,OAAOC,OAAO,WACtB,IAAIF,KAAMW,MAAMD,GACxBM,OAAOT,MAAK,SAACU,GAGjBA,EAAc7Y,SAAQ,SAACkI,GACrByQ,EAAa,IAAI1Q,EAASC,GAC1BwP,EAAaA,EAAWU,OAAO,CAACO,OAElCD,GAAY,EACZ,EAAK7X,SAAS,CAAE6W,aAAYgB,YAAWvL,cACtC,SAACkL,GAEFvY,QAAQuY,MAAM,+BAAgCA,QAzCpD,+BA2NY,IAAD,EAC2CzZ,KAAKwB,MAA/CY,EADD,EACCA,WAAYP,EADb,EACaA,aAAcjB,EAD3B,EAC2BA,YAClC,OAAIZ,KAAKyB,MAAMqY,WAIb,kBAAC5V,EAAA,EAAD,KACE,kBAAC,EAAD,CAAe7B,KAAMrC,KAAKwB,MAAMa,KAAOzB,YAAaA,EAAawB,WAAYA,EAAYP,aAAcA,IACvG,kBAAC,GAAD,CAAY4D,OAAQzF,KAAKyB,MAAMgE,OAAQuL,UAAWhR,KAAKgR,UAAW5O,WAAYA,EAAYyO,YAAa7Q,KAAK6Q,YAAaM,WAAYnR,KAAKmR,WAAY+I,QAASla,KAAKka,QAAS3L,OAAQvO,KAAKyB,MAAM8M,OAAQuC,KAAM9Q,KAAKyB,MAAMqP,KAAMG,SAAUjR,KAAKyB,MAAMqX,aAIpP,kBAAC,GAAD,CAAazW,KAAMrC,KAAKwB,MAAMa,KAAQoW,UAAWzY,KAAKwB,MAAMiX,UAAYxS,WAAYjG,KAAKwB,MAAMyE,WAAYoQ,YAAarW,KAAKqW,YAAa5Q,OAAQzF,KAAKyB,MAAMgE,OAAQuL,UAAWhR,KAAKgR,UAAWkD,UAAWlU,KAAKwB,MAAM0S,UAAW9R,WAAYA,EAAY8V,cAAelY,KAAKkY,cAAeC,YAAanY,KAAKmY,YAAarN,KAAM9K,KAAKyB,MAAMqX,kBAvOpV,GAA4BlZ,IAAMC,YC+EnBsa,I,mBArFX,WAAY3Y,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,CACT2Y,cAAc,EACdC,cAAc,GAGlB,EAAKC,WAAa1a,IAAM2a,YACxB,EAAKC,SAAW5a,IAAM2a,YAEtB,EAAKE,MAAQ,EAAKA,MAAM7Y,KAAX,gBAVE,E,qEAaV,IAAD,OAEJoX,KAAM7U,KAAKuW,MAAM1a,KAAKsa,WAAWlB,QAAQvR,MAAM7H,KAAKwa,SAASpB,QAAQvR,OAAO0R,MAAK,SAAC5Y,GAE7EO,QAAQC,IAAI,iBAAkBR,GAE/B,IAAMga,EAAQ,IAAI3B,KAAM7U,KACV,IAAI6U,KAAMW,MAAMgB,GAGxBxa,IAAIQ,EAAKV,IAAIsZ,MAAK,SAAC5Y,GAErBA,EAAKwY,IAAI,WAAW,GACpBxY,EAAK2Y,OAAOC,MAAK,SAACtO,GAClB/J,QAAQC,IAAI,eAAgB8J,GACxB,EAAKzJ,MAAMoZ,YAAY,IAAIzW,EAAKxD,IAChC,EAAKsB,SAAS,CAACoY,cAAc,OAGlCQ,OAAM,SAACpB,GACVvY,QAAQuY,MAAM,4BAA6BA,YAI5CoB,OAAM,SAAApB,GAELvY,QAAQuY,MAAM,8BAA+BA,GAC7C,EAAKxX,SAAS,CAACmY,cAAc,S,+BAK3B,IAAD,EACgCpa,KAAKwB,MAAlCY,EADH,EACGA,WAAYP,EADf,EACeA,aACpB,OAAI7B,KAAKyB,MAAM4Y,aACJ,kBAAC,IAAD,CAAUja,GAAG,UAIpB,kBAAC8D,EAAA,EAAD,KACA,kBAAC,EAAD,CAAe7B,KAAMrC,KAAKwB,MAAMa,KAAQzB,YAAaZ,KAAKyB,MAAMb,YAAawB,WAAYA,EAAYP,aAAcA,IACnH,yBAAKrC,UAAU,SACX,iDACA,iCAAM,uBAAGiD,KAAK,YAAR,sBACN,kBAACmV,GAAA,EAAD,CAAOtU,QAAQ,SAASyP,KAAM/S,KAAKyB,MAAM2Y,cAAzC,8BAGA,kBAACxI,EAAA,EAAD,KACI,kBAACA,EAAA,EAAKC,MAAN,CAAYC,UAAU,kBAClB,kBAACF,EAAA,EAAKG,MAAN,sBACA,kBAACH,EAAA,EAAKI,QAAN,CAEAvK,IAAKzH,KAAKsa,WAAYlI,KAAK,QAAQpK,YAAY,gBAC/C,kBAAC4J,EAAA,EAAKJ,KAAN,CAAWhS,UAAU,cAArB,mDAIJ,kBAACoS,EAAA,EAAKC,MAAN,CAAYC,UAAU,qBAClB,kBAACF,EAAA,EAAKG,MAAN,iBACA,kBAACH,EAAA,EAAKI,QAAN,CAEEvK,IAAKzH,KAAKwa,SAAWpI,KAAK,WAAWpK,YAAY,cAEvD,kBAACI,EAAA,EAAD,CAAQ9E,QAAQ,UAAU8O,KAAK,SAAS0I,OAAK,EAAClY,QAAS5C,KAAKya,OAA5D,gB,GA7EI7a,IAAMC,YCiHfkb,G,YAhHX,WAAYvZ,GAAQ,IAAD,8BACf,4CAAMA,KAcVwZ,OAAS,WAAO,IACbC,EAAO,EAAKxZ,MAAZwZ,MACOta,EAAO,IAAIqY,KAAM7U,KACvBxD,EAAKwY,IAAI,WAAY,EAAK+B,UAAU9B,QAAQvR,OAC5ClH,EAAKwY,IAAI,QAAS,EAAKmB,WAAWlB,QAAQvR,OAC1ClH,EAAKwY,IAAI,QAAS,EAAKgC,WAAW/B,QAAQvR,OAC1ClH,EAAKwY,IAAI,QAAS,EAAKiC,WAAWhC,QAAQvR,OAC1ClH,EAAKwY,IAAI,WAAY,EAAKqB,SAASpB,QAAQvR,OAC3ClH,EAAKwY,IAAI,WAAW,GAChB8B,GAAOta,EAAKwY,IAAI,MAAO,IAAIH,KAAMK,KAAK4B,EAAK,MAAWA,EAAMnP,OAChEnL,EAAK0a,SAAS9B,MAAK,SAAC5Y,GAEhBO,QAAQC,IAAI,iBAAkBR,GAC9B,EAAKa,MAAMoZ,YAAY,IAAIzW,EAAKxD,IAChC,EAAKsB,SAAS,CAAEoY,cAAc,OAE/BQ,OAAM,SAAApB,GAELvY,QAAQuY,MAAM,8BAA+BA,GAC7C,EAAKxX,SAAS,CAAEmY,cAAc,QAlCnB,EAsCnBhK,UAAU,SAACC,GAEP,IAAI4K,EAAQ,GACZA,EAAMnP,KAAOuE,EAAGrJ,OAAOuJ,MAAM,GACzB0K,EAAMnP,KACNmP,EAAMzK,IAAMA,IAAIC,gBAAgBwK,EAAMnP,MAEtCmP,EAAMzK,IAAM,GAEhB,EAAKvO,SAAS,CAAEgZ,WA7ChB,EAAKxZ,MAAQ,CACT2Y,cAAc,EACdC,cAAc,EACdY,MAAO,IAGX,EAAKX,WAAa1a,IAAM2a,YACxB,EAAKC,SAAW5a,IAAM2a,YACtB,EAAKW,UAAYtb,IAAM2a,YACvB,EAAKY,WAAavb,IAAM2a,YACxB,EAAKa,WAAaxb,IAAM2a,YAZT,E,sEAiDT,IAAD,EACgCva,KAAKwB,MAAlCY,EADH,EACGA,WAAYP,EADf,EACeA,aACZoZ,EAAUjb,KAAKyB,MAAfwZ,MACR,OAAIjb,KAAKyB,MAAM4Y,aACJ,kBAAC,IAAD,CAAUja,GAAG,UAIpB,kBAAC8D,EAAA,EAAD,KACI,kBAAC,EAAD,CAAe7B,KAAMrC,KAAKwB,MAAMa,KAAOzB,YAAaZ,KAAKyB,MAAMb,YAAawB,WAAYA,EAAYP,aAAcA,IAClH,yBAAKrC,UAAU,SACX,kDACA,iCAAM,uBAAGiD,KAAK,WAAR,wCACN,kBAACmV,GAAA,EAAD,CAAOtU,QAAQ,SAASyP,KAAM/S,KAAKyB,MAAM2Y,cAAzC,uDAGA,kBAACxI,EAAA,EAAD,KACI,kBAACA,EAAA,EAAKC,MAAN,CAAYC,UAAU,qBAClB,kBAACF,EAAA,EAAKG,MAAN,kBACA,kBAACH,EAAA,EAAKI,QAAN,CAAcvK,IAAKzH,KAAKkb,UAAW9I,KAAK,OAAOpK,YAAY,mBAC3D,kBAAC4J,EAAA,EAAKJ,KAAN,CAAWhS,UAAU,gBAGzB,kBAACoS,EAAA,EAAKC,MAAN,CAAYC,UAAU,kBAClB,kBAACF,EAAA,EAAKG,MAAN,sBACA,kBAACH,EAAA,EAAKI,QAAN,CAAcvK,IAAKzH,KAAKsa,WAAYlI,KAAK,QAAQpK,YAAY,gBAC7D,kBAAC4J,EAAA,EAAKJ,KAAN,CAAWhS,UAAU,cAArB,mDAIJ,kBAACoS,EAAA,EAAKC,MAAN,CAAYC,UAAU,qBAClB,kBAACF,EAAA,EAAKG,MAAN,iBACA,kBAACH,EAAA,EAAKI,QAAN,CAAcvK,IAAKzH,KAAKwa,SAAUpI,KAAK,WAAWpK,YAAY,cAElE,kBAAC4J,EAAA,EAAKC,MAAN,CAAYC,UAAU,kBAClB,kBAACF,EAAA,EAAKG,MAAN,mBACA,kBAACH,EAAA,EAAKI,QAAN,CAAcvK,IAAKzH,KAAKob,WAAYhJ,KAAK,OAAOpK,YAAY,qBAC5D,kBAAC4J,EAAA,EAAKJ,KAAN,CAAWhS,UAAU,gBAGzB,kBAACoS,EAAA,EAAKC,MAAN,CAAYC,UAAU,kBAClB,kBAACF,EAAA,EAAKG,MAAN,kBACA,kBAACH,EAAA,EAAKI,QAAN,CAAcvK,IAAKzH,KAAKmb,WAAY/I,KAAK,OAAOpK,YAAY,oBAC5D,kBAAC4J,EAAA,EAAKJ,KAAN,CAAWhS,UAAU,gBAGzB,kBAACoS,EAAA,EAAKC,MAAN,CAAYC,UAAU,aAClB,kBAACF,EAAA,EAAKG,MAAN,6BADJ,QAKI,kBAACH,EAAA,EAAKI,QAAN,CAAcO,UAAQ,IAAIH,KAAK,OAAOpK,YAAY,oBAAoBwK,OAAO,UAAU1K,SAAU9H,KAAKoQ,YACtG,kBAACvN,EAAA,EAAD,CAAOpD,IAAKwb,EAAMzK,IAAK1N,MAAO,CAAEC,MAAO,OAAS0P,OAAK,KAEzD,kBAACrK,EAAA,EAAD,CAAQ9E,QAAQ,UAAU8O,KAAK,SAAS0I,OAAK,EAAClY,QAAS5C,KAAKgb,QAA5D,iB,GAxGCpb,IAAMC,W,6DCDVyb,G,2MACjB7Z,MAAQ,CACJ8Z,IAAK,GACLC,OAAQ,GACRC,MAAO,GACP1P,KAAM,GACN2P,OAAQ,I,EAGZC,iBAAmB,SAAC5U,GAChB,EAAK9E,SAAS,CAAEwZ,MAAO1U,EAAEC,OAAO+E,Q,EAGpC6P,kBAAoB,SAAC7U,GAAO,IAAD,EACCA,EAAEC,OAAlB+E,EADe,EACfA,KAAMlE,EADS,EACTA,MAEd,EAAK5F,SAAL,gBAAiB8J,EAAOlE,K,wEAIxB,OAEA,kBAACgU,GAAA,EAAD,CAAWpJ,OAAK,GACR,kBAACvO,EAAA,EAAD,KACI,uCACA,wEAIJ,kBAAC,KAAD,CAAO1E,UAAU,cACb+b,IAAKvb,KAAKyB,MAAM8Z,IAChBC,OAAQxb,KAAKyB,MAAM+Z,OACnBC,MAAOzb,KAAKyB,MAAMga,MAClB1P,KAAM/L,KAAKyB,MAAMsK,KACjB2P,OAAQ1b,KAAKyB,MAAMia,SAEvB,yBAAK5Y,MAAO,CAAEC,MAAO,QAASmU,UAAW,QAAU1X,UAAU,iCACzD,kBAACmI,EAAA,EAAD,CAAYnI,UAAU,cAClB,kBAACoI,EAAA,EAAD,CACIwK,KAAK,MACLrG,KAAK,SACL/D,YAAY,cACZC,aAAW,cACXC,mBAAiB,eACjBJ,SAAU9H,KAAK4b,kBACfE,QAAS9b,KAAK2b,oBAGtB,kBAAChU,EAAA,EAAD,CAAYnI,UAAU,aAClB,kBAACoI,EAAA,EAAD,CACIwK,KAAK,SACLrG,KAAK,SACL/D,YAAY,OACZC,aAAW,OACXC,mBAAiB,eACjBJ,SAAU9H,KAAK4b,kBACfE,QAAS9b,KAAK2b,oBAGtB,kBAAChU,EAAA,EAAD,CAAYnI,UAAU,aAClB,kBAACoI,EAAA,EAAD,CACIwK,KAAK,SACLrG,KAAK,MACL/D,YAAY,MACZC,aAAW,MACXC,mBAAiB,eACjBJ,SAAU9H,KAAK4b,kBACfE,QAAS9b,KAAK2b,oBAGtB,kBAAChU,EAAA,EAAD,CAAYnI,UAAU,cAClB,kBAACoI,EAAA,EAAD,CACIwK,KAAK,OACLrG,KAAK,OACL/D,YAAY,OACZC,aAAW,OACXC,mBAAiB,eACjBJ,SAAU9H,KAAK4b,kBACfE,QAAS9b,KAAK2b,2B,GA9ED/b,IAAMC,WC6G5Bkc,G,YAtGf,WAAYva,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,CACTua,eAAgB,IAHL,E,iFAMC,IAAD,OACPA,EAAe,GACZ3Z,EAAMrC,KAAKwB,MAAXa,KACDqX,EAAUV,KAAMC,OAAOC,OAAO,WACtB,IAAIF,KAAMW,MAAMD,GAExBM,OAAOT,MAAK,SAAC0C,GAGfA,EAAQ7a,SAAQ,SAAAkI,GACRjH,EAAK4G,SAASK,EAAQrJ,KAAM+b,EAAe1a,KAAK,IAAI+H,EAASC,OAErEpI,QAAQC,IAAI,gBAAiB8a,GAC7B,EAAKha,SAAS,CAAC+Z,sBAChB,SAACvC,GAEAvY,QAAQuY,MAAM,+BAAgCA,Q,+BAG5C,IAKFhQ,EAAO0B,EAAM+Q,EAAUC,EALtB,SAC4Enc,KAAKwB,MAA9EY,EADH,EACGA,WAAYP,EADf,EACeA,aAAcjB,EAD7B,EAC6BA,YAAayB,EAD1C,EAC0CA,KAAK6R,EAD/C,EAC+CA,UAAUkI,EADzD,EACyDA,eACtDJ,EAAmBhc,KAAKyB,MAAxBua,eACJ3V,GAAO,EACPgW,EAAW,GAEXC,EAAW,EACXC,EAAS,EA4Cb,OA3CAJ,EAAM,EACDH,EAAezY,QAEpByY,EAAe5a,SAAQ,SAAAkI,GACnBjD,IACAoD,EAAOH,EAAQG,OACf0B,EAAM7B,EAAQ+B,cAEd8Q,GADAD,EAAUzS,EAAO0B,GAEjBmR,GAAY7S,KACI8S,EAASJ,EAAMG,GAC/BD,EAAW/a,KACV,wBAAIgQ,IAAKjL,GACN,4BAAKA,GACL,4BAAK6N,EAAU5K,EAAQkC,MAAMvL,KAC7B,sCAAQqJ,EAAQC,MAAhB,YAAyBD,EAAQE,MAAjC,YAA0CF,EAAQxC,MAAlD,YAA2DwC,EAAQI,UACnE,4BAAKD,GACL,4BAAK0B,EAAM8I,QAAQ,IACnB,4BAAKiI,EAAUjI,QAAQ,IACvB,4BAAI,yBAAKzU,UAAU,gBACXoD,QAAS,WAEDoZ,EAAe7L,OAAO9J,EAAM,GAC5B,EAAKpE,SAAS,CAAC+Z,mBACfI,EAAe9S,EAAQrJ,KAG/B6C,MAAO,CAACC,MAAM,QACdtD,IAAK+c,aAIrBH,EAAW/a,KACP,4BACG,6BACA,6BACA,6BACA,wBAAIwB,MAAO,CAAC2Z,WAAW,SAAUH,EAAWrI,QAAQ,IACpD,4BAAKsI,EAAStI,QAAQ,IACtB,wBAAInR,MAAO,CAAC2Z,WAAW,SAAUN,EAAMlI,QAAQ,IAC/C,gCAvCqBoI,EAAW/a,KAAK,wBAAIgQ,IAAKjL,GAAO,4BAAI,qDA2C5D,kBAACnC,EAAA,EAAD,KACI,kBAAC,EAAD,CAAe7B,KAAMA,EAAMzB,YAAaA,EAAawB,WAAYA,EAAYP,aAAcA,IAC3F,6CACA,kBAAC6a,GAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAAC/J,KAAK,MAC/B,+BACI,4BACI,iCACA,qCACA,2CACA,sCACA,qCACA,qCACA,wCAGR,+BACKuJ,IAIT,kBAAC,GAAD,W,GAlGOzc,IAAMC,WCJZid,G,YACjB,WAAYtb,GAAQ,qEACVA,I,sEAGA,IAAD,EAC6CxB,KAAKwB,MAA/CY,EADH,EACGA,WAAYP,EADf,EACeA,aAAcjB,EAD7B,EAC6BA,YAClC,OACI,kBAACsD,EAAA,EAAD,KACI,kBAAC,EAAD,CAAe7B,KAAMrC,KAAKwB,MAAMa,KAAMzB,YAAaA,EAAawB,WAAYA,EAAYP,aAAcA,IACtG,kBAACga,GAAA,EAAD,CAAWpJ,OAAK,GACZ,kBAACvO,EAAA,EAAD,KACI,qCACA,+HAIA,wCACA,kBAACgF,EAAA,EAAD,KACI,kBAACA,EAAA,EAAU3J,KAAX,CAAgB+D,QAAQ,WAAxB,UACA,kBAAC4F,EAAA,EAAU3J,KAAX,sDACA,kBAAC2J,EAAA,EAAU3J,KAAX,0CACA,kBAAC2J,EAAA,EAAU3J,KAAX,uEACA,kBAAC2J,EAAA,EAAU3J,KAAX,yEACA,kBAAC2J,EAAA,EAAU3J,KAAX,kCACA,kBAAC2J,EAAA,EAAU3J,KAAX,4DACA,kBAAC2J,EAAA,EAAU3J,KAAX,0DACA,kBAAC2J,EAAA,EAAU3J,KAAX,sEACA,kBAAC2J,EAAA,EAAU3J,KAAX,0EACA,kBAAC2J,EAAA,EAAU3J,KAAX,+FACA,kBAAC2J,EAAA,EAAU3J,KAAX,gEACA,kBAAC2J,EAAA,EAAU3J,KAAX,0BACA,kBAAC2J,EAAA,EAAU3J,KAAX,qDACA,kBAAC2J,EAAA,EAAU3J,KAAX,CAAgB+D,QAAQ,WAAxB,YACA,kBAAC4F,EAAA,EAAU3J,KAAX,yEACA,kBAAC2J,EAAA,EAAU3J,KAAX,+CACA,kBAAC2J,EAAA,EAAU3J,KAAX,sDACA,kBAAC2J,EAAA,EAAU3J,KAAX,2DAAmE,yBAAKuD,MAAO,CAACC,MAAM,QAAStD,IAAKsd,MAApG,YAAmI,yBAAKja,MAAO,CAACC,MAAM,QAAUtD,IAAKud,OACrK,kBAAC9T,EAAA,EAAU3J,KAAX,gEACA,kBAAC2J,EAAA,EAAU3J,KAAX,mEACA,kBAAC2J,EAAA,EAAU3J,KAAX,oCACA,kBAAC2J,EAAA,EAAU3J,KAAX,CAAgB+D,QAAQ,WAAxB,OAAsC,yBAAMR,MAAO,CAACC,MAAM,QAAStD,IAAKwd,OACxE,kBAAC/T,EAAA,EAAU3J,KAAX,gCACA,kBAAC2J,EAAA,EAAU3J,KAAX,2CACA,kBAAC2J,EAAA,EAAU3J,KAAX,iEACA,kBAAC2J,EAAA,EAAU3J,KAAX,0CACA,kBAAC2J,EAAA,EAAU3J,KAAX,qCACA,kBAAC2J,EAAA,EAAU3J,KAAX,4GACA,kBAAC2J,EAAA,EAAU3J,KAAX,CAAgB+D,QAAQ,UAAxB,SACA,kBAAC4F,EAAA,EAAU3J,KAAX,CAAgB+D,QAAQ,WAAxB,UACA,kBAAC4F,EAAA,EAAU3J,KAAX,CAAgB+D,QAAQ,WAAxB,YACA,kBAAC4F,EAAA,EAAU3J,KAAX,+EAEJ,uCACA,mE,GAtDWK,IAAMC,W,mBCCpBqd,G,YACjB,WAAY1b,GAAQ,IAAD,8BACf,4CAAMA,KAUVqP,YAAc,SAACvH,GAEX,IACMyP,EAAc,IADJC,KAAMC,OAAOC,OAAO,YAEpCH,EAAYI,IAAI,QAAS7P,EAAQC,OACjCwP,EAAYI,IAAI,QAAS7P,EAAQE,OACjCuP,EAAYI,IAAI,SAAUhL,OAAO7E,EAAQG,SACzCsP,EAAYI,IAAI,QAAS7P,EAAQxC,OACjCiS,EAAYI,IAAI,UAAW7P,EAAQI,SACnCqP,EAAYI,IAAI,MAAO7P,EAAQK,KAC/BoP,EAAYI,IAAI,SAAU7P,EAAQM,QAClCmP,EAAYI,IAAI,WAAY7P,EAAQO,UACpCkP,EAAYI,IAAI,eAAgB7P,EAAQQ,cACxCiP,EAAYI,IAAI,oBAAqB7P,EAAQS,mBAC7CgP,EAAYI,IAAI,MAAO7P,EAAQU,KAC/B+O,EAAYI,IAAI,oBAAqB7P,EAAQW,mBAC7C8O,EAAYI,IAAI,QAAShL,OAAO7E,EAAQY,QACxC6O,EAAYI,IAAI,QAAShL,OAAO7E,EAAQa,QACxC4O,EAAYI,IAAI,aAAchL,OAAO7E,EAAQc,aAC7C2O,EAAYI,IAAI,cAAehL,OAAO7E,EAAQe,cAC9C0O,EAAYI,IAAI,iBAAkBhL,OAAO7E,EAAQiB,iBACjDwO,EAAYI,IAAI,iBAAkBhL,OAAO7E,EAAQmB,iBACjDsO,EAAYI,IAAI,aAAchL,OAAO7E,EAAQoB,aAC7CqO,EAAYI,IAAI,YAAahL,OAAO7E,EAAQqB,YAC5CoO,EAAYI,IAAI,SAAU7P,EAAQsB,QAClCmO,EAAYI,IAAI,QAAS7P,EAAQuB,OACjCkO,EAAYI,IAAI,OAAQhL,OAAO7E,EAAQwB,OACvCiO,EAAYI,IAAI,WAAYhL,OAAO7E,EAAQ8B,WAC3C2N,EAAYI,IAAI,gBAAiBhL,OAAO7E,EAAQ+B,gBAChD0N,EAAYI,IAAI,QAAS7P,EAAQgC,OAE7BhC,EAAQmC,cAAcsN,EAAYI,IAAI,eAAgB7P,EAAQmC,cAClEsN,EAAYI,IAAI,UAAWhL,OAAO7E,EAAQoC,UAC1CqN,EAAYI,IAAI,UAAWhL,OAAO7E,EAAQqC,UAC1CoN,EAAYI,IAAI,UAAWhL,OAAO7E,EAAQsC,UAC1CmN,EAAYI,IAAI,QAASH,KAAM7U,KAAKiV,WACpCL,EAAYO,OAAOC,MACf,SAACzY,GACGI,QAAQC,IAAI,kBAAmBL,MAEnC,SAAC2Y,GACGvY,QAAQuY,MAAM,iCAAkCA,OApDzC,EA6DnB0D,cAAgB,SAACpW,GAAO,IAAD,EACwB,EAAKtF,MAA1C2b,EADa,EACbA,UAAWC,EADE,EACFA,QAASC,EADP,EACOA,OAAQC,EADf,EACeA,KAClCH,EAAY,GACZC,EAAU,GACVC,EAAS,GACTC,EAAO,GAEP,IAAMC,EAAQzW,EAAEC,OAChByW,aAAaD,EAAMjN,MAAM,IAAIgJ,MAAK,SAAC5B,GAI/B0F,EAAU1F,EAAK,GACfyF,EAAYzF,EAAKxH,OAAO,EAAGwH,EAAKpU,OAAS,GACzC,IAAK,IAAIqB,EAAI,EAAGA,EAAIyY,EAAQ9Z,OAAQqB,IAC5B,CAAC,QAAS,SAAU,QAAS,UAAW,QAAS,MAAO,SAAU,WAClE,eAAgB,oBAAqB,MAAO,oBAAqB,QAAS,QAC1E,aAAc,cAAe,iBAAkB,iBAAkB,aAAc,YAC/E,SAAU,QAAS,WAAY,gBAAiB,UAAW,UAAW,WACxEqE,SAASoU,EAAQzY,MAAO0Y,EAAOD,EAAQzY,IAAMA,GAEnD,EAAK3C,SAAS,CAAEmb,YAAWC,UAASC,SAAQC,aAlFjC,EAuFnBG,UAAY,SAAC3W,GACT7F,QAAQC,IAAI4F,EAAEC,OAAO/G,IADN,IAETqd,EAAW,EAAK7b,MAAhB6b,OACNA,EAAOvW,EAAEC,OAAOa,OAAS8V,SAAS5W,EAAEC,OAAO/G,IAC3C,EAAKgC,SAAS,CAAEqb,YA3FD,EAkGnBM,OAAS,WACkB,EAAKpc,MAApBY,WADI,IAAD,EAEuB,EAAKX,MAAjC6b,EAFK,EAELA,OAAQF,EAFH,EAEGA,UAAWG,EAFd,EAEcA,KACnBM,EAAa5E,OAAO6E,KAAKR,GAC3BjX,GAAS,EACb+W,EAAUhc,SAAQ,SAAA2c,GAEd,IAAIzU,EAAU,GACdjD,IACA,IAAK,IAAIzB,EAAI,EAAGA,EAAIiZ,EAAWta,OAAQqB,IAC/B,CAAC,SAAU,OAAQ,QAAS,aAAc,cAAe,iBAAkB,gBAAiB,aAAc,YAAa,WAAY,gBAAiB,UAAW,UAAW,WAAWqE,SAAS4U,EAAWjZ,IACzM0E,EAAQuU,EAAWjZ,IAAMuJ,OAAO4P,EAAIT,EAAOO,EAAWjZ,MAEjD,CAAC,QAAS,eAAgB,oBAAqB,SAASqE,SAAS4U,EAAWjZ,IACjF0E,EAAQuU,EAAWjZ,IAAMmZ,EAAIT,EAAOO,EAAWjZ,KAG/C0E,EAAQuU,EAAWjZ,IAAMmZ,EAAIT,EAAOO,EAAWjZ,KAAKoZ,cAG5D1U,EAAQkC,MAAQwN,KAAM7U,KAAKiV,UACvB9P,EAAQmC,cAAyC,IAAzBnC,EAAQmC,aAAsBnC,EAAQmC,cAAe,EAAcnC,EAAQmC,cAAe,EAGlHnC,EAAQC,OAASD,EAAQG,QAAUH,EAAQE,OAASF,EAAQxC,OAASwC,EAAQI,SAAWJ,EAAQ+B,eAChGkS,EAAKjc,KAAK,uBAAGgQ,IAAKjL,EAAOvD,MAAO,CAAEgE,MAAO,UAAYiX,EAA3C,4BACV,EAAKlN,YAAYvH,IAGjBiU,EAAKjc,KAAK,uBAAGgQ,IAAKjL,EAAOvD,MAAO,CAAEgE,MAAO,QAAUiX,EAAzC,mCAKlBR,EAAKjc,KAAK,uBAAGgQ,IAAKjL,EAAQ,GAAKvD,MAAO,CAAEgE,MAAO,WAArC,6BACV,EAAK7E,SAAS,CAAEsb,UAnIhB,EAAK9b,MAAQ,CACT2b,UAAW,GACXC,QAAS,GACTC,OAAQ,GACRC,KAAM,IANK,E,sEAuIT,IAAD,SAE6Cvd,KAAKwB,MAA/CY,EAFH,EAEGA,WAAYP,EAFf,EAEeA,aAAcjB,EAF7B,EAE6BA,YAF7B,EAGgCZ,KAAKyB,MAAvB4b,GAHd,EAGGD,UAHH,EAGcC,SAASE,EAHvB,EAGuBA,KAC5B,GAAIA,EAAKha,OAAQ,OACb,kBAACW,EAAA,EAAD,KACI,kBAAC,EAAD,CAAe7B,KAAMrC,KAAKwB,MAAMa,KAAMzB,YAAaA,EAAawB,WAAYA,EAAYP,aAAcA,IACtG,kBAACga,GAAA,EAAD,CAAWpJ,OAAK,GACZ,6BACK8K,KAKjB,IAAIlB,EAAa,GACbhW,GAAS,EA4Cb,OA3CAgX,EAAQjc,SAAQ,SAAAsG,GACZrB,IACAgW,EAAW/a,KAAK,wBAAIgQ,IAAKjL,GACrB,4BAAKA,GACL,4BAAKqB,GACL,wBAAIzH,GAAIyH,GACJ,kBAACkK,EAAA,EAAKC,MAAN,KACI,kBAACD,EAAA,EAAKG,MAAN,MACA,kBAACH,EAAA,EAAKI,QAAN,CAAc/R,GAAI,OAASoG,EAAOyB,SAAU,EAAK4V,UAAWjM,aAAc/J,EAASuK,GAAG,UAClF,iCACA,qDACA,2CACA,yCACA,8CACA,+CACA,yCACA,uCACA,yCACA,2CACA,2CACA,2CACA,4CACA,gDACA,qDACA,0CACA,uCACA,yCACA,6CACA,kDACA,kDACA,0CACA,iDACA,yCACA,8CACA,4CACA,yCACA,kDAQhB,kBAAC/N,EAAA,EAAD,KACI,kBAAC,EAAD,CAAe7B,KAAMrC,KAAKwB,MAAMa,KAAMzB,YAAaA,EAAawB,WAAYA,EAAYP,aAAcA,IACtG,kBAACga,GAAA,EAAD,CAAWpJ,OAAK,GACZ,yBAAK3P,MAAO,CAAC4P,SAAS,aACtB,2BAAOlT,UAAU,aAAcsD,MAAO,CAACmb,QAAQ,IAAIvL,SAAS,WAAWE,IAAI,QAAQD,KAAK,IAAK5P,MAAM,QAAQkE,OAAO,SAAUa,SAAU9H,KAAKmd,cAAe/K,KAAK,OAAOnS,GAAG,UACzK,yBAAM6C,MAAO,CAACob,cAAc,OAAOxL,SAAS,WAAWE,IAAI,QAAQD,KAAK,IAAK5P,MAAM,QAAQkE,OAAO,SAAUxH,IAAK0e,QAEjH,kBAACzB,GAAA,EAAD,KACI,+BACI,4BACI,iCACA,4CACA,wCAGR,+BACKL,IAGT,kBAACjU,EAAA,EAAD,CAAQxF,QAAS5C,KAAK4d,QAAtB,gB,GAvNmBhe,IAAMC,WCWtC,SAASkL,GAAUvB,EAAO1C,EAAO4C,EAASD,EAAQuB,GACvD9J,QAAQC,IAAIqI,EAAO1C,EAAO4C,EAASD,EAAQuB,EAAU,IACVxB,EAA7B,OAAVA,GAA4B,UAAVA,EAA6B,OAAwB,QAC3E,IAAK,IAAI5E,EAAI,EAAGA,EAAIoG,EAAUzH,OAAQqB,IACpC,GAAI4E,IAAUwB,EAAUpG,GAAG4E,OAAS1C,IAAUkE,EAAUpG,GAAGkC,OACzD4C,IAAYsB,EAAUpG,GAAG8E,SAAWD,GAAU0E,OAAOnD,EAAUpG,GAAGwZ,WAClE3U,GAAU0E,OAAOnD,EAAUpG,GAAGyZ,WAC9B,OAAOlQ,OAAOnD,EAAUpG,GAAG0Z,YAE/B,OAAO,E,IA2cMC,G,YAlbb,WAAY/c,GAAQ,IAAD,8BACjB,4CAAMA,KAiBRgd,YAAc,WAAO,IAAD,EACkB,EAAK/c,MAAjCW,EADU,EACVA,WAAYqc,EADF,EACEA,YACpB,GAAIrc,EAAY,CACd,IAAIxB,EAAc,GAEZ8d,EAAgB1F,KAAMC,OAAOC,OAAO,YAGpCyF,EAAS,IAAI3F,KAAMW,MAAM+E,GAC/BC,EAAOC,QAAQ,OAAQH,GAGvB,IAAMI,EAAS,IAAI7F,KAAMW,MAAM+E,GAC/BG,EAAOD,QAAQ,KAAMH,GAGrB,IAAMK,EAAgB9F,KAAMW,MAAMoF,GAAGJ,EAAQE,GAE7CC,EAAcE,QAAQzF,MAAK,SAACyF,GAEtBA,EAAQ,KAAKF,EAAcG,KAAKD,EAAQ,KAC5CF,EAAc9E,OAAOT,MAAK,SAAC0C,GAIzB,IAAIiD,EADJhe,QAAQC,IAAI,iBAAkB8a,GAE9BA,EAAQ7a,SAAQ,SAAAC,GAGd,IAFA6d,EAAW,IAAIpf,EAAQuB,IAEVjB,GAAGH,KAAOmC,EAAWnC,KAAOif,EAASze,SAAU,CAC1Dye,EAASze,UAAW,EACpB,IAAM4H,EAAW2Q,KAAMC,OAAOC,OAAO,YACvB,IAAIF,KAAMW,MAAMtR,GAExBlI,IAAI+e,EAASjf,IAAIsZ,MAAK,SAACK,GAC3BA,EAAOT,IAAI,YAAY,GACvBS,EAAON,OAAOC,MAAK,SAACtO,GAIlB/J,QAAQC,IAAI,mBAAoB8J,MAC/B,SAACwO,GAEFvY,QAAQuY,MAAM,gCAAiCA,SAIrD7Y,EAAYU,KAAK4d,MAGnB,EAAKjd,SAAS,CAAErB,mBACf,SAAC6Y,GACFvY,QAAQuY,MAAM,gCAAiCA,WAtEpC,EAuNnBvF,UAAY,SAACiL,GACX,IAAK,IAAIva,EAAI,EAAGA,EAAI,EAAKnD,MAAMkD,SAASpB,OAAQqB,IAC9C,GAAI,EAAKnD,MAAMkD,SAASC,GAAG3E,IAAMkf,EAAQ,OAAO,EAAK1d,MAAMkD,SAASC,GAAG3B,MAAQ,IAAM,EAAKxB,MAAMkD,SAASC,GAAGP,OAzN7F,EA8NnB6B,cAAgB,SAACjG,GAAQ,IACjBW,EAAgB,EAAKa,MAArBb,YACAyH,EAAW2Q,KAAMC,OAAOC,OAAO,YACvB,IAAIF,KAAMW,MAAMtR,GAExBlI,IAAIF,GAAIsZ,MAAK,SAACK,GAClBA,EAAOC,UAAUN,MAAK,SAACtO,GAErB/J,QAAQC,IAAI,mBAAoB8J,GAChC,IAAK,IAAIrG,EAAI,EAAGA,EAAIhE,EAAY2C,OAAQqB,IACtC,GAAI3E,IAAOW,EAAYgE,GAAG3E,GAAI,CAC5BW,EAAYuP,OAAOvL,EAAG,GACtB,MAGJ,EAAK3C,SAAS,CAAErB,mBACf,SAAC6Y,GAEFvY,QAAQuY,MAAM,gCAAiCA,UAhPlC,EAuPnBtT,YAAc,SAAClG,GAAQ,IACfW,EAAgB,EAAKa,MAArBb,YACAyH,EAAW2Q,KAAMC,OAAOC,OAAO,YACvB,IAAIF,KAAMW,MAAMtR,GAExBlI,IAAIF,GAAIsZ,MAAK,SAACK,GAClBA,EAAOT,IAAI,WAAW,GACtBS,EAAON,OAAOC,MAAK,SAACtO,GAIlB/J,QAAQC,IAAI,mBAAoB8J,GAChC,IAAK,IAAIrG,EAAI,EAAGA,EAAIhE,EAAY2C,OAAQqB,IACtC,GAAI3E,IAAOW,EAAYgE,GAAG3E,GAAI,CAC5BW,EAAYuP,OAAOvL,EAAG,GACtB,MAGJ,EAAK3C,SAAS,CAAErB,mBACf,SAAC6Y,GAEFvY,QAAQuY,MAAM,gCAAiCA,UA5QlC,EAkRnBxT,WAAa,SAAC5F,EAAM+e,EAAQC,GAC1Bne,QAAQC,IAAId,GACZa,QAAQC,IAAIie,GACZle,QAAQC,IAAIke,GAHuB,IAS/Bnf,EAAME,EALJQ,EAAgB,EAAKa,MAArBb,YACA0e,EAAQ,IAAItG,KAAM7U,KAClBwW,EAAQ,IAAI3B,KAAM7U,KAClB0a,EAAS,IAAI7F,KAAMW,MAAM2F,GAChB,IAAItG,KAAMW,MAAMgB,GAGxBxa,IAAIif,GAAQ7F,MAAK,SAACgG,GACvBrf,EAAOqf,EACPre,QAAQC,IAAI,aAAcoe,GAC1BV,EAAO1e,IAAIkf,GAAM9F,MAAK,SAACiG,GACrBpf,EAAKof,EACLte,QAAQC,IAAI,aAAcqe,GAE1B,IACMzG,EAAc,IADHC,KAAMC,OAAOC,OAAO,aAErCH,EAAYI,IAAI,OAAQjZ,GACxB6Y,EAAYI,IAAI,KAAM/Y,GACtB2Y,EAAYI,IAAI,OAAQ9Y,GACxB0Y,EAAYI,IAAI,QAAQ,GACxBJ,EAAYI,IAAI,WAAW,GAC3BJ,EAAYI,IAAI,YAAY,GAC5BJ,EAAYO,OAAOC,MACjB,SAACzY,GACCI,QAAQC,IAAI,mBAAoBL,GAChCF,EAAYU,KAAK,IAAIxB,EAAQgB,IAC7B,EAAKmB,SAAS,CAAErB,mBAIlB,SAAC6Y,GACCvY,QAAQuY,MAAM,kCAAmCA,SAEpD,SAACA,GAEFvY,QAAQuY,MAAM,4BAA6BA,SAG5C,SAACA,GAEFvY,QAAQuY,MAAM,4BAA6BA,OA9T5B,EAoUnB3T,YAAc,SAACzE,GAKb,IAJA,IAAMgH,EAAW2Q,KAAMC,OAAOC,OAAO,YAC/BuG,EAAQ,IAAIzG,KAAMW,MAAMtR,GAExBzH,EAAgB,EAAKa,MAArBb,YACGgE,EAAI,EAAGA,EAAIhE,EAAY2C,OAAQqB,IACtC,GAAIhE,EAAYgE,GAAG3E,KAAOoB,EAAQpB,GAAI,CACpCW,EAAYgE,GAAGrE,MAAO,EACtB,MAGJkf,EAAMtf,IAAIkB,EAAQpB,IAAIsZ,MAAK,SAACK,GAC1BA,EAAOT,IAAI,QAAQ,GACnBS,EAAON,OAAOC,MAAK,SAACtO,GAGlB/J,QAAQC,IAAI,mBAAoB8J,MAC/B,SAACwO,GACFvY,QAAQuY,MAAM,gCAAiCA,SAGnD,EAAKxX,SAAS,CAAErB,iBAzVC,EA6VnB6X,UAAY,SAACiH,GACXxe,QAAQC,IAAI,6BACZD,QAAQC,IAAIue,GAFa,MAGE,EAAKje,MAA1BW,EAHmB,EAGnBA,WAAYC,EAHO,EAGPA,KAElB,GADKA,IAAMA,EAAO,KACbA,EAAK4G,SAASyW,KACjBrd,EAAKf,KAAKoe,GACVxe,QAAQC,IAAIkB,GACRD,GAAY,CACd,IAAM+B,EAAO,IAAI6U,KAAM7U,KACT,IAAI6U,KAAMW,MAAMxV,GAGxBhE,IAAIiC,EAAWnC,IAAIsZ,MAAK,SAAC5Y,GAE7BA,EAAKwY,IAAI,OAAQ9W,GAEjB1B,EAAK2Y,OAAOC,MAAK,SAACtO,GAEhB/J,QAAQC,IAAI,eAAgB8J,MAC3B4P,OAAM,SAACpB,GAERvY,QAAQuY,MAAM,4BAA6BA,SAMnD,EAAKxX,SAAS,CAAEI,UAzXC,EA6XnB+Z,eAAiB,SAACuD,GAAU,IAAD,EACE,EAAKle,MAA1BY,EADmB,EACnBA,KAAMD,EADa,EACbA,WACRiE,EAAQhE,EAAKud,QAAQD,GACzB,GAAItZ,GAAS,EAEX,GADAhE,EAAK8N,OAAO9J,EAAO,GACdjE,EAGA,CACH,IAAM+B,EAAO,IAAI6U,KAAM7U,KACT,IAAI6U,KAAMW,MAAMxV,GAGxBhE,IAAIiC,EAAWnC,IAAIsZ,MAAK,SAAC5Y,GAE7BA,EAAKwY,IAAI,OAAQ9W,GAEjB1B,EAAK2Y,OAAOC,MAAK,SAACtO,GAChB/J,QAAQC,IAAI,eAAgB8J,GAC5B,EAAKhJ,SAAS,CAAEI,YACfwY,OAAM,SAACpB,GACRvY,QAAQuY,MAAM,4BAA6BA,cAf/C,EAAKxX,SAAS,CAAEI,UAjYpB,EAAKZ,MAAQ,CACXgd,YAAa,KACbrc,WACE,KACFuC,SAAU,GACV/D,YAAa,GACbkZ,WAAW,EACXzX,KAAM,IAGR,EAAKR,aAAe,EAAKA,aAAaD,KAAlB,gBACpB,EAAKgZ,YAAc,EAAKA,YAAYhZ,KAAjB,gBAbF,E,iFA8EE,IAAD,OAKdoX,KAAM7U,KAAKiV,YACbpZ,KAAK4a,YAAY,IAAIzW,EAAK6U,KAAM7U,KAAKiV,YACrCpZ,KAAKiC,SAAS,CAAEoY,cAAc,KAIhC,IAAI1V,EAAW,GACTP,EAAY,IAAI4U,KAAM7U,KACd,IAAI6U,KAAMW,MAAMvV,GAExB4V,OAAOT,MAAK,SAACsG,GACjB3e,QAAQC,IAAI,aAAc0e,GAC1BA,EAAMze,SAAQ,SAAAT,GACZgE,EAASrD,KAAK,IAAI6C,EAAKxD,IACvB,EAAKsB,SAAS,CAAE0C,mBAEjB,SAAC8U,GACFvY,QAAQuY,MAAM,4BAA6BA,Q,qCAO7C,IAAMkB,EAAQ,IAAI3B,KAAM7U,KAClBsb,EAAQ,IAAIzG,KAAMW,MAAMgB,GACtBvY,EAAepC,KAAKyB,MAApBW,WACFC,EAASrC,KAAKyB,MAAdY,KAENod,EAAMtf,IAAIiC,EAAWnC,IAAIsZ,MAAK,SAAC5Y,GAG7BA,EAAKwY,IAAI,WAAW,GACpBxY,EAAKwY,IAAI,aAAc,IAAIjU,MAG3BvE,EAAK2Y,OAAOC,MAAK,SAACtO,GAChB/J,QAAQC,IAAI,sBAAuB8J,GACnC+N,KAAM7U,KAAK2b,YACVjF,OAAM,SAACpB,GAERvY,QAAQuY,MAAM,4BAA6BA,SAG/CpX,EAAO,GACPrC,KAAKiC,SAAS,CAAEG,WAAY,KAAMC,W,kCAKxBD,GAAa,IAAD,OAEhBC,EAASrC,KAAKyB,MAAdY,KAGN,GAAIA,IAAS,GACXA,EAAOD,EAAWC,KAClBrC,KAAKiC,SAAS,CAAEG,aAAYC,SAC5BrC,KAAKwe,mBAIF,GAAIpc,EAAWC,KAAM,CACxB,IAAMqX,EAAUV,KAAMC,OAAOC,OAAO,WACtB,IAAIF,KAAMW,MAAMD,GAExBM,OAAOT,MAAK,SAAC0C,GAIjB,IAAK,IAAIrX,EAAI,EAAGA,EAAIvC,EAAKkB,OAAQqB,IAC/B,IAAKxC,EAAWC,KAAK4G,SAAS5G,EAAKuC,IAAK,CAEtC,IADA,IAAImb,OAAM,EACDC,EAAI,EAAGA,EAAI/D,EAAQ1Y,OAAQyc,IAClC,GAAI3d,EAAKuC,KAAOqX,EAAQ+D,GAAG/f,GAAI,CAAE8f,EAAS9D,EAAQ+D,GAAG7f,IAAI,SAASF,GAAI,MAEpE8f,GAAU3d,EAAWnC,IAAMmC,EAAWC,KAAKf,KAAKe,EAAKuC,IAG7DvC,EAAOD,EAAWC,KAElB,IAAM8B,EAAO,IAAI6U,KAAM7U,KACT,IAAI6U,KAAMW,MAAMxV,GAGxBhE,IAAIiC,EAAWnC,IAAIsZ,MAAK,SAAC5Y,GAAS,IAEhC8d,EAAgB,EAAKhd,MAArBgd,YACNA,EAAc9d,EACdA,EAAKwY,IAAI,OAAQ9W,GAEjB1B,EAAK2Y,OAAOC,MAAK,SAACtO,GAEhB/J,QAAQC,IAAI,eAAgB8J,MAC3B4P,OAAM,SAACpB,GAERvY,QAAQuY,MAAM,4BAA6BA,MAE7C,EAAKxX,SAAS,CAAEG,aAAYC,OAAMoc,gBAClC,EAAKD,oBAEN,SAAC/E,GAEFvY,QAAQuY,MAAM,+BAAgCA,UAM7C,CACH,IAAMtV,EAAO,IAAI6U,KAAM7U,KACT,IAAI6U,KAAMW,MAAMxV,GAGxBhE,IAAIiC,EAAWnC,IAAIsZ,MAAK,SAAC5Y,GAE7BA,EAAKwY,IAAI,OAAQ9W,GAEjB1B,EAAK2Y,OAAOC,MAAK,SAACtO,GAEhB/J,QAAQC,IAAI,eAAgB8J,GAC5B,EAAKhJ,SAAS,CAAEG,aAAYC,SAC5B,EAAKmc,iBACJ3D,OAAM,SAACpB,GAERvY,QAAQuY,MAAM,4BAA6BA,Y,+BAwMzC,IAAD,EAEwDzZ,KAAKyB,MAA5DW,EAFD,EAECA,WAAYuC,EAFb,EAEaA,SAAqB/D,GAFlC,EAEuBkZ,UAFvB,EAEkClZ,aAAayB,EAF/C,EAE+CA,KAEtD,OAGE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO4d,OAAK,EAACC,KAAK,KAAK,kBAAC,EAAD,CAAM7d,KAAMA,EAAMzB,YAAaA,EAAawB,WAAYA,EAAYP,aAAc7B,KAAK6B,gBAC9G,kBAAC,IAAD,CAAOoe,OAAK,EAACC,KAAK,SAAS,kBAAC,EAAD,CAAM7d,KAAMA,EAAMzB,YAAaA,EAAawB,WAAYA,EAAYP,aAAc7B,KAAK6B,gBAClH,kBAAC,IAAD,CAAOoe,OAAK,EAACC,KAAK,aAAa,kBAAC,EAAD,CAAU7d,KAAMA,EAAMzB,YAAaA,EAAa+D,SAAUA,EAAUvC,WAAYA,EAAYP,aAAc7B,KAAK6B,gBAC9I,kBAAC,IAAD,CAAOoe,OAAK,EAACC,KAAK,iBAAiB,kBAAC,EAAD,CAAc7d,KAAMA,EAAM8D,YAAanG,KAAKmG,YAAaD,cAAelG,KAAKkG,cAAeJ,YAAa9F,KAAK8F,YAAaG,WAAYjG,KAAKiG,WAAYrF,YAAaA,EAAa+D,SAAUA,EAAUvC,WAAYA,EAAYP,aAAc7B,KAAK6B,gBACpR,kBAAC,IAAD,CAAOoe,OAAK,EAACC,KAAK,WAAU,kBAAC,GAAD,CAAQ7d,KAAMA,EAAMoW,UAAWzY,KAAKyY,UAAWxS,WAAYjG,KAAKiG,WAAYrF,YAAaA,EAAasT,UAAWlU,KAAKkU,UAAW9R,WAAYA,EAAYP,aAAc7B,KAAK6B,gBACxM,kBAAC,IAAD,CAAOoe,OAAK,EAACC,KAAK,UAAlB,IAA4B,kBAAC,GAAD,CAAW7d,KAAMA,EAAMzB,YAAaA,EAAaiB,aAAc7B,KAAK6B,aAAcO,WAAYA,EAAYyd,MAAOlb,EAAUiW,YAAa5a,KAAK4a,eACzK,kBAAC,IAAD,CAAOqF,OAAK,EAACC,KAAK,WAAlB,IAA6B,kBAACC,GAAD,CAAY9d,KAAMA,EAAMzB,YAAaA,EAAaiB,aAAc7B,KAAK6B,aAAcO,WAAYA,EAAYyd,MAAOlb,EAAUiW,YAAa5a,KAAK4a,eAC3K,kBAAC,IAAD,CAAOqF,OAAK,EAACC,KAAK,SAAQ,kBAAC,GAAD,CAAc9D,eAAgBpc,KAAKoc,eAAgB/Z,KAAMA,EAAMzB,YAAaA,EAAasT,UAAWlU,KAAKkU,UAAW9R,WAAYA,EAAYP,aAAc7B,KAAK6B,gBACzL,kBAAC,IAAD,CAAOoe,OAAK,EAACC,KAAK,SAAS,kBAAC,EAAD,CAAM7d,KAAMA,EAAMzB,YAAaA,EAAawB,WAAYA,EAAYP,aAAc7B,KAAK6B,gBAClH,kBAAC,IAAD,CAAOoe,OAAK,EAACC,KAAK,UAAU,kBAAC,GAAD,CAAO7d,KAAMA,EAAMzB,YAAaA,EAAa+D,SAAUA,EAAUvC,WAAYA,EAAYP,aAAc7B,KAAK6B,gBACxI,kBAAC,IAAD,CAAOoe,OAAK,EAACC,KAAK,SAAS,kBAAC,GAAD,CAAW7d,KAAMA,EAAMzB,YAAaA,EAAa+D,SAAUA,EAAUvC,WAAYA,EAAYP,aAAc7B,KAAK6B,qB,GA3ajIjC,IAAMC,WCzCJugB,QACW,cAA7Bte,OAAOC,SAASse,UAEe,UAA7Bve,OAAOC,SAASse,UAEhBve,OAAOC,SAASse,SAASC,MACvB,2D,OCPNtH,KAAMuH,UAAY,gCAClBvH,KAAMwH,WACJ,2CACA,4CAIFC,IAASC,OAAO,kBAAC,IAAD,KAAY,kBAAC,GAAD,OAAsBpT,SAASG,eAAe,SD+GpE,kBAAmBkT,WACrBA,UAAUC,cAAcC,MAAMtH,MAAK,SAAAuH,GACjCA,EAAaC,kB","file":"static/js/main.d01f38b8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/flat_seo3-24-512.b4bf43fd.png\";","module.exports = __webpack_public_path__ + \"static/media/seen-300x225.7508915c.webp\";","module.exports = __webpack_public_path__ + \"static/media/V-512.4ca5d018.png\";","module.exports = __webpack_public_path__ + \"static/media/38-383271_excel-logo-png-microsoft-excel-logo-transparent-png.bfb7fd20.png\";","module.exports = __webpack_public_path__ + \"static/media/icons8-delete-message-26.6b14a23a.png\";","module.exports = __webpack_public_path__ + \"static/media/1c7be669e68d05366ad16b7d2b40333b-diamond-gemstone-black-icon-by-vexels.53c9d042.png\";","module.exports = __webpack_public_path__ + \"static/media/Shapes.871ee084.png\";","module.exports = __webpack_public_path__ + \"static/media/delete-1507091-1279000.2c167f0b.png\";","module.exports = __webpack_public_path__ + \"static/media/l8cb11pkn10.705a6523.jpg\";","import React from 'react'\r\n\r\nimport { Container, Carousel } from 'react-bootstrap'\r\n\r\n//pagebody of home page\r\nexport default class HomePageBody extends React.Component {\r\n\r\n  render() {\r\n    return (\r\n      <Carousel>\r\n               <Carousel.Item>\r\n          <img\r\n            className=\"d-block w-100\"\r\n            src=\"https://file4.batdongsan.com.vn/2019/07/11/akCJKkFO/20190711181053-40bf.jpg\"\r\n            alt=\"First slide\"\r\n          />\r\n          <Carousel.Caption>\r\n            <h3>New York</h3>\r\n            <p>Directly from 47th street</p>\r\n          </Carousel.Caption>\r\n        </Carousel.Item>\r\n               <Carousel.Item>\r\n          <img\r\n            className=\"d-block w-100\"\r\n            src=\"https://en.israelidiamond.co.il/wp-content/uploads/2016/09/Israel-Diamond-Industry.jpg\"\r\n            alt=\"Second slide\"\r\n          />\r\n          <Carousel.Caption>\r\n            <h3>Israel</h3>\r\n            <p>Ramat Gan Diamond Exchange complex</p>\r\n          </Carousel.Caption>\r\n        </Carousel.Item>\r\n        <Carousel.Item>\r\n          <img\r\n            className=\"d-block w-100\"\r\n            src=\"http://www.morphogenesis.org/wp-content/uploads/2018/11/Surat-Diamond-Bourse-1.jpg\"\r\n            alt=\"Third slide\"\r\n          />\r\n          <Carousel.Caption>\r\n            <h3>India</h3>\r\n            <p>Mumbai new Diamond Exchange</p>\r\n          </Carousel.Caption>\r\n        </Carousel.Item>\r\n        <Carousel.Item>\r\n          <img\r\n            className=\"d-block w-100\"\r\n            src=\"https://metro.co.uk/wp-content/uploads/2018/02/hong-kong-skyline-getty.jpg?quality=90&strip=all\"\r\n            alt=\"Fourth slide\"\r\n          />\r\n          <Carousel.Caption>\r\n            <h3>Hong Kong</h3>\r\n            <p>The gate to china</p>\r\n          </Carousel.Caption>\r\n        </Carousel.Item>\r\n        <Carousel.Item>\r\n          <img\r\n            className=\"d-block w-100\"\r\n            src=\"https://www.abc.net.au/news/image/11038164-3x2-700x467.jpg\"\r\n            alt=\"Fifth slide\"\r\n          />\r\n          <Carousel.Caption>\r\n            <h3>List your diamonds</h3>\r\n            <p>Live selling platform with proven results</p>\r\n          </Carousel.Caption>\r\n        </Carousel.Item>\r\n        <Carousel.Item>\r\n          <img\r\n            className=\"d-block w-100\"\r\n            src=\"https://image.shutterstock.com/image-photo/brilliant-cut-diamond-held-by-260nw-1068771257.jpg\"\r\n            alt=\"Sixth slide\"\r\n          />\r\n\r\n          <Carousel.Caption>\r\n            <h3>Connect with your other dealers</h3>\r\n            <p>Messaging Platform</p>\r\n          </Carousel.Caption>\r\n        </Carousel.Item>\r\n        <Carousel.Item>\r\n          <img\r\n            className=\"d-block w-100\"\r\n            src=\"https://image.iol.co.za/image/1/process/620x349?source=http://ana-baobab-prod-eu-west-2.s3.amazonaws.com/public/ana/media/media/2017/04/21/1492781484816.jpg\"\r\n            alt=\"Third slide\"\r\n          />\r\n\r\n          <Carousel.Caption>\r\n            <h3>All shapes, all color , all clarity</h3>\r\n            <p>with or without certificates. pictures and full specs</p>\r\n          </Carousel.Caption>\r\n        </Carousel.Item>\r\n      </Carousel>\r\n      // <div className=\"marginTop\">\r\n      //   <div className=\"row  cardHolder\">\r\n      //     {/* <div className=\"col-lg-4\">\r\n      //       <div className=\"content bg-diam\">\r\n      //         <a href=\"#\">\r\n      //           <MyCard key={1} num={1} total={3} img=\"https://image.shutterstock.com/image-photo/brilliant-cut-diamond-held-by-260nw-1068771257.jpg\" label=\"Search Diamonds\" text=\"Search by any parameter, Contact the seller, Shake hands, Mazal ubracha\" />\r\n      //         </a>\r\n      //       </div>\r\n      //     </div>\r\n      //     <div className=\"col-lg-4\">\r\n      //       <div className=\"content  bg-diam\">\r\n      //         <a href=\"#\">\r\n      //           <MyCard key={1} num={2} total={3} img=\"https://image.shutterstock.com/image-photo/message-bottle-floating-ocean-260nw-667435318.jpg\" label=\"Messages\" text=\"Check and send messages to members, send ofers, Stay in touch.\" />\r\n      //         </a>\r\n      //       </div>\r\n      //     </div>\r\n      //     <div className=\"col-lg-4\">\r\n      //       <div className=\"content bg-diam\">\r\n      //         <a href=\"#\">\r\n      //           <MyCard key={1} num={3} total={3} img=\"https://image.shutterstock.com/image-photo/auction-bid-sale-judgment-mallet-260nw-1033130779.jpg\" label=\"Auction\" text=\"Join the fun and bid on any diamond in the auction list. Get lucky.\" />\r\n      //         </a>\r\n      //       </div>\r\n      //     </div> */}\r\n      //   </div>\r\n      // </div>\r\n    );\r\n  }\r\n}","\r\nexport class Message {\r\n    constructor(parseMessage) {\r\n        this.id = parseMessage.id;\r\n        this.from = parseMessage.get(\"from\");\r\n        this.to = parseMessage.get(\"to\");\r\n        this.text = parseMessage.get(\"text\");\r\n        this.createdAt = parseMessage.get(\"createdAt\");\r\n        this.read = parseMessage.get(\"read\");\r\n        this.deleted = parseMessage.get(\"deleted\");\r\n        this.recieved=parseMessage.get(\"recieved\");\r\n    }\r\n}\r\nexport function usersMessages(user, allMessages, fromUser) {\r\n    let result = {\r\n        new: 0,\r\n        last:\"\",\r\n        messages: []\r\n    };\r\n    console.log(\"messages\");\r\n    console.log(allMessages);\r\n    console.log(user);\r\n    if (user && allMessages) {\r\n        allMessages.forEach(message => {\r\n            if (message.from.id === user.id || message.to.id === user.id) {\r\n                if (fromUser&&(message.from.id === fromUser.id || message.to.id === fromUser.id)) result.messages.push(message);\r\n                if (!message.read && message.to.id === user.id && (!fromUser|| message.from.id === fromUser.id )) result.new++;\r\n                if (message.createdAt>result.last && message.to.id === user.id && fromUser && message.from.id === fromUser.id ) result.last=message.createdAt;\r\n            }\r\n\r\n\r\n        });\r\n    }\r\n    return result;\r\n}\r\n","import React from 'react'\r\nimport { Navbar, Nav,Badge,Image } from 'react-bootstrap'\r\nimport { Redirect } from 'react-router-dom'\r\nimport diamondLogo from '../data/1c7be669e68d05366ad16b7d2b40333b-diamond-gemstone-black-icon-by-vexels.png'\r\nimport {usersMessages} from '../Classes/Message'\r\nimport basket from '../data/flat_seo3-24-512.png'\r\n\r\nclass DiamondNavbar extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            redirectToHome: false\r\n        }\r\n\r\n        this.logout = this.logout.bind(this);\r\n    }\r\n\r\n    logout() {\r\n        this.props.handleLogout();\r\n\r\n        if (window.location.hash != \"#/\") {\r\n            this.setState({redirectToHome: true})\r\n        }\r\n    }\r\n\r\n    // // this function in onvoked after every render (but not the first)\r\n    // componentDidUpdate() {\r\n    //     if (this.state.redirectToHome) {\r\n    //         this.setState({redirectToHome: false})\r\n    //     }\r\n    // }\r\n\r\n    \r\n\r\n    render() {\r\n        let itemsInCart;\r\n        const { activeUser,allMessages,cart } = this.props;\r\n        const { redirectToHome } = this.state;\r\n        // console.log(\"navbar\");\r\n        // console.log(allMessages);\r\n        let pic;\r\n        // if (activeUser) console.log(activeUser.pic);\r\n        if (activeUser&&activeUser.pic) { pic = activeUser.pic[\"_url\"] } else { pic = \"https://aussiegossip.com.au/wp-content/uploads/2015/11/anonymous-logo-transparent-wallpaper-4.png\" }\r\n\r\n        const signupLink = !activeUser ? <Nav.Link href=\"#/signup\">Signup</Nav.Link> : null;\r\n        const loginLink = !activeUser ? <Nav.Link href=\"#/login\">Login</Nav.Link> : null;\r\n        const logoutLink = activeUser ? <Nav.Link onClick={this.logout}><Image style={{width:\"50px\"}} src={pic} roundedCircle />{\" \"+this.props.activeUser.fname+\" Logout\"}</Nav.Link> : null;\r\n        const newMessages=usersMessages( activeUser,allMessages).new;\r\n        let myBadge=\"\";\r\n        if (newMessages){myBadge=(<Badge pill variant=\"success\">{newMessages}</Badge>)}\r\n        if (cart.length) {itemsInCart=cart.length} else {itemsInCart=\"\"};\r\n        return (\r\n            \r\n            <Navbar bg=\"light\" expand=\"lg\">\r\n                <Navbar.Brand href=\"#/\"><img className=\"logo\" src={diamondLogo}></img>Diamonds</Navbar.Brand>\r\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                    <Nav className=\"mr-auto\">\r\n                        <Nav.Link href=\"#/search\">Search</Nav.Link>\r\n                        <Nav.Link href=\"#/messages\">Messages{myBadge}</Nav.Link>\r\n                        <Nav.Link href=\"#/about\">About</Nav.Link>\r\n                    </Nav>\r\n\r\n                    <Nav className=\"ml-auto\">\r\n                    <Navbar.Brand href=\"#/cart\"><img className=\"basket\" style={{width:\"30px\"}} src={basket}></img>{itemsInCart}</Navbar.Brand>\r\n                        {signupLink}\r\n                        {loginLink}\r\n                        {logoutLink}\r\n                    </Nav>\r\n                </Navbar.Collapse>\r\n            </Navbar>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DiamondNavbar;","import React from 'react';\r\nimport {Container} from 'react-bootstrap'\r\nimport HomePageBody from '../components/HomePageBody'\r\nimport DiamondNavbar from '../components/DiamondNavbar';\r\n\r\nexport class Home extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n \r\n}\r\n    render() {\r\n      const { activeUser, handleLogout,allMessages } = this.props;\r\n      console.log(\"home\");\r\n      console.log(allMessages);\r\n      return (\r\n        <Container>\r\n          <DiamondNavbar cart={this.props.cart} allMessages={allMessages} activeUser={activeUser} handleLogout={handleLogout}/>\r\n          <HomePageBody />\r\n        </Container>\r\n      );\r\n    }\r\n  }\r\n\r\n","//user class\r\nexport default class User {\r\n    constructor(parseUser) {\r\n        this.id = parseUser.id;\r\n        this.fname = parseUser.get(\"fname\");\r\n        this.lname = parseUser.get(\"lname\");\r\n        this.email = parseUser.get(\"email\");\r\n        this.username = parseUser.get(\"username\");\r\n        this.isLogin = parseUser.get(\"isLogin\");\r\n        this.lastLogout=parseUser.get(\"lastLogout\");\r\n        this.pic=parseUser.get(\"pic\");\r\n        this.cart=parseUser.get(\"cart\");\r\n    }\r\n}\r\n\r\n\r\nexport function userDetails(id,allUsers){\r\n    for (var i=0;i<allUsers.length;i++){\r\n        if (id===allUsers[i].id) return allUsers[i];\r\n    }\r\n    return null;\r\n}","import React from 'react';\r\nimport { Container, InputGroup, FormControl, ListGroup, Image, Badge, Row, Col,Button } from 'react-bootstrap'\r\nimport HomePageBody from '../components/HomePageBody'\r\nimport DiamondNavbar from '../components/DiamondNavbar';\r\nimport { usersMessages } from '../Classes/Message'\r\nimport { userDetails } from '../Classes/User'\r\nimport deleteImg from '../data/icons8-delete-message-26.png'\r\nimport readMessage from '../data/seen-300x225.webp'\r\nimport recievedMessage from '../data/V-512.png'\r\n\r\nexport function fullMinutes(min){\r\n    if (min>9) return min;\r\n    return \"0\"+min;\r\n}\r\nexport function parseDateTime(dateTime){\r\n    let answer=\"\"\r\n const today=new Date();\r\n if (dateTime.getFullYear()!=today.getFullYear()||dateTime.getMonth()!=today.getMonth()||dateTime.getDate()!=today.getDate()) \r\n                    answer=answer+dateTime.getDate()+\"/\"+dateTime.getMonth()+\"/\"+dateTime.getFullYear()+\" \"\r\nanswer=answer+dateTime.getHours()+\":\"+fullMinutes(dateTime.getMinutes());\r\nreturn answer;\r\n}\r\n\r\n\r\n\r\nexport default class UserMessages extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            message:\"\",\r\n            filter: \"\",\r\n             id:window.location.hash.substring(11)\r\n            // id: \"Q1AKkgMzMS\"\r\n            // id:this.props.match.params.id\r\n        }\r\n    \r\n    }\r\n\r\n    componentDidMount(){\r\n        this.conv.scrollTop = this.conv.scrollHeight;\r\n        const { activeUser, allMessages,messageRead,allUsers } = this.props;\r\n        let theSender = userDetails(this.state.id, allUsers);\r\n        let conversation = usersMessages(activeUser, allMessages, theSender);\r\n        conversation.messages.forEach(message => {\r\n            console.log(\"from \"+message.from.id+theSender.id+\" is read? \"+message.read)\r\n            if (message.from.id===theSender.id && !message.read){\r\n                console.log('now should be read message '+message.id)\r\n                messageRead(message);\r\n            }\r\n        })\r\n    }\r\n    \r\n    render() {\r\n        let messageDate;\r\n        let pic;\r\n        let index=-1;\r\n        const { activeUser, handleLogout, allUsers, allMessages, addMessage,deleteMessage,markDeleted } = this.props;\r\n        let theSender = userDetails(this.state.id, allUsers);\r\n        console.log(this.state.id);\r\n        console.log(\"the sender\");\r\n        console.log(theSender);\r\n        \r\n        if (theSender.pic) { pic = theSender.pic[\"_url\"] } else { pic = \"https://aussiegossip.com.au/wp-content/uploads/2015/11/anonymous-logo-transparent-wallpaper-4.png\" }\r\n        let showConversation = [];\r\n        let conversation = usersMessages(activeUser, allMessages, theSender);\r\n        conversation.messages.forEach(message => {\r\n            index++;\r\n            messageDate=parseDateTime(message.createdAt);\r\n            console.log(message.from);\r\n            console.log(activeUser.id);\r\n            if (message.from.id === activeUser.id) {\r\n                showConversation.push(<Row>\r\n                    <Col xl=\"4\" lg=\"4\" md=\"4\" sm=\"4\" xs=\"4\" ></Col>\r\n                    <Col style={{display:\"flex\"}} xl=\"8\" lg=\"8\" md=\"8\" sm=\"8\" xs=\"8\" >\r\n                        <spam className=\"from\">\r\n                            <div style={{display:\"flex\"}}>\r\n                            <p  style={{color:\"red\"}}>You:</p>\r\n                            <img onClick={(e)=>{deleteMessage(e.target.id)}} className=\"deleteMessage\" id={message.id} style={{width:\"15px\",height:\"15px\",marginLeft:\"auto\",marginRight:\"5px\"}} src={deleteImg}></img>\r\n                            </div>\r\n                            <p>{message.text}</p>\r\n                            <div style={{display:\"flex\"}}>\r\n                            <img style={{width:\"15px\",height:\"15px\",marginRight:\"auto\",marginLeft:\"5px\"}} src={recievedMessage} hidden=\r\n                            {(message.read||!message.recieved)}\r\n                            ></img>\r\n                            <img style={{width:\"15px\",height:\"15px\",marginRight:\"auto\",marginLeft:\"5px\"}} src={readMessage} hidden={!message.read}></img>\r\n                            <p style={{fontSize:\"10px\",color:\"black\",marginLeft:\"auto\"}}>{messageDate}</p>\r\n                            </div>\r\n                        </spam>\r\n                    </Col>\r\n                </Row>)\r\n            }\r\n            else if(!message.deleted) {\r\n                showConversation.push(<Row>\r\n\r\n                    <Col xl=\"8\" lg=\"8\" md=\"8\" sm=\"8\" xs=\"8\" >\r\n                        <spam className=\"to\">\r\n                        <div style={{display:\"flex\"}}>\r\n                            <p>{theSender.fname}:</p>\r\n                            <img onClick={(e)=>{markDeleted(e.target.id)}}  className=\"deleteMessage\"  id={message.id} style={{width:\"15px\",height:\"15px\",marginLeft:\"auto\",marginRight:\"5px\"}} src={deleteImg}></img>\r\n                            </div>\r\n                            <p>{message.text}</p>\r\n                            <p style={{fontSize:\"10px\",color:\"black\",marginLeft:\"auto\"}}>{messageDate}</p>\r\n                        </spam>\r\n                    </Col>\r\n                    <Col xl=\"4\" lg=\"4\" md=\"4\" sm=\"4\" xs=\"4\" ></Col>\r\n                </Row>)\r\n            }\r\n        })\r\n        return (\r\n            <Container id=\"page-container\">\r\n                <DiamondNavbar cart={this.props.cart} allMessages={allMessages} activeUser={activeUser} handleLogout={handleLogout} />\r\n\r\n                <div className=\"userHeader\"><Image style={{ width: \"40px\" }} src={pic}></Image>{`  ${theSender.fname} ${theSender.lname}`}\r\n                </div>\r\n                <Container ref={(element)=>{this.conv=element}} className=\"body\">\r\n                    {showConversation}\r\n                </Container>\r\n                <div id=\"footer\">\r\n                    <InputGroup className=\"mb-0\">\r\n                        <FormControl\r\n                            value={this.state.message}\r\n                            onChange={(event)=>{\r\n                                let {message}=this.state;\r\n                                message=event.target.value;\r\n                                this.setState({message});\r\n                            }}\r\n                            placeholder=\"Write Something\"\r\n                            aria-label=\"User\"\r\n                            aria-describedby=\"basic-addon1\"\r\n                        />\r\n                         <InputGroup.Append>\r\n                             <Button onClick={()=>{\r\n                                     let {message}=this.state;\r\n                                    addMessage(message,activeUser.id,theSender.id);\r\n                                    message=\"\";\r\n                                    this.setState({message});\r\n                             }} \r\n                             variant=\"primary\">Send</Button>\r\n                         </InputGroup.Append>\r\n                    </InputGroup>\r\n                </div>\r\n\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\n","import React from 'react';\r\nimport { Container, InputGroup, FormControl, ListGroup,Image,Badge } from 'react-bootstrap'\r\nimport HomePageBody from '../components/HomePageBody'\r\nimport DiamondNavbar from '../components/DiamondNavbar';\r\nimport {usersMessages} from '../Classes/Message'\r\nimport { Redirect } from 'react-router-dom'\r\nimport {fullMinutes, parseDateTime} from '../components/UserMessages'\r\n\r\nexport class Messages extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            filter:\"\",\r\n            redirectTo:\"\"\r\n        }\r\n    }\r\n    filterUsers=(e)=>{\r\n        let {filter}=this.state;\r\n        filter=e.target.value;\r\n        this.setState({filter})\r\n    }\r\n    compareFunction=(a,b)=>{\r\n        if (a.new&&!b.new) {return -1}\r\n        else if (!a.new&&b.new)  {return 1}\r\n        else if (a.lastMessageRecieved>b.lastMessageRecieved) {return -1}\r\n        else return 1;\r\n    }\r\n  redirectToUserMessage(id){\r\n      let redirectTo=id;\r\n      this.setState({redirectTo});\r\n  }\r\n    render() {\r\n        if (this.state.redirectTo) {return <Redirect to={\"/messages/\"+this.state.redirectTo}/>}\r\n        const { activeUser, handleLogout, allUsers,allMessages } = this.props;\r\n        const {filter}=this.state;\r\n        let listUsers = [];\r\n        let pic;\r\n        let newMessages=\"\";\r\n        let allUsersSorted=[];\r\n        \r\n        if (!activeUser) {\r\n            return <Redirect to=\"/\" />\r\n        }\r\n\r\n        allUsers.forEach(user=>{\r\n            let userMessages=usersMessages(activeUser,allMessages,user)\r\n            allUsersSorted.push({user:user,new:userMessages.new,lastMessageRecieved:userMessages.last})\r\n        })\r\n        allUsersSorted.sort(this.compareFunction)\r\n        allUsersSorted.forEach(user => {\r\n            let lastMessageRecieved=\"\";\r\n            if (activeUser && activeUser.id!==user.user.id && ( user.user.username.toLowerCase().includes(filter.toLowerCase())||user.user.lname.toLowerCase().includes(filter.toLowerCase())||user.user.fname.toLowerCase().includes(filter.toLowerCase()))){\r\n                if (user.user.pic)  {pic=user.user.pic[\"_url\"]} else {pic=\"https://aussiegossip.com.au/wp-content/uploads/2015/11/anonymous-logo-transparent-wallpaper-4.png\"}\r\n                if (user.new) {newMessages=  <Badge pill variant=\"success\">{user.new} </Badge>} else {newMessages=\"\"}\r\n                if (user.lastMessageRecieved) lastMessageRecieved=(`${parseDateTime(user.lastMessageRecieved)}`)\r\n                listUsers.push(<ListGroup.Item style={{width:\"450px\"}}>\r\n                                <div className=\"pointer\" style={{border:\"1px solid\"}} onClick={()=>{ this.redirectToUserMessage(user.user.id)}}>\r\n                                    <Image style={{height:\"50px\"}} src={pic}>\r\n                                    </Image>\r\n                                    {`  ${user.user.username}: ${user.user.fname} ${user.user.lname} `}{newMessages}{\" \"+lastMessageRecieved}\r\n                                </div>\r\n                                </ListGroup.Item>)\r\n            }\r\n        });\r\n        return (\r\n            <Container >\r\n                <DiamondNavbar cart={this.props.cart}  allMessages={allMessages}  activeUser={activeUser} handleLogout={handleLogout} />\r\n                <h3>Messages:</h3>\r\n                <InputGroup  style={{width:\"450px\"}} onChange={this.filterUsers} className=\"mb-0\">\r\n                    <FormControl\r\n                   \r\n                        placeholder=\"Search user\"\r\n                        aria-label=\"User\"\r\n                        aria-describedby=\"basic-addon1\"\r\n                    />\r\n                </InputGroup>\r\n                <ListGroup>\r\n                    {listUsers}\r\n                </ListGroup>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\n","import { listPrice } from '../App'\r\nimport priceList from '../data/prices.json';\r\n\r\n//DIAMOND CLASS\r\nexport class Diamond1 {\r\n  constructor(diamond) {\r\n    this.id = diamond.id;\r\n    this.lotID = diamond.get(\"lotID\");\r\n    this.shape = diamond.get(\"shape\");\r\n    this.weight = diamond.get(\"weight\");\r\n    this.color = diamond.get(\"color\");\r\n    this.clarity = diamond.get(\"clarity\");\r\n    this.cut = diamond.get(\"cut\");\r\n    if (!this.cut) this.cut=\"\";\r\n    this.polish = diamond.get(\"polish\");\r\n    if (!this.polish) this.polish=\"\";\r\n    this.symmetry = diamond.get(\"symmetry\");\r\n    if (!this.symmetry) this.symmetry=\"\";\r\n    this.fluorescence = diamond.get(\"fluorescence\");\r\n    if (!this.fluorescence) this.fluorescence=\"\";\r\n    this.fluorescenceColor = diamond.get(\"fluorescenceColor\");\r\n    if (!this.fluorescenceColor) this.fluorescenceColor=\"\";\r\n    this.lab = diamond.get(\"lab\");\r\n    if (!this.lab) this.lab=\"\";\r\n    this.certificateNumber = diamond.get(\"certificateNumber\");\r\n    if (!this.certificateNumber) this.certificateNumber=\"\";\r\n    this.depth = diamond.get(\"depth\");\r\n    if (!this.depth) this.depth=\"\";\r\n    this.table = diamond.get(\"table\");\r\n    if (!this.table) this.table=\"\";\r\n    this.crownAngle = diamond.get(\"crownAngle\");\r\n    if (!this.crownAngle) this.crownAngle=\"\";\r\n    this.crownHeight = diamond.get(\"crownHeight\");\r\n    if (!this.crownHeight) this.pocrownHeightlish=\"\";\r\n    this.pavillionAngle = diamond.get(\"pavillionAnglecut\");\r\n    if (!this.pavillionAnglecut) this.pavillionAnglecut=\"\";\r\n    this.pavillionDepth = diamond.get(\"pavillionDepth\");\r\n    if (!this.pavillionDepth) this.pavillionDepth=\"\";\r\n    this.starLength = diamond.get(\"starLength\");\r\n    if (!this.starLength) this.starLength=\"\";\r\n    this.lowerHalf = diamond.get(\"lowerHalf\");\r\n    if (!this.lowerHalf) this.lowerHalf=\"\";\r\n    this.girdle = diamond.get(\"girdle\");\r\n    if (!this.girdle) this.girdle=\"\";\r\n    this.culet = diamond.get(\"culet\");\r\n    if (!this.culet) this.culet=\"\";\r\n    this.list = listPrice(this.shape, this.color, this.clarity, this.weight, priceList.response.body.price);\r\n    this.discount = diamond.get(\"discount\");\r\n    if (!this.discount) this.discount=\"\";\r\n    this.pricePerCarat = diamond.get(\"pricePerCarat\");\r\n    if (!this.pricePerCarat) this.pricePerCarat=\"\";\r\n    this.links = diamond.get(\"links\");\r\n    if (!this.links) this.links=[];\r\n    this.inclusions = diamond.get(\"inclusions\");\r\n    if (!this.inclusions) this.inclusions=\"\";\r\n    this.owner = diamond.get(\"owner\");\r\n    if (!this.owner) this.owner=\"\";\r\n    this.keepDiscount = diamond.get(\"keepDiscount\");\r\n    if (!this.keepDiscount) this.keepDiscount=\"\";\r\n    this.diamMin = diamond.get(\"diamMin\");\r\n    if (!this.diamMin) this.diamMin=\"\";\r\n    this.diamMax = diamond.get(\"diamMax\");\r\n    if (!this.diamMax) this.diamMax=\"\";\r\n    this.deptAvg = diamond.get(\"deptAvg\");\r\n    if (!this.deptAvg) this.deptAvg=\"\";\r\n    let pic1 = diamond.get(\"pic1\");\r\n    if (pic1) { this.pic1 = { file:pic1,name: pic1[\"_name\"], url: pic1[\"_url\"] } } else this.pic1 = {};\r\n     let pic2 = diamond.get(\"pic2\");\r\n    if (!pic2) { this.pic2 = {} } else { this.pic2 = {file:pic2, name: pic2[\"_name\"], url: pic2[\"_url\"] } }\r\n    if (this.list) {\r\n      if (!this.keepDiscount)\r\n        this.discount = 100 - 100 * (this.pricePerCarat / (this.list))\r\n      else this.pricePerCarat = this.list * (100 - this.discount) / 100\r\n    }\r\n\r\n  }\r\n  measurements() { return this.diamMin + \"-\" + this.diamMax + \"*\" + this.deptAvg }\r\n  inFilter(filter) {\r\n\r\n    if ((filter.shape.includes(this.shape)|| !filter.shape.length)\r\n      && this.color >= filter.colorMin\r\n      && this.color <= filter.colorMax\r\n      && clarityValue(this.clarity) >= clarityValue(filter.clarityMin)\r\n      && clarityValue(this.clarity) <= clarityValue(filter.clarityMax)\r\n      && (this.weight >= filter.weightMin || filter.weightMin===\"\")\r\n      && (this.weight <= filter.weightMax || filter.weightMax===\"\")) return true;\r\n\r\n    return false;\r\n  }\r\n}\r\n\r\nexport function clarityValue(clarity) {\r\n  switch (clarity) {\r\n    case \"FL\":\r\n      return 0\r\n      break;\r\n    case \"IF\":\r\n      return 1\r\n      break;\r\n    case \"VVS1\":\r\n      return 2\r\n      break;\r\n    case \"VVS2\":\r\n      return 3\r\n      break;\r\n    case \"VS1\":\r\n      return 4\r\n      break;\r\n    case \"VS2\":\r\n      return 5\r\n      break;\r\n    case \"SI1\":\r\n      return 6\r\n      break;\r\n    case \"SI2\":\r\n      return 7\r\n      break;\r\n    case \"SI3\":\r\n      return 8\r\n      break;\r\n    case \"I1\":\r\n      return 9\r\n      break;\r\n    case \"I2\":\r\n      return 10\r\n      break;\r\n    case \"I3\":\r\n      return 11\r\n      break;\r\n    default:\r\n      return false;\r\n  }\r\n}\r\nexport function colorValue(color) {\r\n  switch (color) {\r\n    case \"D\":\r\n      return 0\r\n      break;\r\n    case \"E\":\r\n      return 1\r\n      break;\r\n    case \"F\":\r\n      return 2\r\n      break;\r\n    case \"G\":\r\n      return 3\r\n      break;\r\n    case \"H\":\r\n      return 4\r\n      break;\r\n    case \"I\":\r\n      return 5\r\n      break;\r\n    case \"J\":\r\n      return 6\r\n      break;\r\n    case \"K\":\r\n      return 7\r\n      break;\r\n    case \"L\":\r\n      return 8\r\n      break;\r\n    case \"M\":\r\n      return 9\r\n      break;\r\n    case \"N\":\r\n      return 10\r\n      break;\r\n    case \"OP\":\r\n      return 11\r\n      break;\r\n    case \"QR\":\r\n      return 12\r\n      break;\r\n      case \"ST\":\r\n        return 13\r\n        break;\r\n        case \"UV\":\r\n          return 14\r\n          break;\r\n          case \"WX\":\r\n            return 15\r\n            break;\r\n            case \"YZ\":\r\n              return 16\r\n              break;\r\n    default:\r\n      return false;\r\n  }\r\n}","import React from 'react';\r\nimport { Button, Image, Row, Col } from 'react-bootstrap';\r\n\r\n\r\nclass ListOfLinks extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        let parse = [];\r\n        for (var i = 0; i < this.props.links.length; i++) {\r\n            parse.push(\r\n                <Row style={{ margin: \"10px\", border: \"1px solid green\"}}>\r\n                    <Col style={{display:\"flex\",alignItems:\"center\",justifyContent:\"center\"}} md=\"6\" sm=\"6\">\r\n                        {this.props.links[i].substring(0, 30)+\"......\"}\r\n                    </Col>\r\n                    <Col style={{display:\"flex\",alignItems:\"center\",justifyContent:\"center\"}} md=\"3\" sm=\"2\">\r\n                        <Image src={this.props.links[i]} style={{ width: \"50px\" }} />\r\n                    </Col>\r\n                    <Col style={{display:\"flex\",alignItems:\"center\",justifyContent:\"center\"}} md=\"3\" sm=\"4\">\r\n                        <Button onClick={() => { this.props.deleteLink(i) }}>\r\n                            Delete Me\r\n                                </Button>\r\n                    </Col>\r\n                </Row>);\r\n\r\n\r\n\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                {parse}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default ListOfLinks;","import React from 'react'\r\nimport { Button, Modal, InputGroup, Image, Form, Row, Col, FormControl, Container, Nav } from 'react-bootstrap'\r\nimport { listPrice } from '../App'\r\nimport { Diamond1 } from '../Classes/Diamond'\r\nimport diamondsShape from '../data/Shapes.png'\r\nimport ListOfLinks from './ListOfLinks'\r\nimport { Redirect } from 'react-router-dom'\r\nimport excel from '../data/38-383271_excel-logo-png-microsoft-excel-logo-transparent-png.png'\r\n\r\n\r\n//this class renders \r\n//1. edit/new diamond modal\r\n//2. new diamond button\r\n//3. upload from excell icon link\r\n//4. filter button to show only activeUser listings\r\n// will render only if activeUser is not null\r\n\r\nexport default class AddDiamond extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        //if modal is called for listing a new diamond\r\n        if (this.props.edit === -1 && this.props.activeUser) {\r\n            this.state = {\r\n                linktoAdd: \"\",\r\n                modal: false,\r\n                disableSave: true,\r\n                page: 0,\r\n                diamond: {\r\n                    id: \"\",\r\n                    lotID: \"\",\r\n                    shape: \"\",\r\n                    weight: \"\",\r\n                    color: \"\",\r\n                    clarity: \"\",\r\n                    cut: \"\",\r\n                    polish: \"\",\r\n                    symmetry: \"\",\r\n                    fluorescence: \"\",\r\n                    fluorescenceColor: \"\",\r\n                    lab: \"\",\r\n                    certificateNumber: \"\",\r\n                    depth: \"\",\r\n                    table: \"\",\r\n                    crownAngle: \"\",\r\n                    crownHeight: \"\",\r\n                    pavillionAngle: \"\",\r\n                    pavillionDepth: \"\",\r\n                    starLength: \"\",\r\n                    lowerHalf: \"\",\r\n                    girdle: \"\",\r\n                    culet: \"\",\r\n                    list: 0,\r\n                    discount: \"\",\r\n                    pricePerCarat: \"\",\r\n                    links: [],\r\n                    inclusions: \"\",\r\n                    keepDiscount: true,\r\n                    diamMin: \"\",\r\n                    diamMax: \"\",\r\n                    deptAvg: \"\",\r\n                    pic1: {},\r\n                    pic2: {},\r\n                    owner: this.props.activeUser.id\r\n\r\n                }\r\n            }\r\n        }\r\n        //if modal is called for editing a diamond\r\n        else if (this.props.activeUser) {\r\n            this.state = {\r\n                modal: true,\r\n                page: 0,\r\n                disableSave: true,\r\n                diamond: {\r\n                    id: this.props.diamonds[this.props.edit].id,\r\n                    lotID: this.props.diamonds[this.props.edit].lotID,\r\n                    shape: this.props.diamonds[this.props.edit].shape,\r\n                    weight: this.props.diamonds[this.props.edit].weight,\r\n                    color: this.props.diamonds[this.props.edit].color,\r\n                    clarity: this.props.diamonds[this.props.edit].clarity,\r\n                    cut: this.props.diamonds[this.props.edit].cut,\r\n                    polish: this.props.diamonds[this.props.edit].polish,\r\n                    symmetry: this.props.diamonds[this.props.edit].symmetry,\r\n                    fluorescence: this.props.diamonds[this.props.edit].fluorescence,\r\n                    fluorescenceColor: this.props.diamonds[this.props.edit].fluorescenceColor,\r\n                    lab: this.props.diamonds[this.props.edit].lab,\r\n                    certificateNumber: this.props.diamonds[this.props.edit].certificateNumber,\r\n                    depth: this.props.diamonds[this.props.edit].depth,\r\n                    table: this.props.diamonds[this.props.edit].table,\r\n                    crownAngle: this.props.diamonds[this.props.edit].crownAngle,\r\n                    crownHeight: this.props.diamonds[this.props.edit].crownHeight,\r\n                    pavillionAngle: this.props.diamonds[this.props.edit].pavillionAngle,\r\n                    pavillionDepth: this.props.diamonds[this.props.edit].pavillionDepth,\r\n                    starLength: this.props.diamonds[this.props.edit].starLength,\r\n                    lowerHalf: this.props.diamonds[this.props.edit].lowerHalf,\r\n                    girdle: this.props.diamonds[this.props.edit].girdle,\r\n                    culet: this.props.diamonds[this.props.edit].culet,\r\n                    list: this.props.diamonds[this.props.edit].list,\r\n                    discount: this.props.diamonds[this.props.edit].discount,\r\n                    pricePerCarat: this.props.diamonds[this.props.edit].pricePerCarat,\r\n                    links: this.props.diamonds[this.props.edit].links,\r\n                    inclusions: this.props.diamonds[this.props.edit].inclusions,\r\n                    keepDiscount: this.props.diamonds[this.props.edit].keepDiscount,\r\n                    diamMin: this.props.diamonds[this.props.edit].diamMin,\r\n                    diamMax: this.props.diamonds[this.props.edit].diamMax,\r\n                    deptAvg: this.props.diamonds[this.props.edit].deptAvg,\r\n                    owner: this.props.diamonds[this.props.edit].owner,\r\n                    pic1: this.props.diamonds[this.props.edit].pic1,\r\n                    pic2: this.props.diamonds[this.props.edit].pic2,\r\n\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            //no activeUser\r\n            this.state = {\r\n                modal: true,\r\n                page: 0,\r\n                disableSave: true,\r\n                diamond: null\r\n            }\r\n\r\n        }\r\n    }\r\n    // if modal is called to be open again, need to read new props to decide if to edit or add new\r\n    componentWillReceiveProps(nextProps) {\r\n        let newState;\r\n        if (nextProps.edit === -1 && nextProps.activeUser) {\r\n            newState = {\r\n                modal: false,\r\n                disableSave: true,\r\n                page: 0,\r\n                diamond: {\r\n                    id: \"\",\r\n                    lotID: \"\",\r\n                    shape: \"\",\r\n                    weight: \"\",\r\n                    color: \"\",\r\n                    clarity: \"\",\r\n                    cut: \"\",\r\n                    polish: \"\",\r\n                    symmetry: \"\",\r\n                    fluorescence: \"\",\r\n                    fluorescenceColor: \"\",\r\n                    lab: \"\",\r\n                    certificateNumber: \"\",\r\n                    depth: \"\",\r\n                    table: \"\",\r\n                    crownAngle: \"\",\r\n                    crownHeight: \"\",\r\n                    pavillionAngle: \"\",\r\n                    pavillionDepth: \"\",\r\n                    starLength: \"\",\r\n                    lowerHalf: \"\",\r\n                    girdle: \"\",\r\n                    culet: \"\",\r\n                    list: 0,\r\n                    discount: \"\",\r\n                    pricePerCarat: \"\",\r\n                    links: [],\r\n                    inclusions: \"\",\r\n                    keepDiscount: true,\r\n                    diamMin: \"\",\r\n                    diamMax: \"\",\r\n                    deptAvg: \"\",\r\n                    owner: nextProps.activeUser.id,\r\n                    pic1: {},\r\n                    pic2: {}\r\n\r\n                }\r\n            }\r\n        }\r\n        else if (nextProps.activeUser) {\r\n            newState = {\r\n                modal: true,\r\n                page: 0,\r\n                disableSave: true,\r\n                diamond: nextProps.diamonds[nextProps.edit]\r\n\r\n            }\r\n        }\r\n        else {\r\n            newState = {\r\n                modal: true,\r\n                page: 0,\r\n                disableSave: true,\r\n                diamond: null\r\n            }\r\n\r\n\r\n        }\r\n        this.setState(newState)\r\n    }\r\n\r\n//toggles modal\r\n    toggle = () => {\r\n        this.setState({\r\n            modal: !this.state.modal\r\n        });\r\n    }\r\n    //closes modal\r\n    handleClose = () => {\r\n        this.setState({\r\n            modal: false\r\n        });\r\n\r\n    }\r\n\r\n    //detects on which diamond shape the user has clicked\r\n    detectMouse = (event) => {\r\n        let { diamond } = this.state;\r\n        var cx = event.clientX;\r\n        var width = document.body.clientWidth;\r\n        // var modalWidth = $(\"#modalAdd\").width();\r\n        var modalWidth = document.getElementById(\"modalAdd\").offsetWidth;\r\n        var ratio = (cx - (width - modalWidth) / 2) / modalWidth;\r\n\r\n        if (ratio <= 0.085 && ratio >= 0.037) {\r\n            diamond.shape = \"BR\"\r\n        }\r\n        else if (ratio <= 0.154 && ratio >= 0.1) {\r\n            diamond.shape = \"PR\"\r\n        }\r\n        else if (ratio <= 0.24 && ratio >= 0.175) {\r\n            diamond.shape = \"OV\"\r\n        }\r\n        else if (ratio <= 0.34 && ratio >= 0.26) {\r\n            diamond.shape = \"MQ\"\r\n        }\r\n        else if (ratio <= 0.41 && ratio >= 0.357) {\r\n            diamond.shape = \"HS\"\r\n        }\r\n        else if (ratio <= 0.492 && ratio >= 0.43) {\r\n            diamond.shape = \"EM\"\r\n        }\r\n        else if (ratio <= 0.58 && ratio >= 0.51) {\r\n            diamond.shape = \"PS\"\r\n        }\r\n        else if (ratio <= 0.664 && ratio >= 0.61) {\r\n            diamond.shape = \"AS\"\r\n        }\r\n        else if (ratio <= 0.75 && ratio >= 0.69) {\r\n            diamond.shape = \"CU\"\r\n        }\r\n        else if (ratio <= 0.824 && ratio >= 0.77) {\r\n            diamond.shape = \"TR\"\r\n        }\r\n        else if (ratio <= 0.89 && ratio >= 0.85) {\r\n            diamond.shape = \"BG\"\r\n        }\r\n        else if (ratio <= 0.97 && ratio >= 0.91) {\r\n            diamond.shape = \"RAD\"\r\n        }\r\n        //    let page=2;\r\n        let disableSave = false;\r\n\r\n        this.setState({\r\n            // page,\r\n            disableSave,\r\n            diamond\r\n        })\r\n    }\r\n\r\n    //a few functions to read the input\r\n\r\n    getCertNum = () => {\r\n        let disableSave = false;\r\n        let { diamond } = this.state;\r\n        diamond.certificateNumber = this.certNumInput.value;\r\n        this.setState({ disableSave, diamond })\r\n    }\r\n    getLotId = () => {\r\n        let disableSave = false;\r\n        let { diamond } = this.state;\r\n        diamond.lotID = this.textInput.value\r\n\r\n        this.setState({\r\n\r\n            disableSave,\r\n            diamond\r\n        })\r\n    }\r\n    getLab = (element) => {\r\n        let disableSave = false;\r\n        let { diamond } = this.state;\r\n        let page;\r\n        diamond.lab = element.target.id;\r\n        if (element.target.id === \"None\") {\r\n            diamond.certificateNumber = \"\"\r\n        }\r\n        this.setState({\r\n            disableSave,\r\n            diamond\r\n        })\r\n    }\r\n    getWCC = () => {\r\n        let disableSave = false;\r\n        let { diamond } = this.state;\r\n\r\n        if (Number(this.weightInput.value) > 0) {\r\n            this.state.diamond.weight = Number(this.weightInput.value)\r\n        }\r\n        diamond.color = this.colorInput.value\r\n        diamond.clarity = this.clarityInput.value\r\n\r\n\r\n        if (this.state.diamond.shape && this.state.diamond.color && this.state.diamond.clarity && this.state.diamond.weight) {\r\n            diamond.list = listPrice(this.state.diamond.shape, this.state.diamond.color, this.state.diamond.clarity, this.state.diamond.weight, this.props.prices)\r\n        }\r\n        else diamond.list = 0;\r\n\r\n        this.setState({ disableSave, diamond })\r\n    }\r\n    getOther = () => {\r\n        let disableSave = false;\r\n        let { diamond } = this.state;\r\n        diamond.cut = this.cutInput.value;\r\n        diamond.polish = this.polishInput.value;\r\n        diamond.symmetry = this.symmetryInput.value;\r\n        diamond.fluorescence = this.fluorescenceInput.value;\r\n        diamond.fluorescenceColor = this.fluorescenceColorInput.value;\r\n        diamond.depth = this.depthInput.value;\r\n        diamond.table = this.tableInput.value;\r\n        diamond.girdle = this.girdleInput.value;\r\n        diamond.culet = this.culetInput.value;\r\n        diamond.crownAngle = this.crownAngleInput.value;\r\n        diamond.crownHeight = this.crownHeightInput.value;\r\n        diamond.pavillionAngle = this.pavillionAngleInput.value;\r\n        diamond.pavillionDepth = this.pavillionDepthInput.value;\r\n        diamond.lowerHalf = this.lowerHalfInput.value;\r\n\r\n        this.setState({ disableSave, diamond })\r\n    }\r\n    getPrices = () => {\r\n        let disableSave = false;\r\n        let { diamond } = this.state;\r\n\r\n        if (diamond.list) {\r\n            if (this.checkInput.value == \"on\") {\r\n                diamond.pricePerCarat = Math.round(diamond.list * (100 - Number(this.discountInput.value)) / 100);\r\n                diamond.discount = Number(this.discountInput.value);\r\n                diamond.keepDiscount = true;\r\n            }\r\n            else {\r\n                diamond.pricePerCarat = Number(this.priceInput.value);\r\n                diamond.discount = 100 - Math.round(Number(this.priceInput.value) / diamond.list * 10000) / 100;\r\n                diamond.keepDiscount = false;\r\n            }\r\n        } else {\r\n            diamond.pricePerCarat = Number(this.priceInput.value);\r\n            diamond.keepDiscount = false;\r\n        }\r\n\r\n\r\n        this.setState({ disableSave, diamond })\r\n    }\r\n    prepareLink = () => {\r\n        let linktoAdd = this.linkToAddInput.value;\r\n        this.setState({ linktoAdd })\r\n    }\r\n    addLink = () => {\r\n        let { linktoAdd, diamond } = this.state;\r\n        if (linktoAdd) {\r\n            diamond.links.push(linktoAdd);\r\n            let newState = {\r\n                linktoAdd: \"\",\r\n                disableSave: false,\r\n                diamond: diamond\r\n            }\r\n\r\n            this.setState(newState)\r\n        }\r\n    }\r\n    deleteLink = (index) => {\r\n\r\n        let { diamond } = this.state;\r\n        var newArr = diamond.links.splice(index, 1);\r\n        diamond.links = newArr\r\n        this.setState({\r\n            disableSave: false,\r\n            diamond: diamond\r\n        });\r\n    }\r\n    imgChange = (ev) => {\r\n        let { diamond, disableSave } = this.state;\r\n        disableSave = false;\r\n        let diamondImg = {};\r\n        diamondImg.file = ev.target.files[0];\r\n        console.log(\"file\");\r\n        console.log(diamondImg.file)\r\n        if (diamondImg.file) {\r\n            diamondImg.url = URL.createObjectURL(diamondImg.file);\r\n            diamondImg.name = diamondImg.file.name\r\n        } else {\r\n            diamondImg = {};\r\n        }\r\n        console.log(ev.target.id)\r\n        if (ev.target.id === \"formFile1\") { diamond.pic1 = diamondImg } else { diamond.pic2 = diamondImg }\r\n        this.setState({ diamond, disableSave });\r\n    }\r\n    deleteImg = (ev) => {\r\n        let { diamond, disableSave } = this.state;\r\n        disableSave = false;\r\n        console.log(ev.target.id === \"deleteBtn1\")\r\n        if (ev.target.id === \"deleteBtn1\") { diamond.pic1 = {} } else { diamond.pic2 = {} }\r\n\r\n        this.setState({ diamond, disableSave });\r\n    }\r\n\r\n //flipping pages in the input modal   \r\n nextPage = () => {\r\n    let { page } = this.state;\r\n    page++;\r\n\r\n    this.setState({ page })\r\n}\r\npreviousPage = () => {\r\n    let { page } = this.state;\r\n    page--;\r\n\r\n    this.setState({ page })\r\n}\r\n\r\n//finish with the edit/adding of diamond\r\n\r\n    saveDiamond = () => {\r\n        const { diamond } = this.state;\r\n        const { edit } = this.props;\r\n        this.props.saveDiamond(diamond, edit)\r\n\r\n    }\r\n//filtering to the activeuser listings only\r\n    myListings = () => {\r\n        let { filter } = this.props;\r\n        filter.owner = true;\r\n        this.props.setFilter(filter);\r\n    }\r\n    \r\n//rendering the modal input form\r\n    render() {\r\n        let pic1, pic2;\r\n        if (!this.props.activeUser || !this.state.diamond) return false;\r\n        if (this.state.diamond.pic1 !== {}) { pic1 = { name: this.state.diamond.pic1.name, url: this.state.diamond.pic1.url, hidden: false } } else pic1 = { name: null, url: null, hidden: true }\r\n        if (this.state.diamond.pic2 !== {}) { pic2 = { name: this.state.diamond.pic2.name, url: this.state.diamond.pic2.url, hidden: false } } else pic2 = { name: null, url: null, hidden: true }\r\n\r\n        let parse = [];\r\n        //if modal is closed and we are still in edit mode, cancel edit mode\r\n        if (!this.state.modal && this.props.edit !== -1) this.props.cancelEdit();\r\n\r\n        if (this.state.diamond.lotID === \"\" || this.state.diamond.shape === \"\" || this.state.diamond.weight === \"\" || this.state.diamond.color === \"\" || this.state.diamond.clarity === \"\" || this.state.page === 0) {\r\n            parse.push(\r\n\r\n                <Modal.Body key={this.state.diamond.lotID}>Lot ID\r\n                                <InputGroup className=\"mb-3\">\r\n                        <InputGroup.Prepend>\r\n                            <InputGroup.Text id=\"basic-addon1\"></InputGroup.Text>\r\n                        </InputGroup.Prepend>\r\n                        <FormControl onChange={this.getLotId} defaultValue={this.state.diamond.lotID} ref={(element) => { this.textInput = element }}\r\n                            placeholder=\"Enter Lot ID\"\r\n                        />\r\n                    </InputGroup>Choose shape\r\n                         <Image onClick={this.detectMouse} style={{ width: \"100%\" }} src={diamondsShape} rounded />\r\n                    <h3>Shape selected: {this.state.diamond.shape}</h3>\r\n                    Weight\r\n                                 <InputGroup className=\"mb-3\">\r\n\r\n                        <FormControl onChange={this.getWCC} defaultValue={this.state.diamond.weight} ref={(element) => { this.weightInput = element }}\r\n                            placeholder=\"Carat Weight\"\r\n                        />\r\n                    </InputGroup>\r\n                    <Form.Group controlId=\"exampleForm.ControlSelect1\">\r\n                        <Form.Label>Color</Form.Label>\r\n                        <Form.Control onChange={this.getWCC} defaultValue={this.state.diamond.color} ref={(element) => { this.colorInput = element }} as=\"select\" >\r\n                            <option value=\"\"></option>\r\n                            <option value=\"D\">D</option>\r\n                            <option value=\"E\">E</option>\r\n                            <option value=\"F\">F</option>\r\n                            <option value=\"G\">G</option>\r\n                            <option value=\"H\">H</option>\r\n                            <option value=\"I\">I</option>\r\n                            <option value=\"J\">J</option>\r\n                            <option value=\"K\">K</option>\r\n                            <option value=\"L\">L</option>\r\n                            <option value=\"M\">M</option>\r\n                            <option value=\"N\">N</option>\r\n                            <option value=\"OP\">OP</option>\r\n                            <option value=\"QR\">QR</option>\r\n                            <option value=\"ST\">ST</option>\r\n                            <option value=\"UV\">UV</option>\r\n                            <option value=\"WX\">WX</option>\r\n                            <option value=\"YZ\">YZ</option>\r\n                            <option value=\"LIGHT FANCY\">F0-LIGHT FANCY</option>\r\n                            <option value=\"FANCY\">F1-FANCY</option>\r\n                            <option value=\"FANCY VIVID\">F2-FANCY VIVID</option>\r\n                            <option value=\"FANCY INTENCE\">F3-FANCY INTENCE</option>\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"exampleForm.ControlSelect1\">\r\n                        <Form.Label>Clarity</Form.Label>\r\n                        <Form.Control onChange={this.getWCC} defaultValue={this.state.diamond.clarity} ref={(element) => { this.clarityInput = element }} as=\"select\" >\r\n                            <option value=\"\"></option>\r\n                            <option value=\"FL\">FL</option>\r\n                            <option value=\"IF\">IF</option>\r\n                            <option value=\"VVS1\">VVS1</option>\r\n                            <option value=\"VVS2\">VVS2</option>\r\n                            <option value=\"VS1\">VS1</option>\r\n                            <option value=\"VS2\">VS2</option>\r\n                            <option value=\"SI1\">SI1</option>\r\n                            <option value=\"SI2\">SI2</option>\r\n                            <option value=\"SI3\">SI3</option>\r\n                            <option value=\"I1\">I1</option>\r\n                            <option value=\"I2\">I2</option>\r\n                            <option value=\"I3\">I3</option>\r\n\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                </Modal.Body>\r\n\r\n            )\r\n        }\r\n\r\n        else\r\n            if (this.state.diamond.lab === \"\" || this.state.page === 1) {\r\n                parse.push(\r\n\r\n                    <Modal.Body><h2>Lab</h2>\r\n                        <Row>\r\n\r\n                            <Col lg=\"2\" md=\"3\" sm=\"4\" xs=\"4\">\r\n                                <Container className=\"certChoose\">\r\n                                    <a href=\"javascript:;\">\r\n                                        <h5 className=\"h5Cert\">GIA</h5>\r\n                                        <Image id=\"GIA\" onClick={this.getLab} style={{ width: \"70px\", border: \"1px solid blue\" }} src=\"https://miro.medium.com/max/1552/1*QAU1nlE_xhhKtZqxk13qkg.png\" rounded />\r\n                                    </a >\r\n                                </Container>\r\n                            </Col>\r\n\r\n\r\n                            <Col lg=\"2\" md=\"3\" sm=\"4\" xs=\"4\">\r\n                                <Container className=\"certChoose\">\r\n                                    <a href=\"javascript:;\" >\r\n                                        <h5 className=\"h5Cert\">EGL US</h5>\r\n                                        <Image id=\"EGL USA\" onClick={this.getLab} style={{ width: \"70px\", border: \"1px solid blue\" }} src=\"https://pbs.twimg.com/profile_images/2642768167/40f68a476a1518fc8069369fa65772c5_400x400.png\" rounded />\r\n                                    </a>\r\n                                </Container>\r\n                            </Col>\r\n                            <Col lg=\"2\" md=\"3\" sm=\"4\" xs=\"4\">\r\n                                <Container className=\"certChoose\">\r\n                                    <a href=\"javascript:;\" >\r\n\r\n                                        <h5 className=\"h5Cert\">EGL EU</h5>\r\n                                        <Image id=\"EGL EUROPE\" onClick={this.getLab} style={{ width: \"70px\", border: \"1px solid blue\" }} src=\" https://blog.brilliance.com/wp-content/uploads/2009/11/EGL.jpg\" rounded />\r\n                                    </a>\r\n                                </Container>\r\n                            </Col>\r\n\r\n                            <Col lg=\"2\" md=\"3\" sm=\"4\" xs=\"4\">\r\n                                <Container className=\"certChoose\">\r\n                                    <a href=\"javascript:;\" >\r\n                                        <h5 className=\"h5Cert\">HRD</h5>\r\n                                        <Image id=\"HRD\" onClick={this.getLab} style={{ width: \"70px\", border: \"1px solid blue\" }} src=\"https://is2-ssl.mzstatic.com/image/thumb/Purple128/v4/3b/79/e0/3b79e06e-78b0-2e30-61eb-41b074cb9744/source/512x512bb.jpg\" rounded />\r\n                                    </a>\r\n                                </Container>\r\n                            </Col>\r\n\r\n                            <Col lg=\"2\" md=\"3\" sm=\"4\" xs=\"4\">\r\n                                <Container className=\"certChoose\">\r\n                                    <a href=\"javascript:;\" >\r\n                                        <h5 className=\"h5Cert\">IGI</h5>\r\n                                        <Image id=\"IGI\" onClick={this.getLab} style={{ width: \"70px\", border: \"1px solid blue\" }} src=\"  https://qph.fs.quoracdn.net/main-qimg-54bbfbbb192682043358f75f481f63b5\" rounded />\r\n                                    </a>\r\n                                </Container>\r\n                            </Col>\r\n\r\n                            <Col lg=\"2\" md=\"3\" sm=\"4\" xs=\"4\">\r\n                                <Container className=\"certChoose\">\r\n                                    <a href=\"javascript:;\" >\r\n                                        <h5 className=\"h5Cert\">AGS</h5>\r\n                                        <Image id=\"AGS\" onClick={this.getLab} style={{ width: \"70px\", border: \"1px solid blue\" }} src=\"https://www.vividventure.com/upload/544.jpg\" rounded />\r\n                                    </a>\r\n                                </Container>\r\n                            </Col>\r\n\r\n                            <Col lg=\"2\" md=\"3\" sm=\"4\" xs=\"4\">\r\n                                <Container className=\"certChoose\">\r\n                                    <a href=\"javascript:;\" >\r\n                                        <h5 className=\"h5Cert\">NONE</h5>\r\n                                        <Image id=\"None\" onClick={this.getLab} style={{ width: \"70px\", border: \"1px solid blue\" }} src=\"https://www.clipart1001.com/wp-content/uploads/2018/12/Roblox-Clipart-Black-And-Outline.jpg\" rounded />\r\n                                    </a>\r\n                                </Container>\r\n                            </Col>\r\n\r\n                        </Row>\r\n                        <h3>Certificate Lab selected: {this.state.diamond.lab}</h3>\r\n                        <h2>Certificate Number</h2>\r\n                        <InputGroup className=\"mb-3\">\r\n\r\n                            <FormControl onChange={this.getCertNum} defaultValue={this.state.diamond.certificateNumber} ref={(element) => { this.certNumInput = element }}\r\n                                placeholder=\"Certificate number\"\r\n                            />\r\n                        </InputGroup>\r\n\r\n                    </Modal.Body>\r\n\r\n                )\r\n            }\r\n            else\r\n                if (this.state.diamond.pricePerCarat === \"\" || this.state.page === 2) {\r\n\r\n                    parse.push(\r\n                        <Modal.Body>\r\n                            <h3>price list for {this.state.diamond.shape} {this.state.diamond.weight} {this.state.diamond.color}  {this.state.diamond.clarity} : {this.state.diamond.list}</h3>\r\n                            <p> In case of priceChange, calculate prices and discounts by:</p>\r\n                            <Form.Group as={Row}>\r\n                                <Form.Label as=\"legend\" column sm={2}>\r\n                                </Form.Label>\r\n                                <Col sm={10}>\r\n                                    <Form.Check onChange={this.getPrices} ref={(element) => { this.checkInput = element }}\r\n                                        type=\"radio\"\r\n                                        label=\"keeping Discount unchanged\"\r\n                                        name=\"formHorizontalRadios\"\r\n                                        id=\"formHorizontalRadios1\"\r\n                                        checked\r\n                                    />\r\n                                    <Form.Check\r\n                                        type=\"radio\"\r\n                                        label=\"keeping price per carat unchanged\"\r\n                                        name=\"formHorizontalRadios\"\r\n                                        id=\"formHorizontalRadios2\"\r\n                                    />\r\n                                </Col>\r\n                            </Form.Group>\r\n                            <h2>Price Per Carat</h2>\r\n                            <InputGroup className=\"mb-3\">\r\n                                <span> <FormControl\r\n                                    defaultValue={this.state.diamond.pricePerCarat}\r\n                                    ref={(element) => { this.priceInput = element }}\r\n                                    onChange={() => {\r\n                                        if (this.state.diamond.list) { this.discountInput.value = 100 - (Math.round(((Number(this.priceInput.value)) / this.state.diamond.list) * 10000)) / 100 };\r\n                                        this.getPrices();\r\n                                    }\r\n\r\n                                    }\r\n\r\n                                    placeholder=\"price per carat\"\r\n                                />$</span>\r\n                            </InputGroup>\r\n                            <h2>Discount</h2>\r\n                            <InputGroup className=\"mb-3\">\r\n                                <span><FormControl\r\n                                    defaultValue={this.state.diamond.discount}\r\n                                    ref={(element) => { this.discountInput = element }}\r\n                                    onChange={() => {\r\n                                        if (this.state.diamond.list) { this.priceInput.value = Math.round(this.state.diamond.list * (100 - (Number(this.discountInput.value))) / 100) };\r\n                                        this.getPrices();\r\n                                    }\r\n                                    }\r\n\r\n                                    placeholder=\"Discount %\"\r\n                                />%</span>\r\n                            </InputGroup>\r\n                        </Modal.Body>\r\n\r\n                    )\r\n                }\r\n                else\r\n                    if (this.state.page === 3) {\r\n                        parse.push(\r\n                            <Modal.Body className=\"modalAddBody\">\r\n                                <Row>\r\n                                    <Col lg=\"2\" md=\"3\" sm=\"4\" xs=\"6\">\r\n                                        <Form.Group controlId=\"exampleForm.ControlSelect1\">\r\n                                            <Form.Label>Cut</Form.Label>\r\n                                            <Form.Control onChange={this.getOther} defaultValue={this.state.diamond.cut} ref={(element) => { this.cutInput = element }} as=\"select\" >\r\n                                                <option value=\"\"></option>\r\n                                                <option value=\"EX\">Excellent</option>\r\n                                                <option value=\"VG\">Very good</option>\r\n                                                <option value=\"G\">Good</option>\r\n                                                <option value=\"F\">Fair</option>\r\n                                                <option value=\"P\">Poor</option>\r\n                                            </Form.Control>\r\n                                        </Form.Group>\r\n                                    </Col>\r\n                                    <Col lg=\"2\" md=\"3\" sm=\"4\" xs=\"6\">\r\n                                        <Form.Group controlId=\"exampleForm.ControlSelect1\">\r\n                                            <Form.Label>Polish</Form.Label>\r\n                                            <Form.Control onChange={this.getOther} defaultValue={this.state.diamond.polish} ref={(element) => { this.polishInput = element }} as=\"select\" >\r\n                                                <option value=\"\"></option>\r\n                                                <option value=\"EX\">Excellent</option>\r\n                                                <option value=\"VG\">Very good</option>\r\n                                                <option value=\"G\">Good</option>\r\n                                                <option value=\"F\">Fair</option>\r\n                                                <option value=\"P\">Poor</option>\r\n                                            </Form.Control>\r\n                                        </Form.Group>\r\n                                    </Col>\r\n                                    <Col lg=\"2\" md=\"3\" sm=\"4\" xs=\"6\">\r\n                                        <Form.Group controlId=\"exampleForm.ControlSelect1\">\r\n                                            <Form.Label>Symmetry</Form.Label>\r\n                                            <Form.Control onChange={this.getOther} defaultValue={this.state.diamond.symmetry} ref={(element) => { this.symmetryInput = element }} as=\"select\" >\r\n                                                <option value=\"\"></option>\r\n                                                <option value=\"EX\">Excellent</option>\r\n                                                <option value=\"VG\">Very good</option>\r\n                                                <option value=\"G\">Good</option>\r\n                                                <option value=\"F\">Fair</option>\r\n                                                <option value=\"P\">Poor</option>\r\n                                            </Form.Control>\r\n                                        </Form.Group>\r\n                                    </Col>\r\n                                    <Col lg=\"2\" md=\"3\" sm=\"4\" xs=\"6\">\r\n                                        <Form.Group controlId=\"exampleForm.ControlSelect1\">\r\n                                            <Form.Label>fluorescence</Form.Label>\r\n                                            <Form.Control onChange={this.getOther} defaultValue={this.state.diamond.fluorescence} ref={(element) => { this.fluorescenceInput = element }} as=\"select\" >\r\n                                                <option value=\"\"></option>\r\n                                                <option value=\"None\">NONE</option>\r\n                                                <option value=\"Faint\">FAINT</option>\r\n                                                <option value=\"Medium\">MEDIUM</option>\r\n                                                <option value=\"Strong\">STRONG</option>\r\n                                                <option value=\"Very strong\">VERY STRONG</option>\r\n                                            </Form.Control>\r\n                                        </Form.Group>\r\n                                    </Col>\r\n                                    <Col lg=\"2\" md=\"3\" sm=\"4\" xs=\"6\">\r\n                                        <Form.Group controlId=\"exampleForm.ControlSelect1\">\r\n                                            <Form.Label>Fl Color</Form.Label>\r\n                                            <Form.Control onChange={this.getOther} defaultValue={this.state.diamond.fluorescenceColor} ref={(element) => { this.fluorescenceColorInput = element }} as=\"select\" >\r\n                                                <option value=\"\"></option>\r\n                                                <option value=\"Yellow\">YELLOW</option>\r\n                                                <option value=\"White\">WHITE</option>\r\n                                                <option value=\"Green\">GREEN</option>\r\n                                            </Form.Control>\r\n                                        </Form.Group>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col lg=\"2\" md=\"3\" sm=\"4\" xs=\"6\">\r\n                                        <Form.Label>Depth</Form.Label>\r\n                                        <InputGroup className=\"mb-3\">\r\n                                            <FormControl onChange={this.getOther} defaultValue={this.state.diamond.depth} ref={(element) => { this.depthInput = element }}\r\n                                                placeholder=\"Depth\"\r\n                                            />\r\n                                        </InputGroup>\r\n                                    </Col>\r\n                                    <Col lg=\"2\" md=\"3\" sm=\"4\" xs=\"6\">\r\n                                        <Form.Label>Table</Form.Label>\r\n                                        <InputGroup className=\"mb-3\">\r\n\r\n                                            <FormControl onChange={this.getOther} defaultValue={this.state.diamond.table} ref={(element) => { this.tableInput = element }}\r\n                                                placeholder=\"Table\"\r\n                                            />\r\n                                        </InputGroup>\r\n                                    </Col>\r\n\r\n                                    <Col lg=\"2\" md=\"3\" sm=\"4\" xs=\"6\">\r\n                                        <Form.Label>Girdle</Form.Label>\r\n                                        <InputGroup className=\"mb-3\">\r\n\r\n                                            <FormControl onChange={this.getOther} defaultValue={this.state.diamond.girdle} ref={(element) => { this.girdleInput = element }}\r\n                                                placeholder=\"Girdle\"\r\n                                            />\r\n                                        </InputGroup>\r\n                                    </Col>\r\n                                    <Col lg=\"2\" md=\"3\" sm=\"4\" xs=\"6\">\r\n                                        <Form.Group controlId=\"exampleForm.ControlSelect1\">\r\n                                            <Form.Label>Culet</Form.Label>\r\n                                            <Form.Control onChange={this.getOther} defaultValue={this.state.diamond.culet} ref={(element) => { this.culetInput = element }} as=\"select\" >\r\n                                                <option value=\"\"></option>\r\n                                                <option value=\"None\">None</option>\r\n                                                <option value=\"VS\">VERY SMALL</option>\r\n                                                <option value=\"S\">SMALL</option>\r\n                                                <option value=\"M\">MEDIUM</option>\r\n                                                <option value=\"L\">LARGE</option>\r\n                                                <option value=\"VL\">VERY LARGE</option>\r\n                                            </Form.Control>\r\n                                        </Form.Group>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col lg=\"2\" md=\"2\" sm=\"2\" xs=\"2\">\r\n                                        <Form.Label>CA</Form.Label>\r\n                                        <InputGroup className=\"mb-3\">\r\n\r\n                                            <FormControl onChange={this.getOther} defaultValue={this.state.diamond.crownAngle} ref={(element) => { this.crownAngleInput = element }}\r\n                                                placeholder=\"CA\"\r\n                                            />\r\n                                        </InputGroup>\r\n                                    </Col>\r\n\r\n                                    <Col lg=\"2\" md=\"2\" sm=\"2\" xs=\"2\">\r\n                                        <Form.Label>CH</Form.Label>\r\n                                        <InputGroup className=\"mb-3\">\r\n\r\n                                            <FormControl onChange={this.getOther} defaultValue={this.state.diamond.crownHeight} ref={(element) => { this.crownHeightInput = element }}\r\n                                                placeholder=\"CH\"\r\n                                            />\r\n                                        </InputGroup>\r\n                                    </Col>\r\n                                    <Col lg=\"2\" md=\"2\" sm=\"2\" xs=\"2\">\r\n                                        <Form.Label>PA</Form.Label>\r\n                                        <InputGroup className=\"mb-3\">\r\n\r\n                                            <FormControl onChange={this.getOther} defaultValue={this.state.diamond.pavillionAngle} ref={(element) => { this.pavillionAngleInput = element }}\r\n                                                placeholder=\"PA\"\r\n                                            />\r\n                                        </InputGroup>\r\n                                    </Col>\r\n                                    <Col lg=\"2\" md=\"2\" sm=\"2\" xs=\"2\">\r\n                                        <Form.Label>PD</Form.Label>\r\n                                        <InputGroup className=\"mb-3\">\r\n\r\n                                            <FormControl onChange={this.getOther} defaultValue={this.state.diamond.pavillionDepth} ref={(element) => { this.pavillionDepthInput = element }}\r\n                                                placeholder=\"PD\"\r\n                                            />\r\n                                        </InputGroup>\r\n                                    </Col>\r\n                                    <Col lg=\"2\" md=\"2\" sm=\"2\" xs=\"2\">\r\n                                        <Form.Label>LH</Form.Label>\r\n                                        <InputGroup className=\"mb-3\">\r\n\r\n                                            <FormControl onChange={this.getOther} defaultValue={this.state.diamond.lowerHalf} ref={(element) => { this.lowerHalfInput = element }}\r\n                                                placeholder=\"LH\"\r\n                                            />\r\n                                        </InputGroup>\r\n                                    </Col>\r\n                                </Row>\r\n\r\n                            </Modal.Body>\r\n\r\n                        )\r\n                    }\r\n                    else\r\n                        if (this.state.page === 4) {\r\n\r\n                            parse.push(\r\n                                <Modal.Body className=\"modalAddBody\">\r\n                                    <Form.Label>Add Images Links</Form.Label>\r\n                                    <InputGroup className=\"mb-3\">\r\n                                        {/* <InputGroup.Text id=\"basic-addon2\">@example.com</InputGroup.Text> */}\r\n                                        <FormControl onChange={this.prepareLink} defaultValue={this.state.linktoAdd} ref={(element) => { this.linkToAddInput = element }}\r\n                                            placeholder=\"Place link here\" value={this.state.linktoAdd} style={{ width: \"300px\", marginRight: \"10px\" }} />\r\n                                        <Button onClick={this.addLink} variant=\"primary\">Add</Button>\r\n                                    </InputGroup>\r\n                                    <ListOfLinks deleteLink={this.deleteLink} links={this.state.diamond.links} />\r\n\r\n                                </Modal.Body>\r\n\r\n                            )\r\n                        }\r\n                        else\r\n                            if (this.state.page === 5) {\r\n\r\n                                parse.push(\r\n                                    <Modal.Body className=\"modalAddBody\">\r\n                                        <Form>\r\n                                            <Form.Group controlId=\"formFile1\">\r\n                                                <Form.Label >\r\n                                                    Choose an Image file\r\n                                                </Form.Label>\r\n                                                Image # 1\r\n                                                    <Form.Control data-id=\"1\" type=\"file\" placeholder=\"Diamond image URL\" accept=\"image/*\" onChange={this.imgChange} />\r\n\r\n                                                <Image src={pic1.url} style={{ width: \"15%\" }} fluid />\r\n                                                <p>{pic1.name}<Button onClick={this.deleteImg} id=\"deleteBtn1\" hidden={pic1.hidden} variant=\"danger\">Delete</Button></p>\r\n                                            </Form.Group>\r\n                                            <Form.Group controlId=\"formFile2\">\r\n                                                <Form.Label >\r\n                                                    Choose an Image file\r\n                                                </Form.Label>\r\n                                                Image # 2\r\n                                                    <Form.Control data-id=\"2\" type=\"file\" placeholder=\"Diamond image URL\" accept=\"image/*\" onChange={this.imgChange} />\r\n\r\n                                                <Image src={pic2.url} style={{ width: \"15%\" }} fluid />\r\n                                                <p>{pic2.name}<Button onClick={this.deleteImg} id=\"deleteBtn2\" hidden={pic2.hidden} variant=\"danger\">Delete</Button></p>\r\n\r\n                                            </Form.Group>\r\n\r\n                                        </Form>\r\n\r\n                                    </Modal.Body>\r\n\r\n                                )\r\n                            }\r\n\r\n        return (\r\n            <div style={{ position: \"relative\" }}>\r\n                <Button variant=\"success\" onClick={this.toggle} className=\"fullWin\">\r\n                    List New Diamond\r\n            </Button>\r\n                <Nav style={{ position: \"absolute\", left: \"-20px\", top: \"1px\" }}>\r\n                    <Nav.Link href=\"#/load\"><img style={{ width: \"100px\", height: \"40px\" }} src={excel}></img></Nav.Link>\r\n                </Nav>\r\n                <Button variant=\"info\" onClick={this.myListings} className=\"fullWin\">\r\n                    Only My Listings\r\n            </Button>\r\n                <Modal id=\"modalAdd\" size=\"xl\" show={this.state.modal} onHide={this.handleClose} animation={false}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>List New Diamond</Modal.Title>\r\n                    </Modal.Header>\r\n                    {parse}\r\n                    <Modal.Footer>\r\n                        <Button onClick={this.previousPage} variant=\"primary\" disabled={this.state.page === 0}>\r\n                            Back\r\n                    </Button>\r\n                        <Button variant=\"secondary\" onClick={this.handleClose}>\r\n                            Close\r\n                    </Button>\r\n                        <Button onClick={this.nextPage} variant=\"primary\" disabled={this.state.page === 5} >\r\n                            Next\r\n                    </Button>\r\n                        <Button variant=\"primary\" onClick={this.saveDiamond} disabled={this.state.disableSave}>\r\n                            Save My Diamond\r\n                    </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n","import React from 'react'\r\nimport { Row, Col, Accordion, Card } from 'react-bootstrap'\r\n\r\n\r\n\r\n//This Stupid component receives two props : edit & description. edit is the index of the diamond and description is all the data of the diamond\r\n//it uses acordeon to show the details of single diamond\r\nexport default class ShowDiamond extends React.Component {\r\n\r\n  render() {\r\n\r\n    var bgColorClass = \"\";\r\n    if (this.props.edit % 2 === 0) { bgColorClass = \"light-blue\" };\r\n    var pics = [];\r\n    for (var i = 0; i < this.props.description.links.length; i++) {\r\n      pics.push(<div style={{ margin: \"5px\" }} className=\"col-xl-2 col-lg-3 col-md-4 col-sm-6 col-12\">\r\n        <div className=\"content diamondContent\">\r\n          <a href=\"#\"><img className=\"smallPic\" src={this.props.description.links[i]} /></a>\r\n        </div>\r\n      </div>);\r\n    }\r\n    if (this.props.description.pic1 !== {}) {\r\n      pics.push(<div style={{ margin: \"5px\" }} className=\"col-xl-2 col-lg-3 col-md-4 col-sm-6 col-12\">\r\n        <div className=\"content diamondContent\">\r\n          <a href=\"#\"><img className=\"smallPic\" src={this.props.description.pic1.url} /></a>\r\n        </div>\r\n      </div>);\r\n    }\r\n    if (this.props.description.pic2 !== {}) {\r\n      pics.push(<div style={{ margin: \"5px\" }} className=\"col-xl-2 col-lg-3 col-md-4 col-sm-6 col-12\">\r\n        <div className=\"content diamondContent\">\r\n          <a href=\"#\"><img className=\"smallPic\" src={this.props.description.pic2.url} /></a>\r\n        </div>\r\n      </div>);\r\n    }\r\n    return (\r\n      <div>\r\n        {/* below are the details visible in accordeon */}\r\n        <Accordion key={this.props.description.id} defaultActiveKey=\"0\" style={{ backgroundColor: bgColorClass }}>\r\n          <Card>\r\n            <Accordion.Toggle as={Card.Header} eventKey={this.props.edit}>\r\n              <Row>\r\n                <Col lg=\"3\" md=\"12\" sm=\"12\" style={{ height: \"60px\" }}>\r\n                  <Row>\r\n\r\n                    <Col className=\"innerCol\" xl=\"3\">\r\n                      <div className=\"content diamondContent\">\r\n                        <h5 className=\"noMarginBottom\">Shape</h5>\r\n                        <p>{this.props.description.shape}</p>\r\n                      </div>\r\n                    </Col>\r\n                    <Col className=\"innerCol\" xl=\"3\">\r\n                      <div className=\"content diamondContent\">\r\n                        <h5 className=\"noMarginBottom\">Carat</h5>\r\n                        <p>{this.props.description.weight}</p>\r\n                      </div>\r\n                    </Col>\r\n\r\n                    <Col className=\"innerCol\" xl=\"3\">\r\n                      <div className=\"content diamondContent\">\r\n                        <h5 className=\"noMarginBottom\">Col</h5>\r\n                        <p>{this.props.description.color}</p>\r\n                      </div>\r\n                    </Col>\r\n                    <Col className=\"innerCol\" xl=\"3\">\r\n                      <div className=\"content diamondContent\">\r\n                        <h5 className=\"noMarginBottom\">Clar</h5>\r\n                        <p>{this.props.description.clarity}</p>\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n                </Col>\r\n                <Col lg=\"3\" md=\"12\" sm=\"12\" style={{ height: \"60px\" }}>\r\n                  <Row>\r\n                    <Col className=\"innerCol\" xl=\"3\">\r\n                      <div className=\"content diamondContent\">\r\n                        <h5 className=\"noMarginBottom\">Cut</h5>\r\n                        <p>{this.props.description.cut}</p>\r\n                      </div>\r\n                    </Col>\r\n                    <Col className=\"innerCol\" xl=\"3\">\r\n                      <div className=\"content diamondContent\">\r\n                        <h5 className=\"noMarginBottom\">Pol</h5>\r\n                        <p>{this.props.description.polish}</p>\r\n                      </div>\r\n                    </Col>\r\n                    <Col className=\"innerCol\" xl=\"3\">\r\n                      <div className=\"content diamondContent\">\r\n                        <h5 className=\"noMarginBottom\">Sym</h5>\r\n                        <p>{this.props.description.symmetry}</p>\r\n                      </div>\r\n                    </Col>\r\n                    <Col className=\"innerCol\" xl=\"3\">\r\n                      <div className=\"content diamondContent\">\r\n                        <h5 className=\"noMarginBottom\">FL</h5>\r\n                        <p>{this.props.description.fluorescence + \" \" + this.props.description.fluorescenceColor}</p>\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n                </Col>\r\n                <Col lg=\"3\" md=\"12\" sm=\"12\" style={{ height: \"60px\" }}>\r\n                  <Row>\r\n                    <Col className=\"innerCol\" xl=\"3\">\r\n                      <div className=\"content diamondContent\">\r\n                        <h5 className=\"noMarginBottom\">Depth</h5>\r\n                        <p>{this.props.description.depth}</p>\r\n                      </div>\r\n                    </Col>\r\n                    <Col className=\"innerCol\" xl=\"3\">\r\n                      <div className=\"content diamondContent\">\r\n                        <h5 className=\"noMarginBottom\">Table</h5>\r\n                        <p>{this.props.description.table}</p>\r\n                      </div>\r\n                    </Col>\r\n                    <Col className=\"innerCol\" xl=\"3\">\r\n                      <div className=\"content diamondContent\">\r\n                        <h5 className=\"noMarginBottom\">Lab</h5>\r\n                        <a target=\"_blank\" href={\"http://www.gia.edu/report-check?reportno=\" + this.props.description.certificateNumber}><p>{this.props.description.lab}</p></a>\r\n                      </div>\r\n                    </Col>\r\n                    <Col className=\"innerCol\" xl=\"3\">\r\n                      <div className=\"content diamondContent\">\r\n                        <h5 className=\"noMarginBottom\">Gird</h5>\r\n                        <p>{this.props.description.girdle}</p>\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n                </Col>\r\n                <Col lg=\"3\" md=\"12\" sm=\"12\" style={{ height: \"60px\" }}>\r\n                  <Row>\r\n                    <Col className=\"innerCol\" xl=\"3\">\r\n                      <div className=\"content diamondContent\">\r\n                        <h5 className=\"noMarginBottom\">Culet</h5>\r\n                        <p>{this.props.description.culet}</p>\r\n                      </div>\r\n                    </Col>\r\n                    <Col className=\"innerCol\" xl=\"3\">\r\n                      <div className=\"content diamondContent\">\r\n                        <h5 className=\"noMarginBottom\">Rap</h5>\r\n                        <p style={{fontSize:\"11px\"}}>{this.props.description.list}</p>\r\n                      </div>\r\n                    </Col>\r\n                    <Col className=\"innerCol\" xl=\"3\">\r\n                      <div className=\"content diamondContent\">\r\n                        <h5 className=\"noMarginBottom\">Disc%</h5>\r\n                        <p>{(Math.floor(this.props.description.discount * 10) / 10).toFixed() + \"%\"}</p>\r\n                      </div>\r\n                    </Col>\r\n                    <Col className=\"innerCol\" xl=\"3\">\r\n                      <div className=\"content diamondContent\">\r\n                        <h5 className=\"noMarginBottom\">Price$</h5>\r\n                        <p style={{fontSize:\"11px\"}}>{this.props.description.pricePerCarat.toFixed()}</p>\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n                </Col>\r\n\r\n              </Row>\r\n              {/* below are the details hiden in Accordion */}\r\n            </Accordion.Toggle>\r\n            <Accordion.Collapse eventKey={this.props.edit}>\r\n              <Card.Body>\r\n                <Row>\r\n                  <Col lg=\"3\" md=\"12\" sm=\"12\" style={{ height: \"60px\" }}>\r\n\r\n                    <Row>\r\n                      <Col className=\"innerCol\" xl=\"3\">\r\n                        <div className=\"content diamondContent\">\r\n                          <h5 className=\"noMarginBottom\">Lot</h5>\r\n                          <p style={{fontSize:\"11px\"}}>{this.props.description.lotID}</p>\r\n                        </div>\r\n                      </Col>\r\n\r\n\r\n\r\n\r\n                      <Col className=\"innerCol\" xl=\"3\">\r\n                        <div className=\"content diamondContent\">\r\n                          <h5 className=\"noMarginBottom\">Owner</h5>\r\n                          <p style={{fontSize:\"11px\"}}>{this.props.ownerName(this.props.description.owner.id)}</p>\r\n                        </div>\r\n                      </Col>\r\n\r\n                      <Col className=\"innerCol\" xl=\"3\">\r\n                        <div className=\"content diamondContent\">\r\n                          <h5 className=\"noMarginBottom\">Cert</h5>\r\n                          <a target=\"_blank\" href={\"http://www.gia.edu/report-check?reportno=\" + this.props.description.certificateNumber}><p style={{fontSize:\"11px\"}}>{this.props.description.certificateNumber}</p></a>\r\n\r\n                        </div>\r\n                      </Col>\r\n\r\n\r\n                      <Col className=\"innerCol\" xl=\"3\">\r\n                        <div className=\"content diamondContent\">\r\n                          <h5 className=\"noMarginBottom\">C.Angle</h5>\r\n                          <p>{this.props.description.crownAngle}</p>\r\n                        </div>\r\n                      </Col></Row></Col>\r\n                  <Col lg=\"3\" md=\"12\" sm=\"12\" style={{ height: \"60px\" }}>\r\n\r\n                    <Row>\r\n                      <Col className=\"innerCol\" xl=\"3\">\r\n                        <div className=\"content diamondContent\">\r\n                          <h5 className=\"noMarginBottom\">C.Heigh</h5>\r\n                          <p>{this.props.description.crownHeight}</p>\r\n                        </div>\r\n                      </Col>\r\n\r\n\r\n                      <Col className=\"innerCol\" xl=\"3\">\r\n                        <div className=\"content diamondContent\">\r\n                          <h5 className=\"noMarginBottom\">P.Angle</h5>\r\n                          <p>{this.props.description.pavillionAngle}</p>\r\n                        </div>\r\n                      </Col>\r\n\r\n\r\n                      <Col className=\"innerCol\" xl=\"3\">\r\n                        <div className=\"content diamondContent\">\r\n                          <h5 className=\"noMarginBottom\">P.Depth</h5>\r\n                          <p>{this.props.description.pavillionDepth}</p>\r\n                        </div>\r\n                      </Col>\r\n                      <Col className=\"innerCol\" xl=\"3\">\r\n                        <div className=\"content diamondContent\">\r\n                          <h5 className=\"noMarginBottom\">StarLen</h5>\r\n                          <p>{this.props.description.starLength}</p>\r\n                        </div>\r\n                      </Col></Row></Col>\r\n\r\n                  <Col lg=\"3\" md=\"12\" sm=\"12\" style={{ height: \"60px\" }}>\r\n                    <Row>\r\n\r\n                      <Col className=\"innerCol\" xl=\"3\">\r\n                        <div className=\"content diamondContent\">\r\n                          <h5 className=\"noMarginBottom\">LoHalf</h5>\r\n                          <p>{this.props.description.lowerHalf}</p>\r\n                        </div>\r\n                      </Col>\r\n                      <Col className=\"innerCol\" xl=\"3\">\r\n                        <div className=\"content diamondContent\">\r\n                          <h5 className=\"noMarginBottom\">Meas</h5>\r\n                          <p>{this.props.description.measurements()}</p>\r\n                        </div>\r\n                      </Col>\r\n                      <Col className=\"innerCol\" xl=\"3\">\r\n                        <div className=\"content diamondContent\">\r\n                          <h5 className=\"noMarginBottom\">Incl</h5>\r\n                          <p>{this.props.description.inclusions}</p>\r\n                        </div>\r\n                      </Col>\r\n                    </Row>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  {pics}\r\n                </Row>\r\n                <Row>\r\n                  {/* these childres are the action buttons and are declared in the father componenet DiamondList */}\r\n                  {this.props.children}\r\n                </Row>\r\n              </Card.Body>\r\n            </Accordion.Collapse>\r\n          </Card>\r\n        </Accordion>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Slider from '@material-ui/core/Slider';\r\n\r\n\r\n//two sided slider for color and clarity filter\r\nexport default function HorizontalColorSlider(props) {\r\n    \r\n    const useStyles = makeStyles({\r\n        root: {\r\n          width: 450,\r\n        },\r\n      });\r\n      \r\n  const classes = useStyles();\r\n  function valuetext(value) {\r\n    return `${value}°C`;\r\n  }\r\n  let marks,max;\r\n  //color slider value marks\r\n  if (props.name===\"Color\"){\r\n  marks = [\r\n    {\r\n      value: 0,\r\n      label: 'D',\r\n    },\r\n    {\r\n      value: 1,\r\n      label: 'E',\r\n    },\r\n    {\r\n      value: 2,\r\n      label: 'F',\r\n    },\r\n    {\r\n      value: 3,\r\n      label: 'G',\r\n    },\r\n    {\r\n      value: 4,\r\n      label: 'H',\r\n    },\r\n    {\r\n      value: 5,\r\n      label: 'I',\r\n    },\r\n    {\r\n      value: 6,\r\n      label: 'J',\r\n    },\r\n    {\r\n      value: 7,\r\n      label: 'K',\r\n    },\r\n    {\r\n      value: 8,\r\n      label: 'L',\r\n    },\r\n    {\r\n      value: 9,\r\n      label: 'M',\r\n    },\r\n    {\r\n      value: 10,\r\n      label: 'N',\r\n    },\r\n    {\r\n      value: 11,\r\n      label: 'OP',\r\n    },\r\n    {\r\n      value: 12,\r\n      label: 'QR',\r\n    },\r\n    {\r\n      value: 13,\r\n      label: 'ST',\r\n    },\r\n    {\r\n      value: 14,\r\n      label: 'UV',\r\n    },\r\n    {\r\n      value: 15,\r\n      label: 'WX',\r\n    },\r\n    {\r\n      value: 16,\r\n      label: 'YZ',\r\n    },\r\n  ];\r\n  max=16;\r\n}\r\n//clarity slider mark values\r\nelse if (props.name===\"Clarity\"){\r\n    marks = [\r\n        {\r\n          value: 0,\r\n          label: 'FL',\r\n        },\r\n        {\r\n          value: 1,\r\n          label: 'IF',\r\n        },\r\n        {\r\n          value: 2,\r\n          label: 'VVS1',\r\n        },\r\n        {\r\n          value: 3,\r\n          label: 'VVS2',\r\n        },\r\n        {\r\n          value: 4,\r\n          label: 'VS1',\r\n        },\r\n        {\r\n          value: 5,\r\n          label: 'VS2',\r\n        },\r\n        {\r\n          value: 6,\r\n          label: 'SI1',\r\n        },\r\n        {\r\n          value: 7,\r\n          label: 'SI2',\r\n        },\r\n        {\r\n          value: 8,\r\n          label: 'SI3',\r\n        },\r\n        {\r\n          value: 9,\r\n          label: 'I1',\r\n        },\r\n        {\r\n            value: 10,\r\n            label: 'I2',\r\n          },\r\n          {\r\n            value: 11,\r\n            label: 'I3',\r\n          },\r\n      ];  \r\n      max=11; \r\n}\r\nif (props.name===\"Color\"&&props.filter.clearColorFilter){\r\n  let filter=props.filter;\r\n  filter.clearColorFilter=false;\r\n  props.setFilter(filter);\r\n  return false;\r\n\r\n} else if (props.name===\"Clarity\"&&props.filter.clearClarityFilter){\r\n  let filter=props.filter;\r\n  filter.clearClarityFilter=false;\r\n  props.setFilter(filter);\r\n  return false;\r\n} else\r\n  return (\r\n    <React.Fragment>\r\n      <Typography id=\"horizontal-slider\" gutterBottom>\r\n        \r\n      </Typography>\r\n      <div className={classes.root}>\r\n        {props.name}\r\n        <Slider\r\n        onChangeCommitted={(e,val)=>{props.change(val)}}\r\n          orientation=\"horizontal\"\r\n          defaultValue={[0, max]}\r\n          aria-labelledby=\"horizontal-slider\"\r\n          getAriaValueText={valuetext}\r\n          marks={marks}\r\n          max={max}\r\n        />\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from 'react'\r\nimport HorizontalColorSlider from './Slider'\r\nimport { Form, Row, Col, FormControl } from 'react-bootstrap'\r\nimport { Button } from '@material-ui/core';\r\nimport {colorValue,clarityValue} from '../Classes/Diamond'\r\n// import Multiselect from 'react-bootstrap-multiselect'\r\n// import '../multiselect.css'\r\n\r\n\r\n//returns color value\r\nfunction num2color(value) {\r\n  switch (value) {\r\n    case 0:\r\n      return \"D\";\r\n      break;\r\n    case 1:\r\n      return \"E\";\r\n      break;\r\n    case 2:\r\n      return \"F\";\r\n      break;\r\n    case 3:\r\n      return \"G\";\r\n      break;\r\n    case 4:\r\n      return \"H\";\r\n      break;\r\n    case 5:\r\n      return \"I\";\r\n      break;\r\n    case 6:\r\n      return \"J\";\r\n      break;\r\n    case 7:\r\n      return \"K\";\r\n      break;\r\n    case 8:\r\n      return \"L\";\r\n      break;\r\n    case 9:\r\n      return \"M\";\r\n      break;\r\n    case 10:\r\n      return \"N\";\r\n      break;\r\n    case 11:\r\n      return \"OP\";\r\n      break;\r\n    case 12:\r\n      return \"QR\";\r\n      break;\r\n    case 13:\r\n      return \"ST\";\r\n      break;\r\n    case 14:\r\n      return \"UV\";\r\n      break;\r\n    case 15:\r\n      return \"WX\";\r\n      break;\r\n    case 16:\r\n      return \"YZ\";\r\n      break;\r\n    default:\r\n      return false;\r\n  }\r\n}\r\n//returns clarity value\r\nfunction num2clarity(value) {\r\n  switch (value) {\r\n    case 0:\r\n      return \"FL\";\r\n      break;\r\n    case 1:\r\n      return \"IF\";\r\n      break;\r\n    case 2:\r\n      return \"VVS1\";\r\n      break;\r\n    case 3:\r\n      return \"VVS2\";\r\n      break;\r\n    case 4:\r\n      return \"VS1\";\r\n      break;\r\n    case 5:\r\n      return \"VS2\";\r\n      break;\r\n    case 6:\r\n      return \"SI1\";\r\n      break;\r\n    case 7:\r\n      return \"SI2\";\r\n      break;\r\n    case 8:\r\n      return \"SI3\";\r\n      break;\r\n    case 9:\r\n      return \"I1\";\r\n      break;\r\n    case 10:\r\n      return \"I2\";\r\n      break;\r\n    case 11:\r\n      return \"I3\";\r\n      break;\r\n    default:\r\n      return false;\r\n  }\r\n}\r\n\r\n//filter\r\nexport default class SearchDiamondForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      tglAll: \"Select all shapes\",\r\n      filter:{\r\n        weightMin:\"\",\r\n        weightMax:\"\",\r\n      }\r\n    }\r\n  }\r\n\r\n//click on a shape filter wiil toggle selection from/to filter\r\n  toggleChoice = (e) => {\r\n    let { filter, setFilter } = this.props;\r\n    if (!filter.shape.includes(e.target.innerHTML)) { filter.shape.push(e.target.innerHTML) }\r\n    else {\r\n      for (var i = 0; i < filter.shape.length; i++) {\r\n        if (filter.shape[i] === e.target.innerHTML) {\r\n          filter.shape.splice(i, 1);\r\n        }\r\n      }\r\n    }\r\n    setFilter(filter);\r\n  }\r\n\r\n//toggle all shape to/from filter\r\n  toggleAll = (e) => {\r\n    let allShapes = [\"BR\", \"OV\", \"PS\", \"MQ\", \"HS\", \"PRI\", \"RAD\", \"EM\",\"AS\", \"CU\", \"BG\", \"TRI\"]\r\n    let { filter, setFilter } = this.props;\r\n    let { tglAll } = this.state;\r\n    if (tglAll === \"Select all shapes\") { filter.shape = allShapes; tglAll = \"Clear all shapes\" }\r\n    else {\r\n      filter.shape = []; tglAll = \"Select all shapes\"\r\n    }\r\n    this.setState({ tglAll });\r\n    setFilter(filter);\r\n  }\r\n\r\n  //changing weight minimum filter value\r\n  setMinWeight = (e) => {\r\n\r\n    let { setFilter } = this.props;\r\n    let filter1=this.props.filter;\r\n    let filter=this.state.filter;\r\n    filter1.weightMin = e.target.value;\r\n    filter.weightMin=e.target.value;\r\n    if (filter1.weightMin===\"\") filter1.weightMin=0;\r\n    this.setState({filter});\r\n    setFilter(filter1);\r\n  }\r\n\r\n  //changing weight maximum filter value\r\n  setMaxWeight = (e) => {\r\n\r\n    let { setFilter } = this.props;\r\n    let filter1=this.props.filter;\r\n    let filter=this.state.filter;\r\n    filter1.weightMax = e.target.value;\r\n    filter.weightMax=e.target.value;\r\n    if (filter1.weightMax===\"\") filter1.weightMax=10000;\r\n    this.setState({filter});\r\n    setFilter(filter1);\r\n  }\r\n\r\n  //set color minimum and maximum on change in color slider\r\n  setColorFilter = (value) => {\r\n    let { filter, setFilter } = this.props;\r\n    filter.colorMin = num2color(value[0]);\r\n    filter.colorMax = num2color(value[1]);\r\n    setFilter(filter);\r\n  }\r\n\r\n   //set clarity minimum and maximum on change in clarity slider\r\n  setClarityFilter = (value) => {\r\n    let { filter, setFilter } = this.props;\r\n    filter.clarityMin = num2clarity(value[0]);\r\n    filter.clarityMax = num2clarity(value[1]);\r\n    setFilter(filter);\r\n  }\r\n\r\n  //clear all filters\r\n  clearTheFilter= ()=>{\r\n    const {clearFilter } = this.props;\r\n    let {filter } = this.state;\r\n    filter.weightMax=\"\";\r\n    filter.weightMin=\"\";\r\n    clearFilter();\r\n    this.setState({filter});\r\n\r\n  }\r\n  render() {\r\n\r\n    let br, ov, ps, mq, hs, pri, rad, em, cu, bg, tri, asher;\r\n    //sets the color of each shape according to its filter value\r\n    if (this.props.filter.shape.includes(\"BR\")) { br = \"success\" } else { br = \"light\" };\r\n    if (this.props.filter.shape.includes(\"OV\")) { ov = \"success\" } else { ov = \"light\" };\r\n    if (this.props.filter.shape.includes(\"MQ\")) { mq = \"success\" } else { mq = \"light\" };\r\n    if (this.props.filter.shape.includes(\"HS\")) { hs = \"success\" } else { hs = \"light\" };\r\n    if (this.props.filter.shape.includes(\"PS\")) { ps = \"success\" } else { ps = \"light\" };\r\n    if (this.props.filter.shape.includes(\"PRI\")) { pri = \"success\" } else { pri = \"light\" };\r\n    if (this.props.filter.shape.includes(\"RAD\")) { rad = \"success\" } else { rad = \"light\" };\r\n    if (this.props.filter.shape.includes(\"EM\")) { em = \"success\" } else { em = \"light\" };\r\n    if (this.props.filter.shape.includes(\"CU\")) { cu = \"success\" } else { cu = \"light\" };\r\n    if (this.props.filter.shape.includes(\"TRI\")) { tri = \"success\" } else { tri = \"light\" };\r\n    if (this.props.filter.shape.includes(\"BG\")) { bg = \"success\" } else { bg = \"light\" };\r\n    if (this.props.filter.shape.includes(\"AS\")) { asher = \"success\" } else { asher = \"light\" };\r\n   \r\n    var width60 = { width: \"60px\" };\r\n    return (\r\n      <Form>\r\n        <Button style={{backgroundColor:\"pink\",border:\"none\",borderRadius:\"5px\",marginTop:\"5px\",height:\"40px\"}} onClick={this.clearTheFilter} className=\"fullWin\">\r\n                    Clear all filters\r\n        </Button> \r\n        <h3 style={{marginTop:\"10px\"}}> Filter</h3>\r\n        <Row>\r\n          <Col lg=\"12\" md=\"12\" sm=\"12\" xs=\"12\">\r\n            {/* clear all shapes or choose all shapes */}\r\n            <button style={{marginBottom:\"5px\"}} onClick={this.toggleAll} type=\"button\" className={`btn btn-primary`}>{this.state.tglAll}</button>\r\n          </Col>\r\n          {/* all shapes buttons */}\r\n          <Col lg=\"1\" md=\"2\" sm=\"3\" xs=\"4\">\r\n            <button onClick={this.toggleChoice} type=\"button\" className={`btn btn-${br}`}>BR</button>\r\n          </Col>\r\n          <Col lg=\"1\" md=\"2\" sm=\"3\" xs=\"4\">\r\n            <button onClick={this.toggleChoice} type=\"button\" className={`btn btn-${ov}`}>OV</button>\r\n          </Col>\r\n          <Col lg=\"1\" md=\"2\" sm=\"3\" xs=\"4\">\r\n            <button onClick={this.toggleChoice} type=\"button\" className={`btn btn-${ps}`}>PS</button>\r\n          </Col>\r\n          <Col lg=\"1\" md=\"2\" sm=\"3\" xs=\"4\">\r\n            <button onClick={this.toggleChoice} type=\"button\" className={`btn btn-${mq}`}>MQ</button>\r\n          </Col>\r\n          <Col lg=\"1\" md=\"2\" sm=\"3\" xs=\"4\">\r\n            <button onClick={this.toggleChoice} type=\"button\" className={`btn btn-${hs}`}>HS</button>\r\n          </Col>\r\n          <Col lg=\"1\" md=\"2\" sm=\"3\" xs=\"4\">\r\n            <button onClick={this.toggleChoice} type=\"button\" className={`btn btn-${pri}`}>PRI</button>\r\n          </Col>\r\n          <Col lg=\"1\" md=\"2\" sm=\"3\" xs=\"4\">\r\n            <button onClick={this.toggleChoice} type=\"button\" className={`btn btn-${em}`}>EM</button>\r\n          </Col>\r\n          <Col lg=\"1\" md=\"2\" sm=\"3\" xs=\"4\">\r\n            <button onClick={this.toggleChoice} type=\"button\" className={`btn btn-${asher}`}>AS</button>\r\n          </Col>\r\n          <Col lg=\"1\" md=\"2\" sm=\"3\" xs=\"4\">\r\n            <button onClick={this.toggleChoice} type=\"button\" className={`btn btn-${rad}`}>RAD</button>\r\n          </Col>\r\n          <Col lg=\"1\" md=\"2\" sm=\"3\" xs=\"4\">\r\n            <button onClick={this.toggleChoice} type=\"button\" className={`btn btn-${cu}`}>CU</button>\r\n          </Col>\r\n          <Col lg=\"1\" md=\"2\" sm=\"3\" xs=\"4\">\r\n            <button onClick={this.toggleChoice} type=\"button\" className={`btn btn-${bg}`}>BG</button>\r\n          </Col>\r\n          <Col lg=\"1\" md=\"2\" sm=\"3\" xs=\"4\">\r\n            <button onClick={this.toggleChoice} type=\"button\" className={`btn btn-${tri}`}>TRI</button>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n{/* //weight input minimum and maximum */}\r\n          <Form.Group as={Col} xl=\"3\" lg=\"3\" sm=\"12\" controlId=\"validationCustom05\">\r\n            <Form.Label>Weight From</Form.Label>\r\n            <Form.Control onChange={this.setMinWeight} type=\"number\" placeholder=\"From\" value={this.state.filter.weightMin}/>\r\n            <Form.Control.Feedback type=\"invalid\">\r\n            </Form.Control.Feedback>\r\n            <Form.Label>Weight To</Form.Label>\r\n            <Form.Control onChange={this.setMaxWeight} type=\"number\" placeholder=\"To\" value={this.state.filter.weightMax} />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n            </Form.Control.Feedback>\r\n          </Form.Group>\r\n          <Form.Group as={Col} xl=\"9\" lg=\"9\" sm=\"12\" controlId=\"validationCustom05\">\r\n            {/* sliders , one for color and one for clarity */}\r\n            <HorizontalColorSlider setFilter={this.props.setFilter} filter={this.props.filter} name=\"Color\" change={(value) => { this.setColorFilter(value) }} />\r\n            <HorizontalColorSlider setFilter={this.props.setFilter} filter={this.props.filter} name=\"Clarity\" change={(value) => { this.setClarityFilter(value)}} />\r\n          </Form.Group>\r\n        </Row>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { Modal, Button, InputGroup, FormControl, Alert } from 'react-bootstrap'\r\n\r\nexport default class SendMessageModal extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            show: false,\r\n            modal: this.props.show,\r\n            diamond: this.props.diamond,\r\n        }\r\n        console.log(\"welcome,welcome\")\r\n    }\r\n    handleClose = () => {\r\n        this.setState({\r\n            modal: false,\r\n            show: false\r\n        });\r\n        this.props.close();\r\n\r\n    }\r\n    contactSeller = () => {\r\n        const { addMessage, activeUser, ownerName } = this.props;\r\n        const { diamond } = this.state;\r\n        let { show } = this.state;\r\n        addMessage(this.textInput.value, activeUser.id, diamond.owner.id);\r\n        show = true;\r\n        this.setState({ show })\r\n        // this.handleClose();\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n        let newState = {\r\n            modal: nextProps.show,\r\n            diamond: nextProps.diamond,\r\n        }\r\n        this.setState(newState)\r\n    }\r\n    render() {\r\n\r\n        const { addMessage, activeUser, ownerName } = this.props;\r\n        const { modal, diamond } = this.state;\r\n        let showLotId;\r\n        let showOwnerId;\r\n        if (diamond) { showOwnerId = diamond.owner.id; showLotId = diamond.lotID } else return false;\r\n        return (\r\n            <Modal show={modal}\r\n                size=\"lg\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                        Send Message to {this.props.ownerName(showOwnerId)}\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body style={{ height: \"300px\" }}>\r\n                    <h4>Regarding Diamond {showLotId}</h4>\r\n                    <InputGroup className=\"mb-0\">\r\n                        <FormControl\r\n                            ref={(element) => { this.textInput = element }}\r\n                            as=\"textarea\" rows=\"10\"\r\n                            defaultValue={`Hi ${ownerName(showOwnerId)}, I am contacting you regarding your diamond: ${showOwnerId} ${diamond.shape} ${diamond.color} ${diamond.clarity}`}\r\n                            aria-label=\"User\"\r\n                            aria-describedby=\"basic-addon1\"\r\n                        />\r\n                    </InputGroup>\r\n                    <Alert style={{ width: \"100%\" }} variant=\"primary\" show={this.state.show}>\r\n                        message Sent {ownerName(showOwnerId)}\r\n                    </Alert>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button onClick={() => { this.contactSeller() }}>Send</Button>\r\n                    <Button onClick={this.handleClose}>Close</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        );\r\n    }\r\n}\r\n","import React from 'react'\r\nimport { Modal, Button,InputGroup,FormControl,Alert } from 'react-bootstrap'\r\n\r\nexport default class SendOfferModal extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            show: false,\r\n            modal: this.props.show,\r\n            diamond: this.props.diamond,\r\n        }\r\n    }\r\n    handleClose = () => {\r\n        this.setState({\r\n            modal: false,\r\n            show: false\r\n        });\r\n        this.props.close();\r\n\r\n    }\r\n    contactSeller = () => {\r\n        const { addMessage, activeUser,ownerName } = this.props;\r\n        const { diamond } = this.state;\r\n        let { show } = this.state;\r\n        addMessage(this.textInput.value, activeUser.id, diamond.owner.id);\r\n        show = true;\r\n        this.setState({ show })\r\n        // this.handleClose();\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n        let newState = {\r\n            modal: nextProps.show,\r\n            diamond: nextProps.diamond,\r\n        }\r\n        this.setState(newState)\r\n    }\r\n    render() {\r\n        const { addMessage, activeUser,ownerName } = this.props;\r\n        const { modal, diamond } = this.state;\r\n        let showLotId;\r\n        let showOwnerId;\r\n        let showPrice;\r\n        if (diamond) {showPrice=diamond.pricePerCarat; showOwnerId=diamond.owner.id; showLotId=diamond.lotID} else return false;\r\n        return (\r\n            <Modal show={modal}\r\n                size=\"sm\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                        Send Offer to {this.props.ownerName(showOwnerId)}\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body style={{height:\"300px\"}}>\r\n                    <h4>Regarding Diamond {showLotId}</h4>\r\n                    <h4>Asking Price: {showPrice}</h4>\r\n                    <InputGroup className=\"mb-0\">\r\n                        <FormControl\r\n                             ref={(element)=>{this.textInput=element}}\r\n                            as=\"textarea\" rows=\"10\" \r\n                            defaultValue = {`Hi ${ownerName(showOwnerId)}, I am Offering you on your diamond: ${showOwnerId} ${diamond.shape} ${diamond.color} ${diamond.clarity}, XXXXX Dollars per carat. what do you say?`}\r\n                            aria-label=\"User\"\r\n                            aria-describedby=\"basic-addon1\"\r\n                        />\r\n                    </InputGroup>\r\n                    <Alert style={{ width: \"100%\" }} variant=\"primary\" show={this.state.show}>\r\n                        Offer Sent to {ownerName(showOwnerId)}\r\n                    </Alert>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button onClick={() => { this.contactSeller() }}>Send</Button>\r\n                    <Button onClick={this.handleClose}>Close</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        );\r\n    }\r\n}\r\n","import React from 'react'\r\nimport { Button, ButtonToolbar, Alert } from 'react-bootstrap'\r\nimport ShowDiamond from '../components/ShowDiamond'\r\nimport SearchDiamondForm from '../components/SearchDiamondForm'\r\nimport SendMessageModal from '../components/SendMessageModal'\r\nimport SendOfferModal from '../components/SendOfferModal'\r\n\r\n\r\n//RECIVES 3 PROPS \r\n//deleteDiamond=FUNCTION TO DELETE A DIAMOND(INDEX OF THE DELETED DIAMOND) \r\n//editDiamond=FUNCTION THAT CHANGES THE STATE OF THE FATHER COMPONENT SO\r\n//                          THE ADDDIAMOND MODAL CHANGES TO EDIT MODAL(INDEX OF THE DIAMOND TO BE EDITED) \r\n//list=ARRAY OF DIAMONDS\r\nexport default class DiamondList extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      modal: false,\r\n      modalOffer: false,\r\n      index: \"\",\r\n      list: this.props.list,\r\n      show: false\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    setInterval(this.hideAlert, 10000);\r\n  }\r\n  componentWillReceiveProps(nextProps) {\r\n    let list = nextProps.list;\r\n    this.setState({ list })\r\n  }\r\n\r\n  toggle = (e) => {\r\n    this.setState({\r\n      modal: !this.state.modal,\r\n      index: e.target.value\r\n    });\r\n  }\r\n  toggleOffer = (e) => {\r\n    this.setState({\r\n      modalOffer: !this.state.modalOffer,\r\n      index: e.target.value\r\n    });\r\n  }\r\n  handleClose = () => {\r\n    this.setState({\r\n      modal: false,\r\n      modalOffer: false,\r\n    });\r\n\r\n  }\r\n  // CALLS THE FATHER COMPONENT'S FUNCTION DELETEDIAMOND WITH THE INDEX OF THE DIAMOND\r\n  deleteDiamond = (element) => {\r\n    this.props.deleteDiamond(element.target.value)\r\n  }\r\n  // CALLS THE FATHER COMPONENT'S FUNCTION EDITDIAMOND WITH THE INDEX OF THE DIAMOND\r\n  editDiamond = (element) => {\r\n    console.log(\"EDIT\");\r\n    console.log(element.target.value);\r\n    this.props.editDiamond(element.target.value)\r\n  }\r\n  showAlert = () => {\r\n    let { show } = this.state;\r\n    show = true;\r\n    this.setState({ show });\r\n  }\r\n  hideAlert = () => {\r\n    let { show } = this.state;\r\n    show = false;\r\n    this.setState({ show });\r\n  }\r\n  render() {\r\n    const {cart}=this.props;\r\n    // console.log(\"stateModalOffer\");\r\n    // console.log(this.state.modalOffer);\r\n    var result = [];\r\n    for (var i = 0; i < this.state.list.length; i++) {\r\n      if (this.state.list[i].inFilter(this.props.filter)\r\n        && (!this.props.filter.owner\r\n          || this.state.list[i].owner.id === this.props.activeUser.id)) {\r\n        if (!this.props.activeUser) {\r\n          //IF anonimus \r\n          //DISPLAY SINGLE DIAMOND\r\n\r\n          result.push(<ShowDiamond key={i} ownerName={this.props.ownerName} edit={i} description={this.state.list[i]}>\r\n            <ButtonToolbar>\r\n              {/* DISPLAY THE USER'S ACTION BUTTONS */}\r\n              <Button onClick={(e) => {\r\n                  if (!cart.includes(this.state.list[e.target.value].id)){\r\n                  this.props.addToCart(this.state.list[e.target.value].id);\r\n                  this.showAlert();\r\n                }}}\r\n                value={i} style={{ width: \"100px\", height: \"60px\", marginLeft: \"15px\", marginTop: \"10px\" }} variant=\"success\">Add to Cart</Button>\r\n            </ButtonToolbar>\r\n          </ShowDiamond>);\r\n        }\r\n\r\n        else\r\n          if (this.state.list[i].owner.id == this.props.activeUser.id) {\r\n            //IF THE USER IS THE OWNER OF THE DIAMOND\r\n            //DISPLAY SINGLE DIAMOND\r\n            result.push(<ShowDiamond key={i} ownerName={this.props.ownerName} edit={i} description={this.state.list[i]}>\r\n              <ButtonToolbar>\r\n                {/* DISPLAY THE OWNER'S ACTION BUTTONS */}\r\n                <Button onClick={this.editDiamond} value={i} style={{ width: \"100px\", height: \"60px\", marginLeft: \"15px\", marginTop: \"10px\" }} variant=\"warning\">Edit</Button>\r\n                <Button onClick={this.deleteDiamond} value={i} style={{ width: \"100px\", height: \"60px\", marginLeft: \"15px\", marginTop: \"10px\" }} variant=\"danger\">Delete</Button>\r\n                {/* <Button value={i} style={{ width: \"100px\", height: \"60px\", marginLeft: \"15px\", marginTop: \"10px\" }} variant=\"dark\" >Add to Auction</Button> */}\r\n              </ButtonToolbar>\r\n            </ShowDiamond>);\r\n          }\r\n          else {\r\n            //IF THE USER IS NOT THE OWNER OF THE DIAMOND\r\n            //DISPLAY SINGLE DIAMOND\r\n            result.push(<ShowDiamond key={i}  ownerName={this.props.ownerName} edit={i} description={this.state.list[i]}>\r\n              <ButtonToolbar>\r\n                {/* DISPLAY THE USER'S ACTION BUTTONS */}\r\n\r\n                <Button onClick={this.toggleOffer} value={i} style={{ width: \"100px\", height: \"60px\", marginLeft: \"15px\", marginTop: \"10px\" }} variant=\"primary\">Offer</Button>\r\n                <Button onClick={(e) => {\r\n                  if (!cart.includes(this.state.list[e.target.value].id)){\r\n                  this.props.addToCart(this.state.list[e.target.value].id);\r\n                  this.showAlert();\r\n                }}}\r\n                  value={i} style={{ width: \"100px\", height: \"60px\", marginLeft: \"15px\", marginTop: \"10px\" }} variant=\"success\">Add to cart</Button>\r\n                <Button onClick={this.toggle} value={i} style={{ width: \"100px\", height: \"60px\", marginLeft: \"15px\", marginTop: \"10px\" }} variant=\"secondary\" >Contact seller</Button>\r\n                {/* <Button value={i} style={{ width: \"100px\", height: \"60px\", marginLeft: \"15px\", marginTop: \"10px\" }} variant=\"info\" >Bid</Button> */}\r\n              </ButtonToolbar>\r\n            </ShowDiamond>);\r\n          }\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <Alert id=\"alertAddToCart\" key=\"alert\" variant=\"info\" show={this.state.show}>\r\n          Diamond has been added to your Cart\r\n        </Alert>\r\n        <SearchDiamondForm clearFilter={this.props.clearFilter} filter={this.props.filter} setFilter={this.props.setFilter} />\r\n        {result}\r\n        <SendMessageModal show={this.state.modal} diamond={this.state.list[this.state.index]} activeUser={this.props.activeUser} addMessage={this.props.addMessage} close={this.handleClose} ownerName={this.props.ownerName} />\r\n        <SendOfferModal show={this.state.modalOffer} diamond={this.state.list[this.state.index]} activeUser={this.props.activeUser} addMessage={this.props.addMessage} close={this.handleClose} ownerName={this.props.ownerName} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { Container, Button } from 'react-bootstrap'\r\nimport AddDiamond from '../components/AddNewDiamond'\r\nimport DiamondList from '../components/DiamondsList'\r\nimport { user, listPrice } from '../App'\r\nimport { Diamond1 } from '../Classes/Diamond'\r\nimport DiamondNavbar from '../components/DiamondNavbar';\r\nimport diamondPic from '../data/l8cb11pkn10.jpg'\r\nimport Parse from 'parse'; \r\n\r\nimport priceList from '../data/prices.json';\r\nconst axios = require('axios').default\r\n\r\n\r\nexport class Search extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      diamondArr: [],\r\n      prices: [],\r\n      isLoading: true,\r\n      filter: {\r\n        shape: [],\r\n        colorMin: \"D\",\r\n        colorMax: \"YZ\",\r\n        clarityMin: \"FL\",\r\n        clarityMax: \"I3\",\r\n        weightMin: 0,\r\n        weightMax: 10000,\r\n        owner: false,\r\n        clearColorFilter: false,\r\n        clearClarityFilter: false\r\n      },\r\n      edit: -1\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    // let {diamondArr,isLoading,prices}=this.state;\r\n    let isLoading = true;\r\n    let diamondArr = [];\r\n    let prices = priceList;\r\n    var newDiamond;\r\n    const Diamond = Parse.Object.extend('Diamond');\r\n    const query = new Parse.Query(Diamond);\r\n    query.find().then((diamondsParse) => {\r\n      // You can use the \"get\" method to get the value of an attribute\r\n      // Ex: response.get(\"<ATTRIBUTE_NAME>\")\r\n      diamondsParse.forEach((diamond) => {\r\n        newDiamond = new Diamond1(diamond);\r\n        diamondArr = diamondArr.concat([newDiamond]);\r\n      })\r\n      isLoading = false;\r\n      this.setState({ diamondArr, isLoading, prices })\r\n    }, (error) => {\r\n\r\n      console.error('Error while fetching Diamond', error);\r\n    });\r\n  }\r\n\r\n  saveDiamond = (diamond, atEdit) => {\r\n    let { edit, diamondArr } = this.state;\r\n    console.log(\"atedit:\" + atEdit)\r\n    console.log(\"diamond\");\r\n    console.log(diamond);\r\n    if (atEdit === -1) {\r\n\r\n      const Diamond = Parse.Object.extend('Diamond');\r\n      const myNewObject = new Diamond();\r\n\r\n      myNewObject.set('lotID', diamond.lotID);\r\n      myNewObject.set('shape', diamond.shape);\r\n      myNewObject.set('weight', Number(diamond.weight));\r\n      myNewObject.set('color', diamond.color);\r\n      myNewObject.set('clarity', diamond.clarity);\r\n      myNewObject.set('cut', diamond.cut);\r\n      myNewObject.set('polish', diamond.polish);\r\n      myNewObject.set('symmetry', diamond.symmetry);\r\n      myNewObject.set('fluorescence', diamond.fluorescence);\r\n      myNewObject.set('fluorescenceColor', diamond.fluorescenceColor);\r\n      myNewObject.set('lab', diamond.lab);\r\n      myNewObject.set('certificateNumber', diamond.certificateNumber);\r\n      myNewObject.set('depth', Number(diamond.depth));\r\n      myNewObject.set('table', Number(diamond.table));\r\n      myNewObject.set('crownAngle', Number(diamond.crownAngle));\r\n      myNewObject.set('crownHeight', Number(diamond.crownHeight));\r\n      myNewObject.set('pavillionAngle', Number(diamond.pavillionAngle));\r\n      myNewObject.set('pavillionDepth', Number(diamond.pavillionDepth));\r\n      myNewObject.set('starLength', Number(diamond.starLength));\r\n      myNewObject.set('lowerHalf', Number(diamond.lowerHalf));\r\n      myNewObject.set('girdle', diamond.girdle);\r\n      myNewObject.set('culet', diamond.culet);\r\n      myNewObject.set('list', Number(diamond.list));\r\n      myNewObject.set('discount', Number(diamond.discount));\r\n      myNewObject.set('pricePerCarat', Number(diamond.pricePerCarat));\r\n      myNewObject.set('links', diamond.links);\r\n      // myNewObject.set('inclusions',diamond.inclusions);\r\n      if (diamond.keepDiscount) myNewObject.set('keepDiscount', diamond.keepDiscount);\r\n      myNewObject.set('diamMin', Number(diamond.diamMin));\r\n      myNewObject.set('diamMax', Number(diamond.diamMax));\r\n      myNewObject.set('deptAvg', Number(diamond.deptAvg));\r\n      myNewObject.set('owner', Parse.User.current());\r\n      console.log(\"pic1 and pic2 before save\");\r\n      console.log(diamond.pic1, diamond.pic2);\r\n      console.log(typeof diamond.pic1.file);\r\n      if (diamond.pic1 && diamond.pic1.file) myNewObject.set('pic1', new Parse.File(diamond.pic1.name, diamond.pic1.file));\r\n      if (diamond.pic2 && diamond.pic2.file) myNewObject.set('pic2', new Parse.File(diamond.pic2.name, diamond.pic2.file));\r\n      console.log(\"going to save this diamond:\");\r\n      console.log(myNewObject);\r\n      myNewObject.save().then(\r\n        (result) => {\r\n          console.log('Diamond created', result);\r\n          diamondArr = diamondArr.concat([new Diamond1(result)]);\r\n          console.log(diamondArr);\r\n          edit = -1;\r\n          this.setState({ edit, diamondArr });\r\n        },\r\n        (error) => {\r\n          console.error('Error while creating Diamond: ', error);\r\n        }\r\n      );\r\n    }\r\n    else {\r\n      const Diamond = Parse.Object.extend('Diamond');\r\n      const query = new Parse.Query(Diamond);\r\n      // here you put the objectId that you want to update\r\n      query.get(diamond.id).then((object) => {\r\n        object.set('lotID', diamond.lotID);\r\n        object.set('shape', diamond.shape);\r\n        object.set('weight', Number(diamond.weight));\r\n        object.set('color', diamond.color);\r\n        object.set('clarity', diamond.clarity);\r\n        object.set('cut', diamond.cut);\r\n        object.set('polish', diamond.polish);\r\n        object.set('symmetry', diamond.symmetry);\r\n        object.set('fluorescence', diamond.fluorescence);\r\n        object.set('fluorescenceColor', diamond.fluorescenceColor);\r\n        object.set('lab', diamond.lab);\r\n        object.set('certificateNumber', diamond.certificateNumber);\r\n        object.set('depth', Number(diamond.depth));\r\n        object.set('table', Number(diamond.table));\r\n        object.set('crownAngle', Number(diamond.crownAngle));\r\n        object.set('crownHeight', Number(diamond.crownHeight));\r\n        object.set('pavillionAngle', Number(diamond.pavillionAngle));\r\n        object.set('pavillionDepth', Number(diamond.pavillionDepth));\r\n        object.set('starLength', Number(diamond.starLength));\r\n        object.set('lowerHalf', Number(diamond.lowerHalf));\r\n        object.set('girdle', diamond.girdle);\r\n        object.set('culet', diamond.culet);\r\n        object.set('list', Number(diamond.list));\r\n        object.set('discount', Number(diamond.discount));\r\n        object.set('pricePerCarat', Number(diamond.pricePerCarat));\r\n        object.set('links', diamond.links);\r\n        // object.set('inclusions',diamond.inclusions);\r\n        object.set('keepDiscount', diamond.keepDiscount);\r\n        object.set('diamMin', Number(diamond.diamMin));\r\n        object.set('diamMax', Number(diamond.diamMax));\r\n        object.set('deptAvg', Number(diamond.deptAvg));\r\n        object.set('owner', Parse.User.current());\r\n        console.log(\"the file i want to save\");\r\n        console.log(diamond.pic1);\r\n        if (!diamond.pic1.file) {object.set('pic1',null)}\r\n        else if (!diamond.pic1.file[\"_name\"]){ object.set('pic1', new Parse.File(diamond.pic1.name, diamond.pic1.file)); }\r\n        else  {object.set('pic1', diamond.pic1.file)};\r\n        if (!diamond.pic2.file) {object.set('pic2',null)}\r\n        else if (!diamond.pic2.file[\"_name\"]){ object.set('pic2', new Parse.File(diamond.pic2.name, diamond.pic2.file)); }\r\n        else  {object.set('pic2', diamond.pic2.file)};       \r\n        object.save().then((response) => {\r\n          // You can use the \"get\" method to get the value of an attribute\r\n          // Ex: response.get(\"<ATTRIBUTE_NAME>\")\r\n          console.log('Updated Diamond', response);\r\n         diamondArr.splice(atEdit, 1, new Diamond1(response));\r\n          console.log(diamondArr);\r\n          edit = -1;\r\n          this.setState({ edit, diamondArr });\r\n        }, (error) => {\r\n\r\n          console.error('Error while updating Diamond', error);\r\n        });\r\n      });\r\n\r\n    }\r\n\r\n  }\r\n\r\n  deleteDiamond = (index) => {\r\n    let { diamondArr } = this.state;\r\n    let id = diamondArr[index].id;\r\n    const Diamond = Parse.Object.extend('Diamond');\r\n    const query = new Parse.Query(Diamond);\r\n    // here you put the objectId that you want to delete\r\n    query.get(id).then((object) => {\r\n      object.destroy().then((response) => {\r\n\r\n        var newArr = diamondArr.splice(index, 1);\r\n        this.setState(newArr);\r\n        console.log('Deleted Diamond', response);\r\n      }, (error) => {\r\n\r\n        console.error('Error while deleting Diamond', error);\r\n      });\r\n    });\r\n\r\n\r\n  }\r\n  setFilter = (filter) => {\r\n    this.setState({ filter })\r\n  }\r\n  editDiamond = (index) => {\r\n    let newState = this.state;\r\n    newState.edit = index;\r\n    this.setState(newState)\r\n  }\r\n  cancelEdit = () => {\r\n    let newState = {\r\n      edit: -1\r\n    }\r\n    this.setState(newState)\r\n  }\r\n  clearFilter = () => {\r\n    let filter = {\r\n      shape: [],\r\n      colorMin: \"D\",\r\n      colorMax: \"YZ\",\r\n      clarityMin: \"FL\",\r\n      clarityMax: \"I3\",\r\n      weightMin: \"\",\r\n      weightMax: \"\",\r\n      owner: false,\r\n      clearClarityFilter: true,\r\n      clearColorFilter: true\r\n    }\r\n    this.setFilter(filter);\r\n  }\r\n  render() {\r\n    const { activeUser, handleLogout, allMessages } = this.props;\r\n    if (this.state.isLoading) return false;\r\n    // console.log(this.state.diamondArr[0].pic1)\r\n    return (\r\n\r\n      <Container >\r\n        <DiamondNavbar cart={this.props.cart}  allMessages={allMessages} activeUser={activeUser} handleLogout={handleLogout} />\r\n        <AddDiamond filter={this.state.filter} setFilter={this.setFilter} activeUser={activeUser} saveDiamond={this.saveDiamond} cancelEdit={this.cancelEdit} addEdit={this.addEdit} prices={this.state.prices} edit={this.state.edit} diamonds={this.state.diamondArr} />\r\n        {/* <Button variant=\"warning\" onClick={this.clearFilter} className=\"fullWin\">\r\n                    Clear all filters\r\n            </Button>  */}\r\n        <DiamondList cart={this.props.cart}   addToCart={this.props.addToCart}  addMessage={this.props.addMessage} clearFilter={this.clearFilter} filter={this.state.filter} setFilter={this.setFilter} ownerName={this.props.ownerName} activeUser={activeUser} deleteDiamond={this.deleteDiamond} editDiamond={this.editDiamond} list={this.state.diamondArr} />\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Search;","import React from 'react'\r\nimport { Container,Form, Button, Alert } from 'react-bootstrap'\r\nimport { Redirect } from 'react-router-dom';\r\nimport DiamondNavbar from '../components/DiamondNavbar';\r\nimport User from '../Classes/User'\r\nimport Parse from 'parse';\r\n\r\nclass LoginPage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            invalidLogin: false,\r\n            successLogin: false\r\n        }\r\n\r\n        this.emailInput = React.createRef();\r\n        this.pwdInput = React.createRef();\r\n\r\n        this.login = this.login.bind(this);\r\n    }\r\n\r\n    login() {\r\n        // Pass the username and password to logIn function\r\n        Parse.User.logIn(this.emailInput.current.value,this.pwdInput.current.value).then((user) => {\r\n            // Do stuff after successful login\r\n             console.log('Logged in user', user);\r\n\r\n            const User1 = new Parse.User();\r\n            const query = new Parse.Query(User1);\r\n\r\n            // Finds the user by its ID\r\n            query.get(user.id).then((user) => {\r\n                // Updates the data we want\r\n                user.set('isLogin', true);\r\n                user.save().then((response) => {\r\n                console.log('Updated user', response);\r\n                    this.props.handleLogin(new User(user));\r\n                    this.setState({successLogin: true});\r\n\r\n\r\n            }).catch((error) => {\r\n            console.error('Error while updating user', error);\r\n            });\r\n            });\r\n\r\n        }).catch(error => {\r\n  \r\n            console.error('Error while logging in user', error);\r\n            this.setState({invalidLogin: true});\r\n        })\r\n\r\n    }\r\n\r\n    render() {\r\n        const { activeUser, handleLogout } = this.props;\r\n        if (this.state.successLogin) {\r\n            return <Redirect to=\"/home\"/>\r\n        }\r\n\r\n        return (\r\n            <Container>\r\n            <DiamondNavbar cart={this.props.cart}   allMessages={this.state.allMessages} activeUser={activeUser} handleLogout={handleLogout}/>\r\n            <div className=\"login\">\r\n                <h1>Login to Diamonds</h1>\r\n                <p>or <a href=\"#/signup\">create an account</a></p>\r\n                <Alert variant=\"danger\" show={this.state.invalidLogin}>\r\n                    Invalid email or password!\r\n                </Alert>\r\n                <Form>\r\n                    <Form.Group controlId=\"formBasicEmail\">\r\n                        <Form.Label>Email address</Form.Label>\r\n                        <Form.Control \r\n                        // value=\"pintob\" \r\n                        ref={this.emailInput} type=\"email\" placeholder=\"Enter email\"/>\r\n                        <Form.Text className=\"text-muted\">\r\n                            We'll never share your email with anyone else.\r\n                        </Form.Text>\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"formBasicPassword\">\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control\r\n                        //  value=\"1397\"\r\n                          ref={this.pwdInput}  type=\"password\" placeholder=\"Password\"/>\r\n                    </Form.Group>\r\n                    <Button variant=\"success\" type=\"button\" block onClick={this.login}>\r\n                        Login\r\n                    </Button>\r\n                </Form>\r\n            </div>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\nexport default LoginPage;","import React from 'react'\r\nimport { Container, Form, Button, Alert, Image } from 'react-bootstrap'\r\nimport { Redirect } from 'react-router-dom';\r\nimport DiamondNavbar from '../components/DiamondNavbar';\r\nimport User from '../Classes/User'\r\nimport Parse from 'parse';\r\n\r\nclass SignupPage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            invalidLogin: false,\r\n            successLogin: false,\r\n            image: \"\"\r\n        }\r\n\r\n        this.emailInput = React.createRef();\r\n        this.pwdInput = React.createRef();\r\n        this.userInput = React.createRef();\r\n        this.lnameInput = React.createRef();\r\n        this.fnameInput = React.createRef();\r\n    }\r\n\r\n    signup = () => {\r\nconst {image}=this.state;\r\n        const user = new Parse.User()\r\n        user.set('username', this.userInput.current.value);\r\n        user.set('email', this.emailInput.current.value);\r\n        user.set('lname', this.lnameInput.current.value);\r\n        user.set('fname', this.fnameInput.current.value);\r\n        user.set('password', this.pwdInput.current.value);\r\n        user.set('isLogin', true);\r\n        if (image) user.set('pic', new Parse.File(image[\"_name\"], image.file));\r\n        user.signUp().then((user) => {\r\n\r\n            console.log('User signed up', user);\r\n            this.props.handleLogin(new User(user));\r\n            this.setState({ successLogin: true });\r\n\r\n        }).catch(error => {\r\n\r\n            console.error('Error while signing up user', error);\r\n            this.setState({ invalidLogin: true });\r\n        });\r\n\r\n    }\r\n    imgChange=(ev)=> {\r\n\r\n        let image = {};\r\n        image.file = ev.target.files[0];\r\n        if (image.file) {\r\n            image.URL = URL.createObjectURL(image.file);\r\n        } else {\r\n            image.URL = \"\";\r\n        }\r\n        this.setState({ image });\r\n    }\r\n    render() {\r\n        const { activeUser, handleLogout } = this.props;\r\n        const { image } = this.state;\r\n        if (this.state.successLogin) {\r\n            return <Redirect to=\"/home\" />\r\n        }\r\n\r\n        return (\r\n            <Container>\r\n                <DiamondNavbar cart={this.props.cart}  allMessages={this.state.allMessages} activeUser={activeUser} handleLogout={handleLogout} />\r\n                <div className=\"login\">\r\n                    <h1>SignUp to Diamonds</h1>\r\n                    <p>or <a href=\"#/login\">Allready have an accout? Login here</a></p>\r\n                    <Alert variant=\"danger\" show={this.state.invalidLogin}>\r\n                        Signup has failed! Please choose a complex password\r\n                </Alert>\r\n                    <Form>\r\n                        <Form.Group controlId=\"formBasicUsername\">\r\n                            <Form.Label>User Name</Form.Label>\r\n                            <Form.Control ref={this.userInput} type=\"text\" placeholder=\"Enter username\" />\r\n                            <Form.Text className=\"text-muted\">\r\n                            </Form.Text>\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"formBasicEmail\">\r\n                            <Form.Label>Email address</Form.Label>\r\n                            <Form.Control ref={this.emailInput} type=\"email\" placeholder=\"Enter email\" />\r\n                            <Form.Text className=\"text-muted\">\r\n                                We'll never share your email with anyone else.\r\n                        </Form.Text>\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"formBasicPassword\">\r\n                            <Form.Label>Password</Form.Label>\r\n                            <Form.Control ref={this.pwdInput} type=\"password\" placeholder=\"Password\" />\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"formBasicfname\">\r\n                            <Form.Label>First Name</Form.Label>\r\n                            <Form.Control ref={this.fnameInput} type=\"text\" placeholder=\"Enter first name\" />\r\n                            <Form.Text className=\"text-muted\">\r\n                            </Form.Text>\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"formBasiclname\">\r\n                            <Form.Label>Last Name</Form.Label>\r\n                            <Form.Control ref={this.lnameInput} type=\"text\" placeholder=\"Enter Last name\" />\r\n                            <Form.Text className=\"text-muted\">\r\n                            </Form.Text>\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"formFile1\">\r\n                            <Form.Label >\r\n                                Choose an Image file\r\n                            </Form.Label>\r\n                            Image\r\n                            <Form.Control data-id=\"1\" type=\"file\" placeholder=\"Diamond image URL\" accept=\"image/*\" onChange={this.imgChange} />\r\n                            <Image src={image.URL} style={{ width: \"15%\" }} fluid />\r\n                        </Form.Group>\r\n                        <Button variant=\"success\" type=\"button\" block onClick={this.signup}>\r\n                            Signup\r\n                    </Button>\r\n                    </Form>\r\n                </div>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\nexport default SignupPage;","import React from 'react';\r\nimport { InputGroup, FormControl,Jumbotron,Container } from 'react-bootstrap'\r\nimport Cards from 'react-credit-cards';\r\n\r\n\r\n//payment form\r\nexport default class PaymentForm extends React.Component {\r\n    state = {\r\n        cvc: '',\r\n        expiry: '',\r\n        focus: '',\r\n        name: '',\r\n        number: '',\r\n    };\r\n\r\n    handleInputFocus = (e) => {\r\n        this.setState({ focus: e.target.name });\r\n    }\r\n\r\n    handleInputChange = (e) => {\r\n        const { name, value } = e.target;\r\n\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n\r\n        <Jumbotron fluid>\r\n                <Container>\r\n                    <h1>Payment</h1>\r\n                    <p>\r\n                        Please enter your credit card information\r\n                    </p>\r\n   \r\n                <Cards className=\"md-12 sm-12\"\r\n                    cvc={this.state.cvc}\r\n                    expiry={this.state.expiry}\r\n                    focus={this.state.focus}\r\n                    name={this.state.name}\r\n                    number={this.state.number}\r\n                />\r\n                <div style={{ width: \"400px\", marginTop: \"50px\" }} className=\" container md-6 sm-12 mr-auto\"  >\r\n                    <InputGroup className=\"mb-3 sm-12\">\r\n                        <FormControl\r\n                            type=\"tel\"\r\n                            name=\"number\"\r\n                            placeholder=\"Card Number\"\r\n                            aria-label=\"Card Number\"\r\n                            aria-describedby=\"basic-addon1\"\r\n                            onChange={this.handleInputChange}\r\n                            onFocus={this.handleInputFocus}\r\n                        />\r\n                    </InputGroup>\r\n                    <InputGroup className=\"mb-3 sm-6\">\r\n                        <FormControl\r\n                            type=\"number\"\r\n                            name=\"expiry\"\r\n                            placeholder=\"MMYY\"\r\n                            aria-label=\"MMYY\"\r\n                            aria-describedby=\"basic-addon1\"\r\n                            onChange={this.handleInputChange}\r\n                            onFocus={this.handleInputFocus}\r\n                        />\r\n                    </InputGroup>\r\n                    <InputGroup className=\"mb-3 sm-6\">\r\n                        <FormControl\r\n                            type=\"number\"\r\n                            name=\"cvc\"\r\n                            placeholder=\"CVC\"\r\n                            aria-label=\"CVC\"\r\n                            aria-describedby=\"basic-addon1\"\r\n                            onChange={this.handleInputChange}\r\n                            onFocus={this.handleInputFocus}\r\n                        />\r\n                    </InputGroup>\r\n                    <InputGroup className=\"mb-3 sm-12\">\r\n                        <FormControl\r\n                            type=\"text\"\r\n                            name=\"name\"\r\n                            placeholder=\"name\"\r\n                            aria-label=\"name\"\r\n                            aria-describedby=\"basic-addon1\"\r\n                            onChange={this.handleInputChange}\r\n                            onFocus={this.handleInputFocus}\r\n                        />\r\n                    </InputGroup>\r\n                </div>\r\n                </Container>\r\n            </Jumbotron>\r\n        );\r\n    }\r\n}","import React from 'react'\r\nimport { Container,Table } from 'react-bootstrap'\r\n// import { Redirect } from 'react-router-dom';\r\nimport DiamondNavbar from '../components/DiamondNavbar';\r\nimport { Diamond1 } from '../Classes/Diamond';\r\nimport Parse from 'parse';\r\nimport deleteFromCartIcon from '../data/delete-1507091-1279000.png'\r\nimport PaymentForm from '../components/PaymentForm'\r\n\r\n// import User from '../Classes/User'\r\n// import Parse from 'parse';\r\n\r\nclass ShoppingCart extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            diamondsInCart: []\r\n        }\r\n    }\r\n    componentDidMount(){\r\n            let diamondsInCart=[];\r\n            const {cart}=this.props;\r\n            const Diamond = Parse.Object.extend('Diamond');\r\n            const query = new Parse.Query(Diamond);\r\n\r\n            query.find().then((results) => {\r\n                // You can use the \"get\" method to get the value of an attribute\r\n                // Ex: response.get(\"<ATTRIBUTE_NAME>\")\r\n                results.forEach(diamond=>{\r\n                    if (cart.includes(diamond.id)) {diamondsInCart.push(new Diamond1(diamond))};\r\n                })\r\n                console.log('Diamond found', results);\r\n                this.setState({diamondsInCart});\r\n            }, (error) => {\r\n                \r\n                console.error('Error while fetching Diamond', error);\r\n            });\r\n        }\r\n        render() {\r\n            const { activeUser, handleLogout, allMessages, cart,ownerName,deleteFromCart } = this.props;\r\n            const { diamondsInCart } = this.state;\r\n            let index=-1;\r\n            let tableLines=[];\r\n            let weight,price,lineTotal,total;\r\n            let caratTotal=0;\r\n            let priceAVG=0;\r\n            total=0;\r\n            if (!diamondsInCart.length){tableLines.push(<tr key={index}><td><h3>Your cart is empty</h3></td></tr>)}\r\n            else{\r\n            diamondsInCart.forEach(diamond=>{\r\n                index++;\r\n                weight=diamond.weight;\r\n                price=diamond.pricePerCarat;\r\n                lineTotal=weight*price;\r\n                total+=lineTotal;\r\n                caratTotal+=weight;\r\n                if (caratTotal) priceAVG=total/caratTotal;\r\n                tableLines.push(           \r\n                 <tr key={index}>\r\n                    <td>{index}</td>\r\n                    <td>{ownerName(diamond.owner.id)}</td>\r\n                    <td>{`${diamond.lotID} ${diamond.shape} ${diamond.color} ${diamond.clarity}`}</td>\r\n                    <td>{weight}</td>\r\n                    <td>{price.toFixed(2)}</td>\r\n                    <td>{lineTotal.toFixed(2)}</td>\r\n                    <td><img className=\"deleteMessage\" \r\n                            onClick={()=>{\r\n                             \r\n                                    diamondsInCart.splice(index,1);\r\n                                    this.setState({diamondsInCart});\r\n                                    deleteFromCart(diamond.id);\r\n                                    \r\n                                } }\r\n                            style={{width:\"40px\"}} \r\n                            src={deleteFromCartIcon}></img></td>\r\n                </tr>)\r\n                \r\n            })\r\n            tableLines.push(           \r\n                <tr>\r\n                   <td></td>\r\n                   <td></td>\r\n                   <td></td>\r\n                   <td style={{fontWeight:\"bold\"}}>{caratTotal.toFixed(2)}</td>\r\n                   <td>{priceAVG.toFixed(2)}</td>\r\n                   <td style={{fontWeight:\"bold\"}}>{total.toFixed(2)}</td>\r\n                   <td></td>\r\n               </tr>)           \r\n            }\r\n            return (\r\n                <Container>\r\n                    <DiamondNavbar cart={cart} allMessages={allMessages} activeUser={activeUser} handleLogout={handleLogout} />\r\n                    <h1>Shopping Cart</h1>\r\n                    <Table striped bordered hover size=\"sm\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>#</th>\r\n                                <th>Owner</th>\r\n                                <th>Description</th>\r\n                                <th>Weight</th>\r\n                                <th>Price</th>\r\n                                <th>Total</th>\r\n                                <th>Delete</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {tableLines}\r\n                        </tbody>\r\n                    </Table>\r\n\r\n                    <PaymentForm/>\r\n                </Container>\r\n            );\r\n        }\r\n    }\r\n    export default ShoppingCart;","import React from 'react';\r\nimport { Container, Jumbotron, ListGroup } from 'react-bootstrap'\r\nimport messagearrived from '../data/V-512.png'\r\nimport messageread from '../data/seen-300x225.webp'\r\nimport cartIcon from '../data/flat_seo3-24-512.png'\r\n\r\nimport DiamondNavbar from '../components/DiamondNavbar';\r\n\r\nexport default class About extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n    }\r\n    render() {\r\n        const { activeUser, handleLogout, allMessages } = this.props;\r\n        return (\r\n            <Container>\r\n                <DiamondNavbar cart={this.props.cart} allMessages={allMessages} activeUser={activeUser} handleLogout={handleLogout} />\r\n                <Jumbotron fluid>\r\n                    <Container>\r\n                        <h1>About</h1>\r\n                        <p>\r\n                            this web sight has been built by Boaz Pinto as a final front end web development course project.\r\n\r\n                        </p>\r\n                        <h1>Features</h1>\r\n                        <ListGroup>\r\n                            <ListGroup.Item variant=\"primary\">Search</ListGroup.Item>\r\n                            <ListGroup.Item>show my listings - filter to owner=activeuser</ListGroup.Item>\r\n                            <ListGroup.Item>clear all filters - clear filters</ListGroup.Item>\r\n                            <ListGroup.Item>Add new Diamond - popup window to enter all diamond parameters</ListGroup.Item>\r\n                            <ListGroup.Item>Acordion - click to see aditional information and action buttons</ListGroup.Item>\r\n                            <ListGroup.Item>Hover on image to enlarge</ListGroup.Item>\r\n                            <ListGroup.Item>Delete - action button for the owner of the diamond</ListGroup.Item>\r\n                            <ListGroup.Item>Edit - action button for the owner of the diamond</ListGroup.Item>\r\n                            <ListGroup.Item>contact - action button for user to send message to the owner</ListGroup.Item>\r\n                            <ListGroup.Item>filter - filter the list of diamonds by min weight and max weight</ListGroup.Item>\r\n                            <ListGroup.Item>filter - filter the list by shapes buttons, mutiple selectio, clear all and select all</ListGroup.Item>\r\n                            <ListGroup.Item>filter - double sided range input for color and clarity</ListGroup.Item>\r\n                            <ListGroup.Item>Upload from excel</ListGroup.Item>\r\n                            <ListGroup.Item>Mapping excel headers with parse object keys</ListGroup.Item>\r\n                            <ListGroup.Item variant=\"warning\">Messages</ListGroup.Item>\r\n                            <ListGroup.Item>List of members, sorted by new messages and by last message date</ListGroup.Item>\r\n                            <ListGroup.Item>search a member by name or by userName</ListGroup.Item>\r\n                            <ListGroup.Item>show conversation with member as a chat style</ListGroup.Item>\r\n                            <ListGroup.Item>each message yoy send shows if it has been arrived <img style={{width:\"20px\"}} src={messagearrived}></img> or read <img style={{width:\"20px\"}}  src={messageread}></img></ListGroup.Item>\r\n                            <ListGroup.Item>Delete message you wrote will delete message both sides</ListGroup.Item>\r\n                            <ListGroup.Item>Delete message you reccieved will delete it only your side</ListGroup.Item>\r\n                            <ListGroup.Item>input field to send message</ListGroup.Item>\r\n                            <ListGroup.Item variant=\"success\">Cart<img  style={{width:\"30px\"}} src={cartIcon} ></img></ListGroup.Item>\r\n                            <ListGroup.Item>show your items in cart</ListGroup.Item>\r\n                            <ListGroup.Item>combines diamonds in cart at login</ListGroup.Item>\r\n                            <ListGroup.Item>canceling diamonds in cart that are owned by activeuser </ListGroup.Item>\r\n                            <ListGroup.Item>delete button to remove from cart</ListGroup.Item>\r\n                            <ListGroup.Item>summery of carats and prices</ListGroup.Item>\r\n                            <ListGroup.Item>credit card form that shows an image of the credit card company by the first digits of credit muber</ListGroup.Item>\r\n                            <ListGroup.Item variant=\"danger\">Login</ListGroup.Item>\r\n                            <ListGroup.Item variant=\"primary\">Signup</ListGroup.Item>\r\n                            <ListGroup.Item variant=\"success\">HomePage</ListGroup.Item>\r\n                            <ListGroup.Item>Carousel with pictures of diamonds and major diamond centers worlwide</ListGroup.Item>\r\n                        </ListGroup>\r\n                        <h1>Contact</h1>\r\n                        <p>\r\n                            Boaz Pinto - pintob@gmail.com\r\n\r\n                        </p>\r\n                    </Container>\r\n                </Jumbotron>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\n","import React from 'react';\r\nimport { Container, Jumbotron, Table, Form, Button } from 'react-bootstrap'\r\nimport readXlsxFile from 'read-excel-file'\r\nimport DiamondNavbar from '../components/DiamondNavbar';\r\nimport Parse from 'parse';\r\nimport excelIcon from '../data/38-383271_excel-logo-png-microsoft-excel-logo-transparent-png.png'\r\n\r\n\r\n//upload diamonds from excel sheet\r\nexport default class LoadExcel extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            excelRows: [], //keep the excel data rows\r\n            headers: [], //keep the excel headers row\r\n            header: {}, //keep an object with parse diamond keys and an index that represent the column number in the excel\r\n            log1: []    // keeps the remarks log to show at the end of the upload\r\n        }\r\n\r\n    }\r\n    // internal function to save a diamond in parse. input : object with one diamond data\r\n    saveDiamond = (diamond) => {\r\n\r\n        const Diamond = Parse.Object.extend('Diamond');\r\n        const myNewObject = new Diamond();\r\n        myNewObject.set('lotID', diamond.lotID);\r\n        myNewObject.set('shape', diamond.shape);\r\n        myNewObject.set('weight', Number(diamond.weight));\r\n        myNewObject.set('color', diamond.color);\r\n        myNewObject.set('clarity', diamond.clarity);\r\n        myNewObject.set('cut', diamond.cut);\r\n        myNewObject.set('polish', diamond.polish);\r\n        myNewObject.set('symmetry', diamond.symmetry);\r\n        myNewObject.set('fluorescence', diamond.fluorescence);\r\n        myNewObject.set('fluorescenceColor', diamond.fluorescenceColor);\r\n        myNewObject.set('lab', diamond.lab);\r\n        myNewObject.set('certificateNumber', diamond.certificateNumber);\r\n        myNewObject.set('depth', Number(diamond.depth));\r\n        myNewObject.set('table', Number(diamond.table));\r\n        myNewObject.set('crownAngle', Number(diamond.crownAngle));\r\n        myNewObject.set('crownHeight', Number(diamond.crownHeight));\r\n        myNewObject.set('pavillionAngle', Number(diamond.pavillionAngle));\r\n        myNewObject.set('pavillionDepth', Number(diamond.pavillionDepth));\r\n        myNewObject.set('starLength', Number(diamond.starLength));\r\n        myNewObject.set('lowerHalf', Number(diamond.lowerHalf));\r\n        myNewObject.set('girdle', diamond.girdle);\r\n        myNewObject.set('culet', diamond.culet);\r\n        myNewObject.set('list', Number(diamond.list));\r\n        myNewObject.set('discount', Number(diamond.discount));\r\n        myNewObject.set('pricePerCarat', Number(diamond.pricePerCarat));\r\n        myNewObject.set('links', diamond.links);\r\n        // myNewObject.set('inclusions',diamond.inclusions);\r\n        if (diamond.keepDiscount) myNewObject.set('keepDiscount', diamond.keepDiscount);\r\n        myNewObject.set('diamMin', Number(diamond.diamMin));\r\n        myNewObject.set('diamMax', Number(diamond.diamMax));\r\n        myNewObject.set('deptAvg', Number(diamond.deptAvg));\r\n        myNewObject.set('owner', Parse.User.current());\r\n        myNewObject.save().then(\r\n            (result) => {\r\n                console.log('Diamond created', result);\r\n            },\r\n            (error) => {\r\n                console.error('Error while creating Diamond: ', error);\r\n            }\r\n        );\r\n\r\n\r\n    }\r\n\r\n    // function to load excel data using libraary 'read-excel-file', and set the state with the headers line and the data lines\r\n    // if any excel header column match a parse diamond object key, header state i also updated with the column number (example: header={shape: 2,color:4})\r\n    loadExcelFile = (e) => {\r\n        let { excelRows, headers, header, log1 } = this.state;\r\n        excelRows = [];\r\n        headers = [];\r\n        header = {};\r\n        log1 = [];\r\n\r\n        const input = e.target;\r\n        readXlsxFile(input.files[0]).then((rows) => {\r\n            // `rows` is an array of rows\r\n            // each row being an array of cells.\r\n\r\n            headers = rows[0];\r\n            excelRows = rows.splice(1, rows.length - 1);\r\n            for (var i = 0; i < headers.length; i++) {\r\n                if ([\"shape\", \"weight\", \"color\", \"clarity\", \"lotID\", \"cut\", \"polish\", \"symmetry\",\r\n                    \"fluorescence\", \"fluorescenceColor\", \"lab\", \"certificateNumber\", \"depth\", \"table\",\r\n                    \"crownAngle\", \"crownHeight\", \"pavillionAngle\", \"pavillionDepth\", \"starLength\", \"lowerHalf\",\r\n                    \"girdle\", \"culet\", \"discount\", \"pricePerCarat\", \"diamMin\", \"diamMax\", \"deptAvg\"\r\n                ].includes(headers[i])) { header[headers[i]] = i }\r\n            }\r\n            this.setState({ excelRows, headers, header, log1 })\r\n        })\r\n    }\r\n\r\n    //when a key is picked from a list, add to header (example: header={shape: 2,color:4})\r\n    getValues = (e) => {\r\n        console.log(e.target.id);\r\n        let { header } = this.state;\r\n        header[e.target.value] = parseInt(e.target.id);\r\n        this.setState({ header });\r\n    }\r\n\r\n    // for each row in the data, builds an object of diamond using the map built in state.header  (example: header={shape: 2,color:4,clarity:1,lotId:5}==> diamond={shape:value in column 2, color:value in column 4.......})\r\n    // attempts to upload diamonds to parse\r\n    // 6 keys are must : lotID,weight,shape,color,clarity and pricePerCarat\r\n    // for now the data is not verified\r\n    upload = () => {\r\n        const { activeUser } = this.props;\r\n        let { header, excelRows, log1 } = this.state;\r\n        const headerKeys = Object.keys(header);\r\n        let index = -1;\r\n        excelRows.forEach(row => {\r\n            //builds the diamond object with the data from excell data line\r\n            let diamond = {};\r\n            index++;\r\n            for (var i = 0; i < headerKeys.length; i++) {\r\n                if ([\"weight\", \"dept\", \"table\", \"crownAngle\", \"crownHeight\", \"pavillionAngle\", \"pavillionDept\", \"starLength\", \"lowerHalf\", \"discount\", \"pricePerCarat\", \"deptAvg\", \"diamMin\", \"diamMax\"].includes(headerKeys[i])) {\r\n                    diamond[headerKeys[i]] = Number(row[header[headerKeys[i]]])\r\n                }\r\n                else if ([\"lotID\", \"fluorescence\", \"fluorescenceColor\", \"culet\"].includes(headerKeys[i])) {\r\n                    diamond[headerKeys[i]] = row[header[headerKeys[i]]]\r\n                }\r\n                else {\r\n                    diamond[headerKeys[i]] = row[header[headerKeys[i]]].toUpperCase();\r\n                }\r\n            }\r\n            diamond.owner = Parse.User.current();\r\n            if (diamond.keepDiscount || diamond.keepDiscount === 0) { diamond.keepDiscount = true } else { diamond.keepDiscount = false };\r\n\r\n            //checks if there ar the necesary 6 fields\r\n            if (diamond.lotID && diamond.weight && diamond.shape && diamond.color && diamond.clarity && diamond.pricePerCarat) {\r\n                log1.push(<p key={index} style={{ color: \"green\" }}>{row} is valid for upload...</p>)\r\n                this.saveDiamond(diamond);\r\n            }\r\n            else {\r\n                log1.push(<p key={index} style={{ color: \"red\" }}>{row} is not valid for upload...</p>)\r\n            }\r\n\r\n        })\r\n        //completed the upload\r\n        log1.push(<p key={index + 0.5} style={{ color: \"purple\" }}>upload process completed</p>)\r\n        this.setState({ log1 });\r\n    }\r\n    render() {\r\n\r\n        const { activeUser, handleLogout, allMessages } = this.props;\r\n        const { excelRows, headers, log1 } = this.state;\r\n        if (log1.length) return (\r\n            <Container>\r\n                <DiamondNavbar cart={this.props.cart} allMessages={allMessages} activeUser={activeUser} handleLogout={handleLogout} />\r\n                <Jumbotron fluid>\r\n                    <div>\r\n                        {log1}\r\n                    </div>\r\n                </Jumbotron>\r\n            </Container>\r\n        )\r\n        let tableLines = [];\r\n        let index = -1;\r\n        headers.forEach(element => {\r\n            index++;\r\n            tableLines.push(<tr key={index}>\r\n                <td>{index}</td>\r\n                <td>{element}</td>\r\n                <td id={element}>\r\n                    <Form.Group>\r\n                        <Form.Label></Form.Label>\r\n                        <Form.Control id={\"0000\" + index} onChange={this.getValues} defaultValue={element} as=\"select\">\r\n                            <option></option>\r\n                            <option>certificateNumber</option>\r\n                            <option>clarity</option>\r\n                            <option>color</option>\r\n                            <option>crownAngle</option>\r\n                            <option>crownHeight</option>\r\n                            <option>culet</option>\r\n                            <option>cut</option>\r\n                            <option>depth</option>\r\n                            <option>diamMax</option>\r\n                            <option>diamMin</option>\r\n                            <option>deptAvg</option>\r\n                            <option>discount</option>\r\n                            <option>fluorescence</option>\r\n                            <option>fluorescenceColor</option>\r\n                            <option>girdle</option>\r\n                            <option>lab</option>\r\n                            <option>lotID</option>\r\n                            <option>lowerHalf</option>\r\n                            <option>pavillionAngle</option>\r\n                            <option>pavillionDepth</option>\r\n                            <option>polish</option>\r\n                            <option>pricePerCarat</option>\r\n                            <option>shape</option>\r\n                            <option>starLength</option>\r\n                            <option>symmetry</option>\r\n                            <option>table</option>\r\n                            <option>weight</option>\r\n\r\n                        </Form.Control>\r\n                    </Form.Group></td>\r\n            </tr>)\r\n\r\n        });\r\n        return (\r\n            <Container>\r\n                <DiamondNavbar cart={this.props.cart} allMessages={allMessages} activeUser={activeUser} handleLogout={handleLogout} />\r\n                <Jumbotron fluid>\r\n                    <div style={{position:\"relative\"}}>\r\n                    <input className=\"excelImage\"  style={{opacity:\"0\",position:\"absolute\",top:\"-70px\",left:\"0\", width:\"200px\",height:\"100px\"}} onChange={this.loadExcelFile} type=\"file\" id=\"input\" />\r\n                    <img  style={{pointerEvents:\"none\",position:\"absolute\",top:\"-70px\",left:\"0\", width:\"200px\",height:\"100px\"}} src={excelIcon}></img>\r\n                    </div>\r\n                    <Table  >\r\n                        <thead>\r\n                            <tr>\r\n                                <th>#</th>\r\n                                <th>Excel Header</th>\r\n                                <th>Map to</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {tableLines}\r\n                        </tbody>\r\n                    </Table>\r\n                    <Button onClick={this.upload}>Upload</Button>\r\n                </Jumbotron>\r\n\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\n","import React from 'react';\nimport './App.css';\nimport './multiselect.css'\nimport { Switch, Route } from 'react-router-dom'\nimport { Home } from './pages/home'\nimport { Messages } from './pages/messages'\nimport { Search } from './pages/search.js'\nimport jsonUsers from './data/users'\nimport LoginPage from './pages/LoginPage';\nimport SignupPage from './pages/Signup'\nimport Parse from 'parse';\nimport User from './Classes/User'\nimport { Message, usersMessages } from './Classes/Message'\nimport UserMessages from '../src/components/UserMessages'\nimport ShoppingCart from '../src/pages/ShoppingCart'\nimport About from '../src/pages/About'\nimport $ from \"jquery\";\nimport LoadExcel  from './pages/Load';\n\n// input: 4c's of diamond and a pricelist. output : list price of the diamond\nexport function listPrice(shape, color, clarity, weight, priceList) {\n  console.log(shape, color, clarity, weight, priceList[0])\n  if (shape !== \"BR\" && shape !== \"round\") { shape = \"pear\" } else { shape = \"round\" };\n  for (var i = 0; i < priceList.length; i++) { //searches the right price on the pricelist\n    if (shape === priceList[i].shape && color === priceList[i].color &&\n      clarity === priceList[i].clarity && weight >= Number(priceList[i].low_size) &&\n      weight <= Number(priceList[i].high_size))\n      return Number(priceList[i].caratprice);\n  }\n  return 0;\n}\n\n//returns the owner of a diamond\nfunction ownerOfDiamond(diamondId) {\n\n  const Diamond = Parse.Object.extend('Diamond');\n  const query = new Parse.Query(Diamond);\n  query.equalTo(\"objectId\", diamondId);\n  query.find().then((results) => {\n    // You can use the \"get\" method to get the value of an attribute\n    // Ex: response.get(\"<ATTRIBUTE_NAME>\")\n    results.forEach(diamond => {\n      if (diamond.id === diamondId) { alert(diamond.get(\"owner\").id); return diamond.get(\"owner\").id }\n    })\n  }, (error) => {\n\n    console.error('Error while fetching Diamond', error);\n    return false;\n  });\n}\n\n\n//main component\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      parseActive: null,\n      activeUser:\n        null,\n      allUsers: [],\n      allMessages: [],\n      isLoading: true,\n      cart: []\n    }\n\n    this.handleLogout = this.handleLogout.bind(this);\n    this.handleLogin = this.handleLogin.bind(this);\n\n\n  }\n//fetch messages related to activeuser from parse\n  getMessages = () => {\n    const { activeUser, parseActive } = this.state;\n    if (activeUser) {\n      let allMessages = [];\n\n      const parseMessages = Parse.Object.extend('Messages');\n\n      //messages from activeuser\n      const query1 = new Parse.Query(parseMessages);\n      query1.equalTo('from', parseActive);\n\n      //messages to activeuser\n      const query2 = new Parse.Query(parseMessages);\n      query2.equalTo('to', parseActive);\n\n      //messages from activeuser or to activeuser\n      const composedQuery = Parse.Query.or(query1, query2);\n\n      composedQuery.count().then((count) => {\n        //only 100 last messages\n        if (count > 100) composedQuery.skip(count - 100);\n        composedQuery.find().then((results) => {\n          // You can use the \"get\" method to get the value of an attribute\n          // Ex: response.get(\"<ATTRIBUTE_NAME>\")\n          console.log('Messages found', results);\n          let message1;\n          results.forEach(message => {\n            message1 = new Message(message);\n            //setting received to all messages to activeuser that are still marked not recieved\n            if (message1.to.id === activeUser.id && !message1.recieved) {\n              message1.recieved = true;\n              const Messages = Parse.Object.extend('Messages');\n              const query = new Parse.Query(Messages);\n              // here you put the objectId that you want to update\n              query.get(message1.id).then((object) => {\n                object.set('recieved', true);\n                object.save().then((response) => {\n                  // You can use the \"get\" method to get the value of an attribute\n                  // Ex: response.get(\"<ATTRIBUTE_NAME>\")\n\n                  console.log('Updated Messages', response);\n                }, (error) => {\n\n                  console.error('Error while updating Messages', error);\n                });\n              });\n            }\n            allMessages.push(message1);\n\n          });\n          this.setState({ allMessages });\n        }, (error) => {\n          console.error('Error while fetching Messages', error);\n        });\n\n      })\n    }\n  }\n\n\n  componentDidMount() {\n\n    //set interval for short time will read messages again and agin and will be more live\n    // setInterval(this.getMessages, 3000000000);\n\n    if (Parse.User.current()) { \n      this.handleLogin(new User(Parse.User.current()));\n      this.setState({ successLogin: true });\n    }\n\n//retrieving all users\n    let allUsers = [];\n    const parseUser = new Parse.User();\n    const query = new Parse.Query(parseUser);\n\n    query.find().then((users) => {\n      console.log('User found', users);\n      users.forEach(user => {\n        allUsers.push(new User(user))\n        this.setState({ allUsers });\n      })\n    }, (error) => {\n      console.error('Error while fetching user', error);\n    });\n\n  }\n\n\n  handleLogout() {\n    const User1 = new Parse.User();\n    const query = new Parse.Query(User1);\n    const { activeUser } = this.state;\n    let { cart } = this.state;\n    // Finds the user by its ID\n    query.get(activeUser.id).then((user) => {\n      // Updates the data we want\n\n      user.set('isLogin', false);\n      user.set('lastLogout', new Date());\n\n      // Saves the user with the updated data\n      user.save().then((response) => {\n        console.log('Updated user logout', response);\n        Parse.User.logOut();\n      }).catch((error) => {\n\n        console.error('Error while updating user', error);\n      });\n    });\n    cart = [];\n    this.setState({ activeUser: null, cart });\n  }\n\n  //at login retrieving the activeuser cart and merging with the current unregisterd user cart\n  //diamonds in the unregistered user cart that are owned by activeuser will be deleted from cart\n  handleLogin(activeUser) {\n\n    let { cart } = this.state;\n\n    //if prelogin cart is empty\n    if (cart === []) {\n      cart = activeUser.cart;\n      this.setState({ activeUser, cart });\n      this.getMessages();\n    }\n\n    //if prelogin cart is not empty and loginuser cart is not empty\n    else if (activeUser.cart) {\n      const Diamond = Parse.Object.extend('Diamond');\n      const query = new Parse.Query(Diamond);\n      // query.equalTo(\"objectId\", cart[i]);\n      query.find().then((results) => {\n        // You can use the \"get\" method to get the value of an attribute\n        // Ex: response.get(\"<ATTRIBUTE_NAME>\")\n\n        for (var i = 0; i < cart.length; i++) {\n          if (!activeUser.cart.includes(cart[i])) {\n            let ownerD;\n            for (var j = 0; j < results.length; j++) {\n              if (cart[i] === results[j].id) { ownerD = results[j].get(\"owner\").id; break }\n            }\n            if (ownerD != activeUser.id) { activeUser.cart.push(cart[i]) };\n          }\n        }\n        cart = activeUser.cart;\n\n        const User = new Parse.User();\n        const query = new Parse.Query(User);\n\n        // Finds the user by its ID\n        query.get(activeUser.id).then((user) => {\n          // Updates the data we want\n          let { parseActive } = this.state;\n          parseActive = user;\n          user.set('cart', cart);\n          // Saves the user with the updated data\n          user.save().then((response) => {\n\n            console.log('Updated user', response);\n          }).catch((error) => {\n\n            console.error('Error while updating user', error);\n          });\n          this.setState({ activeUser, cart, parseActive });\n          this.getMessages();\n        });\n      }, (error) => {\n\n        console.error('Error while fetching Diamond', error);\n\n      });\n\n    }\n     //if prelogin cart is not empty and loginuser cart is empty\n    else {\n      const User = new Parse.User();\n      const query = new Parse.Query(User);\n\n      // Finds the user by its ID\n      query.get(activeUser.id).then((user) => {\n        // Updates the data we want\n        user.set('cart', cart);\n        // Saves the user with the updated data\n        user.save().then((response) => {\n\n          console.log('Updated user', response);\n          this.setState({ activeUser, cart });\n          this.getMessages();\n        }).catch((error) => {\n\n          console.error('Error while updating user', error);\n        });\n      });\n    }\n  }\n\n  //gets owner id and returns owner name\n  ownerName = (userId) => {\n    for (var i = 0; i < this.state.allUsers.length; i++) {\n      if (this.state.allUsers[i].id == userId) return this.state.allUsers[i].fname + \" \" + this.state.allUsers[i].lname\n    }\n\n  }\n  //delete message both sides. happens when the sender is the one that deletes the message\n  deleteMessage = (id) => {\n    let { allMessages } = this.state;\n    const Messages = Parse.Object.extend('Messages');\n    const query = new Parse.Query(Messages);\n    // here you put the objectId that you want to delete\n    query.get(id).then((object) => {\n      object.destroy().then((response) => {\n\n        console.log('Deleted Messages', response);\n        for (var i = 0; i < allMessages.length; i++) {\n          if (id === allMessages[i].id) {\n            allMessages.splice(i, 1);\n            break;\n          }\n        }\n        this.setState({ allMessages });\n      }, (error) => {\n\n        console.error('Error while deleting Messages', error);\n      });\n    });\n  }\n\n  //marks the message deleted. it will not show only in the recieving side at conversation. happens when\n  //the receiving side initiated the delete\n  markDeleted = (id) => {\n    let { allMessages } = this.state;\n    const Messages = Parse.Object.extend('Messages');\n    const query = new Parse.Query(Messages);\n    // here you put the objectId that you want to update\n    query.get(id).then((object) => {\n      object.set('deleted', true);\n      object.save().then((response) => {\n        // You can use the \"get\" method to get the value of an attribute\n        // Ex: response.get(\"<ATTRIBUTE_NAME>\")\n\n        console.log('Updated Messages', response);\n        for (var i = 0; i < allMessages.length; i++) {\n          if (id === allMessages[i].id) {\n            allMessages.splice(i, 1);\n            break;\n          }\n        }\n        this.setState({ allMessages });\n      }, (error) => {\n\n        console.error('Error while updating Messages', error);\n      });\n    });\n  }\n\n  //add message\n  addMessage = (text, fromID, toID) => {\n    console.log(text);\n    console.log(fromID);\n    console.log(toID);\n    let { allMessages } = this.state;\n    const User2 = new Parse.User();\n    const User1 = new Parse.User();\n    const query2 = new Parse.Query(User2);\n    const query1 = new Parse.Query(User1);\n    let from, to;\n\n    query1.get(fromID).then((from1) => {\n      from = from1;\n      console.log('User found', from1);\n      query2.get(toID).then((to1) => {\n        to = to1;\n        console.log('User found', to1);\n\n        const Messages = Parse.Object.extend('Messages');\n        const myNewObject = new Messages();\n        myNewObject.set('from', from);\n        myNewObject.set('to', to);\n        myNewObject.set('text', text);\n        myNewObject.set('read', false);\n        myNewObject.set('deleted', false);\n        myNewObject.set('recieved', false);\n        myNewObject.save().then(\n          (result) => {\n            console.log('Messages created', result);\n            allMessages.push(new Message(result));\n            this.setState({ allMessages });\n            // alert(\"The Message: '\"+text+\"' has been sent\");\n\n          },\n          (error) => {\n            console.error('Error while creating Messages: ', error);\n          });\n      }, (error) => {\n\n        console.error('Error while fetching user', error);\n      });\n\n    }, (error) => {\n\n      console.error('Error while fetching user', error);\n    });\n\n  }\n\n  //mark all messages in conversation that are still not read as read\n  messageRead = (message) => {\n    const Messages = Parse.Object.extend('Messages');\n    const query = new Parse.Query(Messages);\n    // here you put the objectId that you want to update\n    let { allMessages } = this.state;\n    for (var i = 0; i < allMessages.length; i++) {\n      if (allMessages[i].id === message.id) {\n        allMessages[i].read = true;\n        break;\n      }\n    }\n    query.get(message.id).then((object) => {\n      object.set('read', true);\n      object.save().then((response) => {\n        // You can use the \"get\" method to get the value of an attribute\n        // Ex: response.get(\"<ATTRIBUTE_NAME>\")\n        console.log('Updated Messages', response);\n      }, (error) => {\n        console.error('Error while updating Messages', error);\n      });\n    });\n    this.setState({ allMessages });\n  }\n\n  //add to cart a diamond\n  addToCart = (diamondId) => {\n    console.log(\"diamond id to add to cart\");\n    console.log(diamondId)\n    let { activeUser, cart } = this.state;\n    if (!cart) cart = [];\n    if (!cart.includes(diamondId)) {\n      cart.push(diamondId);\n      console.log(cart);\n      if (activeUser) {\n        const User = new Parse.User();\n        const query = new Parse.Query(User);\n\n        // Finds the user by its ID\n        query.get(activeUser.id).then((user) => {\n          // Updates the data we want\n          user.set('cart', cart);\n          // Saves the user with the updated data\n          user.save().then((response) => {\n\n            console.log('Updated user', response);\n          }).catch((error) => {\n\n            console.error('Error while updating user', error);\n          });\n        });\n\n      }\n    }\n    this.setState({ cart });\n  }\n\n  //delete from cart\n  deleteFromCart = (item) => {\n    let { cart, activeUser } = this.state;\n    var index = cart.indexOf(item);\n    if (index > -1) {\n      cart.splice(index, 1);\n      if (!activeUser) {\n        this.setState({ cart })\n      }\n      else {\n        const User = new Parse.User();\n        const query = new Parse.Query(User);\n\n        // Finds the user by its ID\n        query.get(activeUser.id).then((user) => {\n          // Updates the data we want\n          user.set('cart', cart);\n          // Saves the user with the updated data\n          user.save().then((response) => {\n            console.log('Updated user', response);\n            this.setState({ cart })\n          }).catch((error) => {\n            console.error('Error while updating user', error);\n          });\n        });\n      }\n    }\n  }\n  render() {\n\n    const { activeUser, allUsers, isLoading, allMessages, cart } = this.state;\n\n    return (\n\n\n      <Switch>\n        <Route exact path=\"/\" ><Home cart={cart} allMessages={allMessages} activeUser={activeUser} handleLogout={this.handleLogout}></Home></Route>\n        <Route exact path=\"/home\" ><Home cart={cart} allMessages={allMessages} activeUser={activeUser} handleLogout={this.handleLogout}></Home></Route>\n        <Route exact path=\"/messages\" ><Messages cart={cart} allMessages={allMessages} allUsers={allUsers} activeUser={activeUser} handleLogout={this.handleLogout}></Messages></Route>\n        <Route exact path=\"/messages/:id\" ><UserMessages cart={cart} markDeleted={this.markDeleted} deleteMessage={this.deleteMessage} messageRead={this.messageRead} addMessage={this.addMessage} allMessages={allMessages} allUsers={allUsers} activeUser={activeUser} handleLogout={this.handleLogout}></UserMessages></Route>\n        <Route exact path=\"/search\"><Search cart={cart} addToCart={this.addToCart} addMessage={this.addMessage} allMessages={allMessages} ownerName={this.ownerName} activeUser={activeUser} handleLogout={this.handleLogout}></Search></Route>\n        <Route exact path=\"/login\"> <LoginPage cart={cart} allMessages={allMessages} handleLogout={this.handleLogout} activeUser={activeUser} users={allUsers} handleLogin={this.handleLogin}></LoginPage></Route>\n        <Route exact path=\"/signup\"> <SignupPage cart={cart} allMessages={allMessages} handleLogout={this.handleLogout} activeUser={activeUser} users={allUsers} handleLogin={this.handleLogin}></SignupPage></Route>\n        <Route exact path=\"/cart\"><ShoppingCart deleteFromCart={this.deleteFromCart} cart={cart} allMessages={allMessages} ownerName={this.ownerName} activeUser={activeUser} handleLogout={this.handleLogout}></ShoppingCart></Route>\n        <Route exact path=\"/home\" ><Home cart={cart} allMessages={allMessages} activeUser={activeUser} handleLogout={this.handleLogout}></Home></Route>\n        <Route exact path=\"/about\" ><About cart={cart} allMessages={allMessages} allUsers={allUsers} activeUser={activeUser} handleLogout={this.handleLogout}></About></Route>\n        <Route exact path=\"/load\" ><LoadExcel cart={cart} allMessages={allMessages} allUsers={allUsers} activeUser={activeUser} handleLogout={this.handleLogout}></LoadExcel></Route>\n      </Switch>\n\n      // </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport Parse from 'parse';\nimport 'react-credit-cards/es/styles-compiled.css';\n\n\nParse.serverURL = 'https://parseapi.back4app.com'; // This is your Server URL\nParse.initialize(\n  'qQ2AMgDUa2kxuxt0HEsorOw7uB5vXOhipV8Zm6CF', // This is your Application ID\n  'LUBw95iUPTq6eBVPdBhmC4WKPKJgIRPniD2ditwl' // This is your Javascript key\n);\n\n\nReactDOM.render(<HashRouter><App /></HashRouter>, document.getElementById('root'));\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}